<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wilson&#39;bolg</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cooli-willson.github.io/"/>
  <updated>2020-01-27T15:57:58.430Z</updated>
  <id>https://cooli-willson.github.io/</id>
  
  <author>
    <name>Wilson</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>12.ECMAScript 6</title>
    <link href="https://cooli-willson.github.io/2020/01/27/12.ECMAScript%206/"/>
    <id>https://cooli-willson.github.io/2020/01/27/12.ECMAScript%206/</id>
    <published>2020-01-27T15:56:42.163Z</published>
    <updated>2020-01-27T15:57:58.430Z</updated>
    
    <content type="html"><![CDATA[<h2 id="严格模式"><a class="markdownIt-Anchor" href="#严格模式"></a> 严格模式</h2><blockquote><p><strong>开启严格模式，当使用SE6模块化开发时，严格模式不需要写，自动启用</strong></p></blockquote><h4 id="如果不使用var-let-const定义变量和常量就不能直接使用"><a class="markdownIt-Anchor" href="#如果不使用var-let-const定义变量和常量就不能直接使用"></a> 如果不使用var、let、const定义变量和常量就不能直接使用</h4><ul><li><h4 id="开启严格模式的方式-use-strict"><a class="markdownIt-Anchor" href="#开启严格模式的方式-use-strict"></a> 开启严格模式的方式     “use strict”;</h4></li></ul><h2 id="-0-"><a class="markdownIt-Anchor" href="#-0-"></a> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不允许使用未声明变量</span></span><br><span class="line">x=<span class="number">3</span>;</span><br><span class="line">        y=<span class="number">4</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(x+y);   </span><br><span class="line"></span><br><span class="line"><span class="comment">// 不允许出现函数中参数名相同</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a,a</span>)</span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        fn(<span class="number">3</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure></h2><h4 id="不允许使用with"><a class="markdownIt-Anchor" href="#不允许使用with"></a> 不允许使用with</h4><h2 id="-1-"><a class="markdownIt-Anchor" href="#-1-"></a> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div=<span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        <span class="comment">// div.style.width="50px";</span></span><br><span class="line">        <span class="comment">// div.style.height="50px";</span></span><br><span class="line">        <span class="comment">// div.style.backgroundColor="red";</span></span><br><span class="line">        <span class="keyword">with</span>(div.style)&#123;</span><br><span class="line">            width=<span class="string">"50px"</span>;</span><br><span class="line">            height=<span class="string">"50px"</span>;</span><br><span class="line">            backgroundColor=<span class="string">"red"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(div);</span><br></pre></td></tr></table></figure></h2><h4 id="不能对只读属性赋值"><a class="markdownIt-Anchor" href="#不能对只读属性赋值"></a> 不能对只读属性赋值</h4> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"aaaa"</span>;</span><br><span class="line">str.length=<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h5 id="还有哪些只读属性"><a class="markdownIt-Anchor" href="#还有哪些只读属性"></a> <strong>还有哪些只读属性？</strong></h5><ul><li><strong>冻结的属性也是只读属性</strong></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">          a:<span class="number">1</span>,</span><br><span class="line">          b:<span class="number">2</span></span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="built_in">Object</span>.freeze(obj);</span><br><span class="line">      obj.a=<span class="number">10</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>定义后的只读属性</strong></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;&#125;;</span><br><span class="line">      <span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</span><br><span class="line">          writable:<span class="literal">false</span>,</span><br><span class="line">          value:<span class="number">10</span></span><br><span class="line">      &#125;)</span><br><span class="line">      obj.a=<span class="number">20</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>对象中只有get方法，没有set方法，因此，也是只读属性</strong></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">            <span class="keyword">get</span> a()&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        obj.a=<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h2 id="let-const-箭头函数"><a class="markdownIt-Anchor" href="#let-const-箭头函数"></a> let &amp;&amp; const &amp;&amp; 箭头函数</h2><h3 id="let"><a class="markdownIt-Anchor" href="#let"></a> let</h3><blockquote><p><strong>定义一个有范围变量。不是window的属性</strong></p></blockquote> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a=<span class="number">3</span>;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="built_in">window</span>.a);<span class="comment">//undefined</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="let定义的变量仅限于循环及花括号语句块内"><a class="markdownIt-Anchor" href="#let定义的变量仅限于循环及花括号语句块内"></a> let定义的变量仅限于循环及花括号语句块内</h4></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            sum+=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(sum,i);</span><br></pre></td></tr></table></figure><ul><li><h4 id="let定义的变量仅作用于语句块内"><a class="markdownIt-Anchor" href="#let定义的变量仅作用于语句块内"></a> let定义的变量仅作用于语句块内</h4></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a=<span class="number">3</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> b=<span class="number">5</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(a);<span class="comment">//3</span></span><br><span class="line">            <span class="keyword">if</span>(b&lt;<span class="number">10</span>)&#123;</span><br><span class="line">                <span class="keyword">let</span> a=<span class="number">20</span>;</span><br><span class="line">                <span class="comment">// let定义的变量仅作用于语句块内</span></span><br><span class="line">                <span class="built_in">console</span>.log(a);<span class="comment">//20</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">console</span>.log(a);<span class="comment">//3</span></span><br><span class="line">            </span><br><span class="line"><span class="keyword">let</span> a=<span class="number">20</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> a=<span class="number">10</span>;</span><br><span class="line">           <span class="built_in">console</span>.log(a); <span class="comment">//10</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(a); <span class="comment">//20</span></span><br><span class="line">        fn();</span><br></pre></td></tr></table></figure><h3 id="const"><a class="markdownIt-Anchor" href="#const"></a> const</h3><blockquote><p><strong>常量 不可以修改</strong></p></blockquote><ul><li><h4 id="不能修改引用地址但是可以修改对象属性"><a class="markdownIt-Anchor" href="#不能修改引用地址但是可以修改对象属性"></a> 不能修改引用地址，但是可以修改对象属性</h4></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj=&#123;</span><br><span class="line">             a:<span class="number">1</span>,<span class="attr">b</span>:<span class="number">2</span></span><br><span class="line">         &#125;</span><br><span class="line">         obj.a=<span class="number">10</span>;</span><br><span class="line">         <span class="comment">//将对象定义为常量不能被清除</span></span><br></pre></td></tr></table></figure><h3 id="箭头函数"><a class="markdownIt-Anchor" href="#箭头函数"></a> 箭头函数</h3><blockquote><p><strong>函数的参数，如果只有一个参数，可以不写括号</strong><br><strong>函数的参数，如果没有参数或者参数在一个上，就需要加括号</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">函数的参数，如果只有一个参数，可以不写括号</span><br><span class="line"><span class="keyword">var</span> fn=<span class="function"><span class="params">a</span>=&gt;</span>a+<span class="number">3</span>;</span><br><span class="line">函数的参数，如果没有参数或者参数在一个以上，就需要加括号</span><br><span class="line"><span class="keyword">var</span> fn=<span class="function"><span class="params">()</span>=&gt;</span><span class="number">3</span>+<span class="number">4</span>;</span><br><span class="line"><span class="keyword">var</span> fn=<span class="function">(<span class="params">a,b</span>)=&gt;</span>a+b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fn=<span class="function"><span class="keyword">function</span> (<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="箭头函数中如果函数内容只有一句话并且返回该一句话的内容就可以不用加并且不需要写return"><a class="markdownIt-Anchor" href="#箭头函数中如果函数内容只有一句话并且返回该一句话的内容就可以不用加并且不需要写return"></a> 箭头函数中，如果函数内容只有一句话，并且返回该一句话的内容，就可以不用加｛｝，并且不需要写return</h5></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; var fn&#x3D;(a,b)&#x3D;&gt;a+b;</span><br></pre></td></tr></table></figure><ul><li><h5 id="如果箭头函数中有多句代码或者不返回任何内容就需要加"><a class="markdownIt-Anchor" href="#如果箭头函数中有多句代码或者不返回任何内容就需要加"></a> 如果箭头函数中有多句代码，或者不返回任何内容，就需要加｛｝</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fn=<span class="function">(<span class="params">a,b</span>)=&gt;</span>&#123;</span><br><span class="line">             <span class="keyword">var</span> sum=a+b;</span><br><span class="line">             <span class="built_in">console</span>.log(sum);</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="箭头函数的用法有哪些"><a class="markdownIt-Anchor" href="#箭头函数的用法有哪些"></a> 箭头函数的用法有哪些</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">345</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">54</span>,<span class="number">32</span>];</span><br><span class="line">       <span class="comment">// var arr1=arr.map(item=&gt;item+10);   //遍历整个数组并且将每个元素+10</span></span><br><span class="line">       arr.sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span>b-a);              <span class="comment">//排序，并规定排序方式为从达到小排序</span></span><br><span class="line">       <span class="comment">// console.log(arr);</span></span><br><span class="line">       <span class="keyword">var</span> arr1=arr.filter(<span class="function"><span class="params">item</span>=&gt;</span>item&gt;<span class="number">2</span>); <span class="comment">//筛选所有数组中大于2的元素并将数组储存到arr1中</span></span><br><span class="line">       <span class="built_in">console</span>.log(arr1);</span><br></pre></td></tr></table></figure><ul><li><h5 id="匿名函数中使用函数箭头"><a class="markdownIt-Anchor" href="#匿名函数中使用函数箭头"></a> 匿名函数中使用函数箭头</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">                    s:<span class="number">1</span>,</span><br><span class="line">                    a:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="keyword">this</span>.s);  <span class="comment">//这里的this是obj</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    b:<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="keyword">this</span>);     <span class="comment">//这里的this是window</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        </span><br><span class="line">                obj.b();</span><br><span class="line">                obj.a();</span><br></pre></td></tr></table></figure><ul><li><h5 id="箭头函数改变了this的指向"><a class="markdownIt-Anchor" href="#箭头函数改变了this的指向"></a> 箭头函数改变了this的指向</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span>  obj=&#123;</span><br><span class="line">                    a:<span class="number">1</span>,</span><br><span class="line">                    b:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                            <span class="comment">// console.log(this.a);   //undefined</span></span><br><span class="line">                            <span class="comment">// console.log(this);  //这里的this指向的是window</span></span><br><span class="line">                        &#125;,<span class="number">500</span>)</span><br><span class="line">        </span><br><span class="line">                        <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line">                        arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                            <span class="comment">// console.log(item+this.a); //打印4次NaN</span></span><br><span class="line">                            <span class="comment">// console.log(this);    //这里的this指向的是window</span></span><br><span class="line">                        &#125;)</span><br><span class="line">                        arr.forEach(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">                            <span class="comment">// console.log(item+this.a);   //arr的每个元素+a</span></span><br><span class="line">                            <span class="comment">// console.log(this); //函数箭头改变列this指向，指向箭头函数外层的this--&gt;obj</span></span><br><span class="line">                        &#125;)</span><br><span class="line">                        <span class="keyword">this</span></span><br><span class="line">                        setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">                            <span class="comment">// console.log(this.a);</span></span><br><span class="line">                            <span class="comment">// console.log(this);  //函数箭头改变列this指向，指向箭头函数外层的this--&gt;obj</span></span><br><span class="line">                        &#125;,<span class="number">500</span>)</span><br><span class="line">                        <span class="comment">// 箭头函数改变了this指向，将指向箭头函数外层的this</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                obj.b();</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Utils=&#123;</span><br><span class="line">             ce:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">var</span> div=<span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">                 <span class="built_in">Object</span>.assign(div.style,&#123;</span><br><span class="line">                     width:<span class="string">"50px"</span>,</span><br><span class="line">                     height:<span class="string">"50px"</span>,</span><br><span class="line">                     backgroundColor:<span class="string">"red"</span></span><br><span class="line">                 &#125;);</span><br><span class="line">                 div.self=<span class="keyword">this</span>;</span><br><span class="line">                 div.addEventListener(<span class="string">"click"</span>,<span class="keyword">this</span>.clickHandler);<span class="comment">//原始的</span></span><br><span class="line">                 </span><br><span class="line">                 div.addEventListener(<span class="string">"click"</span>,e=&gt;<span class="keyword">this</span>.clickHandler(e));<span class="comment">//普通的箭头匿名函数</span></span><br><span class="line"> </span><br><span class="line">                 <span class="keyword">this</span>.handler=<span class="function"><span class="params">e</span>=&gt;</span>&#123;<span class="keyword">this</span>.clickHandler(e)&#125;;<span class="comment">//定义的箭头函数，可以removeEventListener</span></span><br><span class="line">                 div.addEventListener(<span class="string">"click"</span>,<span class="keyword">this</span>.handler);</span><br><span class="line"> </span><br><span class="line">                 div.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">                     <span class="comment">// console.log(this);//div</span></span><br><span class="line">                     <span class="keyword">this</span>.clickHandler(e);</span><br><span class="line">                 &#125;)</span><br><span class="line">                 <span class="keyword">this</span>.c(<span class="number">10</span>);</span><br><span class="line">                 <span class="built_in">document</span>.body.appendChild(div);</span><br><span class="line">             &#125;,</span><br><span class="line">             clickHandler:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">                 <span class="built_in">console</span>.log(<span class="keyword">this</span>)<span class="comment">//这里的this被指向div</span></span><br><span class="line">                <span class="comment">//  this.self-&gt;Utils</span></span><br><span class="line">                <span class="comment">//  当使用箭头函数后，这里的this被指向为原有的Utils对象</span></span><br><span class="line">                 <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">             &#125;,</span><br><span class="line">             c:<span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">                 <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line"> </span><br><span class="line">         Utils.ce();</span><br></pre></td></tr></table></figure><h2 id="解构赋值"><a class="markdownIt-Anchor" href="#解构赋值"></a> 解构赋值</h2><blockquote><p><strong>他是一种针对数组或者对象进行模式匹配，然后对其中的变量进行赋值</strong><br><a href="%3Cahref=%22https://www.runoob.com/w3cnote/deconstruction-assignment.html%22%3Ehttps://www.runoob.com/w3cnote/deconstruction-assignment.html%3C/a%3E">解构网络参考资料</a></p></blockquote><h3 id="数组模型的解构"><a class="markdownIt-Anchor" href="#数组模型的解构"></a> 数组模型的解构</h3><blockquote><h4 id="基本"><a class="markdownIt-Anchor" href="#基本"></a> 基本</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [a, b, c] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]; </span><br><span class="line"><span class="comment">// a = 1;</span></span><br><span class="line"><span class="comment">// b = 2;</span></span><br><span class="line"><span class="comment">// c = 3;</span></span><br></pre></td></tr></table></figure><blockquote><h4 id="可嵌套"><a class="markdownIt-Anchor" href="#可嵌套"></a> 可嵌套</h4></blockquote> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [a, [[b], c]] = [<span class="number">1</span>, [[<span class="number">2</span>], <span class="number">3</span>]]; <span class="comment">// a = 1 // b = 2 // c = 3</span></span><br></pre></td></tr></table></figure><blockquote><h4 id="可忽略"><a class="markdownIt-Anchor" href="#可忽略"></a> 可忽略</h4></blockquote> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [a, , b] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]; <span class="comment">// a = 1 // b = 3</span></span><br></pre></td></tr></table></figure><blockquote><h4 id="不完全解构"><a class="markdownIt-Anchor" href="#不完全解构"></a> 不完全解构</h4></blockquote> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [a, , b] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]; <span class="comment">// a = 1 // b = 3</span></span><br></pre></td></tr></table></figure><blockquote><h4 id="剩余运算符"><a class="markdownIt-Anchor" href="#剩余运算符"></a> 剩余运算符</h4></blockquote> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [a, ...b] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]; <span class="comment">//a = 1 //b = [2, 3]</span></span><br></pre></td></tr></table></figure><blockquote><h4 id="字符串等"><a class="markdownIt-Anchor" href="#字符串等"></a> 字符串等</h4></blockquote> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [a, b, c, d, e] = <span class="string">'hello'</span>; <span class="comment">// a = 'h' // b = 'e' // c = 'l' // d = 'l' // e = 'o'</span></span><br></pre></td></tr></table></figure><h3 id="对象模型的解构"><a class="markdownIt-Anchor" href="#对象模型的解构"></a> 对象模型的解构</h3><blockquote><h4 id="基本-2"><a class="markdownIt-Anchor" href="#基本-2"></a> 基本</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123; foo, bar &#125; = &#123; <span class="attr">foo</span>: <span class="string">'aaa'</span>, <span class="attr">bar</span>: <span class="string">'bbb'</span> &#125;; <span class="comment">// foo = 'aaa' // bar = 'bbb' let &#123; baz : foo &#125; = &#123; baz : 'ddd' &#125;; // foo = 'ddd'</span></span><br></pre></td></tr></table></figure><blockquote><h4 id="可嵌套可忽略"><a class="markdownIt-Anchor" href="#可嵌套可忽略"></a> 可嵌套可忽略</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">p</span>: [<span class="string">'hello'</span>, &#123;<span class="attr">y</span>: <span class="string">'world'</span>&#125;] &#125;; <span class="keyword">let</span> &#123;<span class="attr">p</span>: [x, &#123; y &#125;] &#125; = obj; <span class="comment">// x = 'hello' // y = 'world' let obj = &#123;p: ['hello', &#123;y: 'world'&#125;] &#125;; let &#123;p: [x, &#123; &#125;] &#125; = obj; // x = 'hello'</span></span><br></pre></td></tr></table></figure><blockquote><h4 id="剩余运算符-2"><a class="markdownIt-Anchor" href="#剩余运算符-2"></a> 剩余运算符</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123;a, b, ...rest&#125; = &#123;<span class="attr">a</span>: <span class="number">10</span>, <span class="attr">b</span>: <span class="number">20</span>, <span class="attr">c</span>: <span class="number">30</span>, <span class="attr">d</span>: <span class="number">40</span>&#125;; <span class="comment">// a = 10 // b = 20 // rest = &#123;c: 30, d: 40&#125;</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="数组解构赋值是按照顺序赋值"><a class="markdownIt-Anchor" href="#数组解构赋值是按照顺序赋值"></a> 数组解构赋值是按照顺序赋值</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [a,b,c]=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">       <span class="built_in">console</span>.log(a,b,c);</span><br></pre></td></tr></table></figure><ul><li><h5 id="赋值解构可以用来计算函数任意个参数之和"><a class="markdownIt-Anchor" href="#赋值解构可以用来计算函数任意个参数之和"></a> 赋值解构可以用来计算函数任意个参数之和</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">...num</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sumNum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;num.length;i++)&#123;</span><br><span class="line">        sumNum += <span class="built_in">parseInt</span>(num[i])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(sumNum)</span><br><span class="line"> &#125;</span><br><span class="line">sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)      <span class="comment">//6</span></span><br><span class="line">sum(<span class="number">1</span>,<span class="number">2</span>,<span class="string">"3"</span>)     <span class="comment">//6</span></span><br><span class="line">sum(<span class="number">1</span>,<span class="number">3</span>,<span class="string">"6和4"</span>)   <span class="comment">//10</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="赋值解构可以用来计算函数参数之和"><a class="markdownIt-Anchor" href="#赋值解构可以用来计算函数参数之和"></a> 赋值解构可以用来计算函数参数之和</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sum</span>(<span class="params">...nums</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> sum = nums.reduce(<span class="function">(<span class="params">x,y</span>)=&gt;</span>&#123;<span class="keyword">return</span> x+y&#125;)</span><br><span class="line">  <span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="解构赋值可以用来做交换"><a class="markdownIt-Anchor" href="#解构赋值可以用来做交换"></a> 解构赋值可以用来做交换</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>];</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> len=arr.length<span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">while</span>(len&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(arr[i]&lt;arr[i+<span class="number">1</span>])&#123;</span><br><span class="line">              <span class="comment">// var temp=arr[i];</span></span><br><span class="line">              <span class="comment">// arr[i]=arr[i+1];</span></span><br><span class="line">              <span class="comment">// arr[i+1]=temp;</span></span><br><span class="line">              [arr[i],arr[i+<span class="number">1</span>]]=[arr[i+<span class="number">1</span>],arr[i]];</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      len--;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><ul><li><h5 id="传参时解构赋值可以让参数传递顺序不同"><a class="markdownIt-Anchor" href="#传参时解构赋值可以让参数传递顺序不同"></a> 传参时，解构赋值可以让参数传递顺序不同</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abc</span>(<span class="params">&#123;a,b,c=<span class="number">10</span>&#125;</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a,c);</span><br><span class="line">        &#125;</span><br><span class="line">        abc(&#123;<span class="attr">a</span>:<span class="number">5</span>,<span class="attr">c</span>:<span class="number">6</span>,<span class="attr">b</span>:<span class="number">20</span>&#125;);</span><br></pre></td></tr></table></figure><h2 id="字符串方法和symbol"><a class="markdownIt-Anchor" href="#字符串方法和symbol"></a> 字符串方法和Symbol</h2><blockquote><p><strong>字符串扩展方法</strong></p></blockquote><ul><li><h5 id="字符的-unicode表示法"><a class="markdownIt-Anchor" href="#字符的-unicode表示法"></a> 字符的 Unicode表示法</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"\u4e00"</span>  <span class="comment">//16进制unicode编码</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="includes"><a class="markdownIt-Anchor" href="#includes"></a> includes()</h5></li><li><strong>表示是否找找到了参数字符串</strong></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"abcdef"</span>.includes(<span class="string">"bc"</span>));</span><br></pre></td></tr></table></figure><ul><li><h5 id="startwidth"><a class="markdownIt-Anchor" href="#startwidth"></a> startWidth()</h5></li><li><strong>表示参数字符串是否在原字符串的头部</strong></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"abcde"</span>.startsWith(<span class="string">"a"</span>));<span class="comment">//字符串是否是0开始</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"abcde"</span>.startsWith(<span class="string">"b"</span>,<span class="number">1</span>));<span class="comment">//字符串在第几位是否从b开始</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="endswidth"><a class="markdownIt-Anchor" href="#endswidth"></a> endsWidth()</h5></li><li><strong>表示参数字符串是否在原字符串的尾部</strong></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"abcde"</span>.endsWith(<span class="string">"e"</span>));<span class="comment">//以e为结尾</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"abcde"</span>.endsWith(<span class="string">"d"</span>,<span class="number">4</span>));<span class="comment">//从第四位开始是否是最尾部</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="repeat"><a class="markdownIt-Anchor" href="#repeat"></a> repeat()</h5></li><li><strong>表示将原字符串重复几次，返回新的字符串</strong></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log((<span class="number">18</span>).toString(<span class="number">16</span>).padStart(<span class="number">2</span>,<span class="string">"0"</span>));</span><br></pre></td></tr></table></figure><ul><li><h5 id="padstart"><a class="markdownIt-Anchor" href="#padstart"></a> padStart()</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">10000000</span>).toString().padStart(<span class="number">7</span>,<span class="string">"0"</span>))</span><br></pre></td></tr></table></figure><ul><li><h5 id="padend"><a class="markdownIt-Anchor" href="#padend"></a> padEnd()</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">10000000</span>).toString().padEnd(<span class="number">7</span>,<span class="string">"0"</span>))</span><br></pre></td></tr></table></figure><ul><li><h5 id="字符模板"><a class="markdownIt-Anchor" href="#字符模板"></a> 字符模板</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> age=<span class="number">20</span>;</span><br><span class="line">        <span class="keyword">var</span> str=<span class="string">"小明今年"</span>+age+<span class="string">"岁了"</span>;</span><br><span class="line">        <span class="keyword">var</span> str=<span class="string">`小明今年<span class="subst">$&#123;age&#125;</span>岁了`</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(str);</span><br><span class="line">        <span class="keyword">var</span> data=&#123;<span class="attr">price</span>:<span class="number">20</span>&#125;;</span><br><span class="line">        <span class="keyword">var</span> str=<span class="string">`&lt;div&gt;<span class="subst">$&#123;data.price&#125;</span>&lt;div&gt;`</span></span><br><span class="line">        </span><br><span class="line"> <span class="keyword">var</span> obj=&#123;<span class="attr">a</span>:<span class="number">1</span>,<span class="attr">b</span>:<span class="number">2</span>,<span class="attr">c</span>:&#123;<span class="attr">d</span>:<span class="number">1</span>&#125;&#125;;</span><br><span class="line">        <span class="comment">// 浅复制,其次使用...进行复制时，地址也会发生改变，形成新对象</span></span><br><span class="line">        <span class="keyword">var</span> obj2=obj1=&#123;<span class="attr">e</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        obj1=&#123;...obj&#125;; <span class="comment">//将obj的所有元素浅复制给obj1</span></span><br><span class="line">        obj.c.d=<span class="number">10</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(obj1===obj2);</span><br></pre></td></tr></table></figure><h3 id="symbol"><a class="markdownIt-Anchor" href="#symbol"></a> Symbol</h3><blockquote><p><strong>表示独一无二的值，最大的用法是用来定义对象的唯一属性名。</strong></p></blockquote><ul><li><h5 id="基本用法"><a class="markdownIt-Anchor" href="#基本用法"></a> 基本用法</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="built_in">Symbol</span>(<span class="string">"a"</span>);</span><br><span class="line"><span class="keyword">var</span> b=<span class="built_in">Symbol</span>(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">var</span> c=<span class="built_in">Symbol</span>(<span class="string">"a"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a==c);</span><br><span class="line"><span class="built_in">console</span>.log(b.toString());</span><br></pre></td></tr></table></figure><ul><li><h5 id="简单案例"><a class="markdownIt-Anchor" href="#简单案例"></a> 简单案例</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">const</span> LEFT=<span class="built_in">Symbol</span>();</span><br><span class="line">        <span class="keyword">const</span> UP=<span class="built_in">Symbol</span>();</span><br><span class="line">        <span class="keyword">const</span> RIGHT=<span class="built_in">Symbol</span>();</span><br><span class="line">        <span class="keyword">const</span> DOWN=<span class="built_in">Symbol</span>();</span><br><span class="line">        <span class="keyword">var</span> state;</span><br><span class="line">        <span class="comment">// state="left"  state=LEFT;</span></span><br><span class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">"keyup"</span>,keyHandler);</span><br><span class="line">        setInterval(animation,<span class="number">16</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">keyHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">switch</span>(e.keyCode)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">37</span>:</span><br><span class="line">                state=LEFT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">38</span>:</span><br><span class="line">                state=UP;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">39</span>:</span><br><span class="line">                state=RIGHT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">40</span>:</span><br><span class="line">                state=DOWN;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">animation</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!state) <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">switch</span>(state)&#123;</span><br><span class="line">                <span class="keyword">case</span> LEFT:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RIGHT:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> UP:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> DOWN:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="set-map"><a class="markdownIt-Anchor" href="#set-map"></a> set &amp;&amp; Map</h2><blockquote><h4 id="数组和对象"><a class="markdownIt-Anchor" href="#数组和对象"></a> <strong>数组和对象</strong></h4><blockquote><p><strong>数组的优点</strong></p><blockquote><p>1.有顺序<br>2.紧密性<br>3.有关联</p><p><strong>数组的缺点</strong><br>1.速度慢，查询，添加，删除<br>2.有重复<br>3.判断值时，必须遍历数组</p><p><strong>对象的优点</strong><br>1.有键值对，查询快，插入和删除也很快<br>2.键唯一<br>3.多重集合</p><p><strong>对象的缺点</strong><br>1.没有关联<br>2.按照添加顺序遍历（顺序无法改变）<br>3.如果需要查询属性时，需要遍历</p></blockquote></blockquote></blockquote><h3 id="set"><a class="markdownIt-Anchor" href="#set"></a> set</h3><blockquote><p><strong>set是一个不能有重复元素的集合，重复添加无效</strong></p></blockquote><ul><li><h5 id="新建set"><a class="markdownIt-Anchor" href="#新建set"></a> 新建set</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span>  a=<span class="keyword">new</span> <span class="built_in">Set</span>()</span><br></pre></td></tr></table></figure><ul><li><h5 id="addvalue"><a class="markdownIt-Anchor" href="#addvalue"></a> add(value);</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a.add(<span class="number">10</span>);<span class="comment">//添加</span></span><br><span class="line">a.add(<span class="number">3</span>);<span class="comment">//值是不重复，如果有相同值时，不添加</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="delete"><a class="markdownIt-Anchor" href="#delete"></a> delete();</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.delete(<span class="number">4</span>);<span class="comment">//删除</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="hasvalue"><a class="markdownIt-Anchor" href="#hasvalue"></a> has(value);</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.has(<span class="number">3</span>);<span class="comment">//判断是否存在</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="clear"><a class="markdownIt-Anchor" href="#clear"></a> clear();</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.clear();<span class="comment">//清除</span></span><br></pre></td></tr></table></figure><ul><li>#####键值完全相同</li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">index,value,a</span>)</span>&#123;</span><br><span class="line">          <span class="comment">// 遍历键和值完全相同</span></span><br><span class="line">          <span class="built_in">console</span>.log(index,value,a);</span><br><span class="line">      &#125;)</span><br></pre></td></tr></table></figure><ul><li><h5 id="for-of-遍历"><a class="markdownIt-Anchor" href="#for-of-遍历"></a> for of 遍历</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> value <span class="keyword">of</span> a)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> value <span class="keyword">of</span> a.entries())&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="数组去重"><a class="markdownIt-Anchor" href="#数组去重"></a> 数组去重</h5></li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>];</span><br><span class="line">arr=<span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(arr));</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h3 id="weakset"><a class="markdownIt-Anchor" href="#weakset"></a> WeakSet();</h3><blockquote><p><strong>弱引用列表类型</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="keyword">new</span> <span class="built_in">WeakSet</span>(arr);</span><br><span class="line"></span><br><span class="line">arr[<span class="number">0</span>]=<span class="literal">null</span>;</span><br><span class="line">arr.shift();</span><br><span class="line"><span class="built_in">console</span>.log(a,arr);</span><br></pre></td></tr></table></figure><ul><li><h5 id="弱引用列表是不可遍历的"><a class="markdownIt-Anchor" href="#弱引用列表是不可遍历的"></a> 弱引用列表是不可遍历的</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> value <span class="keyword">of</span> a)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(value);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><h5 id="当将obj设为null-被维护weakset列表中会自动清除它"><a class="markdownIt-Anchor" href="#当将obj设为null-被维护weakset列表中会自动清除它"></a> 当将obj设为null 被维护WeakSet列表中会自动清除它</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> arr=[];</span><br><span class="line">arr.push(obj);</span><br><span class="line">obj=<span class="literal">null</span>;</span><br><span class="line">arr[<span class="number">0</span>]=<span class="literal">null</span>;</span><br><span class="line">arr.shift();</span><br><span class="line"></span><br><span class="line"><span class="comment">//弱引用关系，当将obj设为null 被维护WeakSet列表中会自动清除它</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> b=<span class="keyword">new</span> <span class="built_in">WeakSet</span>();</span><br><span class="line">b.add(obj);</span><br><span class="line">obj=<span class="literal">null</span>;</span><br><span class="line"><span class="comment">// delete window.obj;</span></span><br><span class="line"><span class="built_in">console</span>.log(b);</span><br></pre></td></tr></table></figure><h3 id="map-类型"><a class="markdownIt-Anchor" href="#map-类型"></a> map 类型</h3><blockquote><p><strong>需要有键值对，需要有长度，可以遍历属性列表，可以遍历数值列表，增删盖查速度快</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a=<span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">   a.set(<span class="string">"name"</span>,<span class="string">"xietian"</span>);</span><br><span class="line">   a.set(<span class="string">"age"</span>,<span class="number">30</span>);</span><br><span class="line">   a.set(<span class="string">"sex"</span>,<span class="string">"man"</span>);<span class="comment">//添加键值对</span></span><br><span class="line">   <span class="comment">// console.log(a.size);</span></span><br><span class="line">   <span class="comment">// console.log(a.get("age"));</span></span><br><span class="line">   <span class="comment">// console.log(a.has("age"));//只能用来查找键</span></span><br><span class="line">   <span class="comment">// a.delete("age");//删除键值对</span></span><br><span class="line">   <span class="comment">// a.clear();//清空</span></span><br><span class="line">   a.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value,key,a</span>)</span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(value,key,a);</span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">let</span> arr <span class="keyword">of</span> a)&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(arr);<span class="comment">//第0项是键，第1项是值</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">of</span> a.keys())&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(key);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">let</span> value <span class="keyword">of</span> a.values())&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(value);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 普通的map不能使用对象作为属性存储值</span></span><br><span class="line">   <span class="keyword">var</span> obj=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">   a.set(obj,<span class="number">10</span>);<span class="comment">//键被变为强引用</span></span><br><span class="line">   <span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 弱引用类型，将key设为对象，当对象清除后，弱引用map会自动清除</span></span><br><span class="line">   <span class="keyword">var</span> c=<span class="keyword">new</span> <span class="built_in">WeakMap</span>();</span><br><span class="line">   <span class="keyword">var</span> obj=&#123;<span class="attr">a</span>:<span class="number">10</span>&#125;;</span><br><span class="line">   c.set(obj,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">   obj=<span class="literal">null</span>;</span><br><span class="line">   <span class="built_in">console</span>.log(c);</span><br><span class="line">   <span class="comment">// 弱引用的类型不可以遍历</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;严格模式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#严格模式&quot;&gt;&lt;/a&gt; 严格模式&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;开启严格模式，当使用SE6模块化开发时，严格模式不需要写，自动启用&lt;/strong&gt;&lt;/p
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="ECMAScript 6" scheme="https://cooli-willson.github.io/tags/ECMAScript-6/"/>
    
  </entry>
  
  <entry>
    <title>11.正则表达式基础</title>
    <link href="https://cooli-willson.github.io/2020/01/27/11.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9F%BA%E7%A1%80/"/>
    <id>https://cooli-willson.github.io/2020/01/27/11.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9F%BA%E7%A1%80/</id>
    <published>2020-01-27T15:40:01.940Z</published>
    <updated>2020-01-27T15:58:35.411Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正则表达式基础"><a class="markdownIt-Anchor" href="#正则表达式基础"></a> 正则表达式基础</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">判断字符串是否符合规则</span><br><span class="line">var reg&#x3D;&#x2F;a&#x2F;g    &#x2F;&#x2F;字面量创建</span><br><span class="line"></span><br><span class="line">var reg&#x3D;new RegExp(&quot;a&quot;,&quot;g&quot;);&#x2F;&#x2F;构造函数创建</span><br></pre></td></tr></table></figure><h4 id="正则中分为两个部分一个是正则匹配内容另一个是修饰符部分"><a class="markdownIt-Anchor" href="#正则中分为两个部分一个是正则匹配内容另一个是修饰符部分"></a> 正则中分为两个部分，一个是正则匹配内容，另一个是修饰符部分</h4><h3 id="修饰符"><a class="markdownIt-Anchor" href="#修饰符"></a> 修饰符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i  不区分大小写</span><br><span class="line">g  全局  从头查到尾部</span><br><span class="line">m  匹配多行</span><br></pre></td></tr></table></figure><p>reg.flag &amp;&amp; reg.source</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">console.dir(reg);</span><br><span class="line">reg.flags  就是修饰符</span><br><span class="line">reg.source  就是正则匹配内容</span><br></pre></td></tr></table></figure><h4 id="regexex"><a class="markdownIt-Anchor" href="#regexex"></a> reg.exex()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg.exex() </span><br><span class="line">&#x2F;&#x2F;查找字符串中满足正则匹配内容的结果，并且返回一个数组</span><br><span class="line">&#x2F;&#x2F;这个数组只有一个元素，包括几个属性，分别是群组，索引，字符串自身</span><br></pre></td></tr></table></figure><h3 id="regtest"><a class="markdownIt-Anchor" href="#regtest"></a> reg.test()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg.test();</span><br><span class="line">&#x2F;&#x2F;判断字符串是否满足正则匹配内容</span><br></pre></td></tr></table></figure><h3 id="regexex-regtest-使用方法"><a class="markdownIt-Anchor" href="#regexex-regtest-使用方法"></a> reg.exex() &amp;&amp; reg.test() 使用方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var str&#x3D;&quot;abcd&quot;;</span><br><span class="line">        if(str.indexOf(&quot;a&quot;)&gt;-1)             </span><br><span class="line">        &#123;</span><br><span class="line">            console.log(&quot;aaa&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        if(&#x2F;a&#x2F;.test(str))&#123;                  &#x2F;&#x2F;字符串中是否有a</span><br><span class="line">            console.log(&quot;bbb&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var reg&#x3D;&#x2F;a&#x2F;g;</span><br><span class="line">        console.log(reg.test(&quot;abc&quot;));  &#x2F;&#x2F;true</span><br><span class="line">        </span><br><span class="line">        console.log(reg.exec(&quot;abca&quot;));   &#x2F;&#x2F;满足结果，返回数组</span><br></pre></td></tr></table></figure><h3 id="字符串的方法"><a class="markdownIt-Anchor" href="#字符串的方法"></a> 字符串的方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">str.search(); </span><br><span class="line">&#x2F;&#x2F;按照正则表达式查找字符串中的内容，返回有限查到的第一个元素的下标</span><br><span class="line">str.split();</span><br><span class="line">&#x2F;&#x2F;按照正则表达式匹配内容切割字符串</span><br><span class="line">str.replace();</span><br><span class="line">&#x2F;&#x2F;按照正则表达式匹配内容进行替换，可以替换成相同的也可以替换成不同的</span><br><span class="line">str.match()</span><br><span class="line">&#x2F;&#x2F;match()方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。</span><br></pre></td></tr></table></figure><h3 id="strsearch"><a class="markdownIt-Anchor" href="#strsearch"></a> str.search();</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(str.search(&#x2F;a&#x2F;));  &#x2F;&#x2F;返回找到的第一个字符串的下标  &#x2F;&#x2F;0</span><br></pre></td></tr></table></figure><h3 id="strsplit"><a class="markdownIt-Anchor" href="#strsplit"></a> str.split()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str.split(&quot;b&quot;)</span><br><span class="line">       console.log(str.split(&#x2F;[cf]&#x2F;));  &#x2F;&#x2F;返回一个数组   返回值为将c || f作为分隔符，将原数组进行分割，得到的分割后的数组</span><br></pre></td></tr></table></figure><h3 id="strreplace"><a class="markdownIt-Anchor" href="#strreplace"></a> str.replace();</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">var str&#x3D;&quot;abcdeafgh&quot;;</span><br><span class="line">        str&#x3D;str.replace(&#x2F;a&#x2F;g,&quot;z&quot;);      &#x2F;&#x2F;将字符串中的a替换为z       </span><br><span class="line">        console.log(str);</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str.replace(正则表达式,回调函数(item,index)&#123;</span><br><span class="line">               return &#x2F;&#x2F;返回要替换的内容</span><br><span class="line">        &#125;) </span><br><span class="line"> </span><br><span class="line"> console.log(str&#x3D;str.replace(&#x2F;a&#x2F;g,function(item,index)&#123;</span><br><span class="line">            return index&#x3D;&#x3D;&#x3D;0 ? &quot;x&quot; : &quot;y&quot;;   &#x2F;&#x2F;替换时将下标为0的元素替换为x,将其他元素替换为y</span><br><span class="line">        &#125;)); </span><br><span class="line">        </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 查找所有匹配正则元素的下标</span><br><span class="line">        &#x2F;* var arr&#x3D;[];</span><br><span class="line">        str.replace(&#x2F;a&#x2F;g,function(item,index)&#123;</span><br><span class="line">            arr.push(index);   &#x2F;&#x2F;将符合条件的元素的下标添加到arr中</span><br><span class="line">        &#125;)</span><br><span class="line">        console.log(arr); *&#x2F;</span><br><span class="line">       </span><br><span class="line">&#x2F;&#x2F; 把任何满足正则内容的进行替换</span><br><span class="line">        &#x2F;&#x2F; str&#x3D;str.replace(&#x2F;[bdfh]&#x2F;g,&quot;0&quot;);</span><br><span class="line">        &#x2F;&#x2F; console.log(str);        </span><br><span class="line">        </span><br><span class="line">&#x2F;&#x2F;查找元素并返回相应的值</span><br><span class="line">        var str&#x3D;&quot;abcabcadf&quot;;</span><br><span class="line">        str&#x3D;str.replace(&#x2F;[abc]&#x2F;g,function(item)&#123;   &#x2F;&#x2F;查找a 或者b 或者c</span><br><span class="line">            switch(item)&#123;</span><br><span class="line">                case &quot;a&quot;:return &quot;1&quot;; </span><br><span class="line">                case &quot;b&quot;:return &quot;2&quot;;</span><br><span class="line">                case &quot;c&quot;:return &quot;3&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        console.log(str);  &#x2F;&#x2F;1231231df</span><br></pre></td></tr></table></figure><h3 id="strmatch"><a class="markdownIt-Anchor" href="#strmatch"></a> str.match()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var str &#x3D; &quot;abcadef&quot;;</span><br><span class="line">       console.log(str.match(&#x2F;a&#x2F;g));</span><br><span class="line">       &#x2F;&#x2F;如果不加全局,可以达到exec的目的</span><br><span class="line">       &#x2F;&#x2F; 如果加有全局匹配,就会只返回找到的所有元素数组</span><br><span class="line">       &#x2F;&#x2F; 如果加有群组,但是不加全局,则除返回找到的元素外,还返回群组的元素</span><br></pre></td></tr></table></figure><h2 id="元字符"><a class="markdownIt-Anchor" href="#元字符"></a> 元字符</h2><h3 id="网络参考资料"><a class="markdownIt-Anchor" href="#网络参考资料"></a> 网络参考资料</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">字符描述</span><br><span class="line">\</span><br><span class="line">将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用、或一个八进制转义符。例如，&#39;n&#39; 匹配字符 &quot;n&quot;。&#39;\n&#39; 匹配一个换行符。序列 &#39;\\&#39; 匹配 &quot;\&quot; 而 &quot;\(&quot; 则匹配 &quot;(&quot;。</span><br><span class="line"></span><br><span class="line">^</span><br><span class="line">匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 &#39;\n&#39; 或 &#39;\r&#39; 之后的位置。</span><br><span class="line"></span><br><span class="line">$</span><br><span class="line">匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 &#39;\n&#39; 或 &#39;\r&#39; 之前的位置。</span><br><span class="line"></span><br><span class="line">*</span><br><span class="line">匹配前面的子表达式零次或多次。例如，zo* 能匹配 &quot;z&quot; 以及 &quot;zoo&quot;。* 等价于&#123;0,&#125;。</span><br><span class="line"></span><br><span class="line">+</span><br><span class="line">匹配前面的子表达式一次或多次。例如，&#39;zo+&#39; 能匹配 &quot;zo&quot; 以及 &quot;zoo&quot;，但不能匹配 &quot;z&quot;。+ 等价于 &#123;1,&#125;。</span><br><span class="line"></span><br><span class="line">?</span><br><span class="line">匹配前面的子表达式零次或一次。例如，&quot;do(es)?&quot; 可以匹配 &quot;do&quot; 或 &quot;does&quot; 。? 等价于 &#123;0,1&#125;。</span><br><span class="line"></span><br><span class="line">&#123;n&#125;</span><br><span class="line">n 是一个非负整数。匹配确定的 n 次。例如，&#39;o&#123;2&#125;&#39; 不能匹配 &quot;Bob&quot; 中的 &#39;o&#39;，但是能匹配 &quot;food&quot; 中的两个 o。</span><br><span class="line"></span><br><span class="line">&#123;n,&#125;</span><br><span class="line">n 是一个非负整数。至少匹配n 次。例如，&#39;o&#123;2,&#125;&#39; 不能匹配 &quot;Bob&quot; 中的 &#39;o&#39;，但能匹配 &quot;foooood&quot; 中的所有 o。&#39;o&#123;1,&#125;&#39; 等价于 &#39;o+&#39;。&#39;o&#123;0,&#125;&#39; 则等价于 &#39;o*&#39;。</span><br><span class="line"></span><br><span class="line">&#123;n,m&#125;</span><br><span class="line">m 和 n 均为非负整数，其中n &lt;&#x3D; m。最少匹配 n 次且最多匹配 m 次。例如，&quot;o&#123;1,3&#125;&quot; 将匹配 &quot;fooooood&quot; 中的前三个 o。&#39;o&#123;0,1&#125;&#39; 等价于 &#39;o?&#39;。请注意在逗号和两个数之间不能有空格。</span><br><span class="line"></span><br><span class="line">?</span><br><span class="line">当该字符紧跟在任何一个其他限制符 (*, +, ?, &#123;n&#125;, &#123;n,&#125;, &#123;n,m&#125;) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 &quot;oooo&quot;，&#39;o+?&#39; 将匹配单个 &quot;o&quot;，而 &#39;o+&#39; 将匹配所有 &#39;o&#39;。</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">匹配除换行符（\n、\r）之外的任何单个字符。要匹配包括 &#39;\n&#39; 在内的任何字符，请使用像&quot;(.|\n)&quot;的模式。</span><br><span class="line"></span><br><span class="line">(pattern)</span><br><span class="line">匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 &#39;\(&#39; 或 &#39;\)&#39;。</span><br><span class="line"></span><br><span class="line">(?:pattern)</span><br><span class="line">匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 &quot;或&quot; 字符 (|) 来组合一个模式的各个部分是很有用。例如， &#39;industr(?:y|ies) 就是一个比 &#39;industry|industries&#39; 更简略的表达式。</span><br><span class="line"></span><br><span class="line">(?&#x3D;pattern)</span><br><span class="line">正向肯定预查（look ahead positive assert），在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，&quot;Windows(?&#x3D;95|98|NT|2000)&quot;能匹配&quot;Windows2000&quot;中的&quot;Windows&quot;，但不能匹配&quot;Windows3.1&quot;中的&quot;Windows&quot;。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</span><br><span class="line"></span><br><span class="line">(?!pattern)</span><br><span class="line">正向否定预查(negative assert)，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如&quot;Windows(?!95|98|NT|2000)&quot;能匹配&quot;Windows3.1&quot;中的&quot;Windows&quot;，但不能匹配&quot;Windows2000&quot;中的&quot;Windows&quot;。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</span><br><span class="line"></span><br><span class="line">(?&lt;&#x3D;pattern)反向(look behind)肯定预查，与正向肯定预查类似，只是方向相反。例如，&quot;(?&lt;&#x3D;95|98|NT|2000)Windows&quot;能匹配&quot;2000Windows&quot;中的&quot;Windows&quot;，但不能匹配&quot;3.1Windows&quot;中的&quot;Windows&quot;。</span><br><span class="line">(?&lt;!pattern)反向否定预查，与正向否定预查类似，只是方向相反。例如&quot;(?&lt;!95|98|NT|2000)Windows&quot;能匹配&quot;3.1Windows&quot;中的&quot;Windows&quot;，但不能匹配&quot;2000Windows&quot;中的&quot;Windows&quot;。</span><br><span class="line">x|y</span><br><span class="line">匹配 x 或 y。例如，&#39;z|food&#39; 能匹配 &quot;z&quot; 或 &quot;food&quot;。&#39;(z|f)ood&#39; 则匹配 &quot;zood&quot; 或 &quot;food&quot;。</span><br><span class="line"></span><br><span class="line">[xyz]</span><br><span class="line">字符集合。匹配所包含的任意一个字符。例如， &#39;[abc]&#39; 可以匹配 &quot;plain&quot; 中的 &#39;a&#39;。</span><br><span class="line"></span><br><span class="line">[^xyz]</span><br><span class="line">负值字符集合。匹配未包含的任意字符。例如， &#39;[^abc]&#39; 可以匹配 &quot;plain&quot; 中的&#39;p&#39;、&#39;l&#39;、&#39;i&#39;、&#39;n&#39;。</span><br><span class="line"></span><br><span class="line">[a-z]</span><br><span class="line">字符范围。匹配指定范围内的任意字符。例如，&#39;[a-z]&#39; 可以匹配 &#39;a&#39; 到 &#39;z&#39; 范围内的任意小写字母字符。</span><br><span class="line"></span><br><span class="line">[^a-z]</span><br><span class="line">负值字符范围。匹配任何不在指定范围内的任意字符。例如，&#39;[^a-z]&#39; 可以匹配任何不在 &#39;a&#39; 到 &#39;z&#39; 范围内的任意字符。</span><br><span class="line"></span><br><span class="line">\b</span><br><span class="line">匹配一个单词边界，也就是指单词和空格间的位置。例如， &#39;er\b&#39; 可以匹配&quot;never&quot; 中的 &#39;er&#39;，但不能匹配 &quot;verb&quot; 中的 &#39;er&#39;。</span><br><span class="line"></span><br><span class="line">\B</span><br><span class="line">匹配非单词边界。&#39;er\B&#39; 能匹配 &quot;verb&quot; 中的 &#39;er&#39;，但不能匹配 &quot;never&quot; 中的 &#39;er&#39;。</span><br><span class="line"></span><br><span class="line">\cx</span><br><span class="line">匹配由 x 指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 &#39;c&#39; 字符。</span><br><span class="line"></span><br><span class="line">\d</span><br><span class="line">匹配一个数字字符。等价于 [0-9]。</span><br><span class="line"></span><br><span class="line">\D</span><br><span class="line">匹配一个非数字字符。等价于 [^0-9]。</span><br><span class="line"></span><br><span class="line">\f</span><br><span class="line">匹配一个换页符。等价于 \x0c 和 \cL。</span><br><span class="line"></span><br><span class="line">\n</span><br><span class="line">匹配一个换行符。等价于 \x0a 和 \cJ。</span><br><span class="line"></span><br><span class="line">\r</span><br><span class="line">匹配一个回车符。等价于 \x0d 和 \cM。</span><br><span class="line"></span><br><span class="line">\s</span><br><span class="line">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。</span><br><span class="line"></span><br><span class="line">\S</span><br><span class="line">匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</span><br><span class="line"></span><br><span class="line">\t</span><br><span class="line">匹配一个制表符。等价于 \x09 和 \cI。</span><br><span class="line"></span><br><span class="line">\v</span><br><span class="line">匹配一个垂直制表符。等价于 \x0b 和 \cK。</span><br><span class="line"></span><br><span class="line">\w</span><br><span class="line">匹配字母、数字、下划线。等价于&#39;[A-Za-z0-9_]&#39;。</span><br><span class="line"></span><br><span class="line">\W</span><br><span class="line">匹配非字母、数字、下划线。等价于 &#39;[^A-Za-z0-9_]&#39;。</span><br><span class="line"></span><br><span class="line">\xn</span><br><span class="line">匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，&#39;\x41&#39; 匹配 &quot;A&quot;。&#39;\x041&#39; 则等价于 &#39;\x04&#39; &amp; &quot;1&quot;。正则表达式中可以使用 ASCII 编码。</span><br><span class="line"></span><br><span class="line">\num</span><br><span class="line">匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，&#39;(.)\1&#39; 匹配两个连续的相同字符。</span><br><span class="line"></span><br><span class="line">\n</span><br><span class="line">标识一个八进制转义值或一个向后引用。如果 \n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。</span><br><span class="line"></span><br><span class="line">\nm</span><br><span class="line">标识一个八进制转义值或一个向后引用。如果 \nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 \nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \nm 将匹配八进制转义值 nm。</span><br><span class="line"></span><br><span class="line">\nml</span><br><span class="line">如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。</span><br><span class="line"></span><br><span class="line">\un</span><br><span class="line">匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， \u00A9 匹配版权符号 (?)。</span><br></pre></td></tr></table></figure><h3 id="元字符-2"><a class="markdownIt-Anchor" href="#元字符-2"></a> 元字符 .</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;可以匹配任意一个字符</span><br><span class="line">console.log(&quot;cetcotcat&quot;.match(&#x2F;c.t&#x2F;g));</span><br><span class="line"></span><br><span class="line">console.log(&quot;cetc.tcat&quot;.match(&#x2F;c\.t&#x2F;g));&#x2F;&#x2F;    \.转义为字符串. </span><br><span class="line"></span><br><span class="line">console.log(&quot;caaaaatcbbbbt&quot;.match(&#x2F;c....t&#x2F;g));</span><br></pre></td></tr></table></figure><h3 id="元字符-3"><a class="markdownIt-Anchor" href="#元字符-3"></a> 元字符[ ]</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;cetcotcat&quot;.match(&#x2F;c[ae]t&#x2F;g));&#x2F;&#x2F;[]里面内容可以任意匹配一个字符</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#x2F;[1-31]&#x2F;  1,2,3</span><br><span class="line">&#x2F;&#x2F; &#x2F;[0-9]&#x2F;  0,1,2,3,4,5,6,7,8,9</span><br><span class="line">&#x2F;&#x2F; &#x2F;[a-z]&#x2F; a,b,c,d,e,...z</span><br><span class="line">&#x2F;&#x2F; &#x2F;[A-Z]&#x2F;  A,B,C,D.....Z</span><br><span class="line">console.log(&#x2F;[a-z]&#x2F;.test(&quot;abc&quot;));&#x2F;&#x2F;[a-z]可以匹配小写字母任意字符串</span><br><span class="line">console.log(&#x2F;[A-z]&#x2F;.test(&quot;ABC&quot;));&#x2F;&#x2F;[A-Z]可以匹配大写字母任意字符串</span><br><span class="line">console.log(&#x2F;[a-zA-Z]&#x2F;.test(&quot;ABC&quot;));&#x2F;&#x2F;[a-zA-Z]可以匹配任意大小写字母字符串</span><br><span class="line">console.log(&#x2F;a[b.c]b&#x2F;);&#x2F;&#x2F;[]中的.是任意字符.</span><br><span class="line"></span><br><span class="line">console.log(&#x2F;a[\[\]]b&#x2F;.test(&quot;a[b a]b&quot;))&#x2F;&#x2F;a[b   a]b  写在[]里面[]字符必须转义         </span><br><span class="line">console.log(&#x2F;[aaaa]&#x2F;);&#x2F;&#x2F;[]中重复是无意义的</span><br></pre></td></tr></table></figure><h3 id="反义字符"><a class="markdownIt-Anchor" href="#反义字符"></a> 反义字符 ^</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">反义字符类  在[]中第一位使用^,表示除了^后面的字符外都满足</span><br><span class="line"></span><br><span class="line">console.log(&quot;abcafcadcaec&quot;.match(&#x2F;a[^f]c&#x2F;g))&#x2F;&#x2F;中间不要f</span><br><span class="line">console.log(&quot;abcafcadcaec&quot;.match(&#x2F;a[f^a]c&#x2F;g))&#x2F;&#x2F;^如果在[]不是第一位,就表示字符^</span><br></pre></td></tr></table></figure><h3 id="转义特殊字符"><a class="markdownIt-Anchor" href="#转义特殊字符"></a> 转义特殊字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 转义特殊字符</span><br><span class="line">&#x2F;&#x2F; [a-zA-Z0-9_]  \w</span><br><span class="line">&#x2F;&#x2F; [^a-zA-Z0-9_]  \W</span><br><span class="line">&#x2F;&#x2F; [0-9] \d</span><br><span class="line">&#x2F;&#x2F; [^0-9]  \D</span><br><span class="line">&#x2F;&#x2F;  \s  空白字符</span><br><span class="line">&#x2F;&#x2F; \S  非空白字符</span><br><span class="line"></span><br><span class="line">var str&#x3D;&quot;   ac   bg   ed&quot;;</span><br><span class="line">        &#x2F;&#x2F; str&#x3D;str.replace(&#x2F;\s&#x2F;g,&quot;&quot;); &#x2F;&#x2F;将非空白字符替换成空字符串</span><br><span class="line">        &#x2F;&#x2F; str&#x3D;str.replace(&#x2F;\S&#x2F;g,&quot;z&quot;);   &#x2F;&#x2F;将空白字符替换成z</span><br><span class="line">        console.log(str);</span><br></pre></td></tr></table></figure><h2 id="重复"><a class="markdownIt-Anchor" href="#重复"></a> 重复</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; &#x2F;\d\d\d\d-\d\d-\d\d&#x2F;</span><br><span class="line">&#x2F;&#x2F; &#x2F;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;&#x2F;    &#x2F;&#x2F;日期重复表达式</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; console.log(&quot;abcabc&quot;.match(&#x2F;(abc)&#123;2&#125;&#x2F;)); &#x2F;&#x2F;abc重复两次</span><br><span class="line">&#x2F;&#x2F; console.log(&quot;abcabc&quot;.match(&#x2F;abc&#123;2&#125;&#x2F;));   &#x2F;&#x2F;c重复两次</span><br><span class="line">&#x2F;&#x2F; &#x2F;a&#123;0&#125;&#x2F;; &#x2F;&#x2F;没有字符a,意味着匹配一个空字符     </span><br><span class="line">&#x2F;&#x2F; &#x2F;b&#123;0&#125;&#x2F;; 匹配一个空字符</span><br><span class="line"></span><br><span class="line">console.log(&quot;aaaaaa&quot;.match(&#x2F;a&#123;0&#125;&#x2F;g));  &#x2F;&#x2F;匹配7个空字符</span><br></pre></td></tr></table></figure><h3 id="贪婪匹配"><a class="markdownIt-Anchor" href="#贪婪匹配"></a> 贪婪匹配</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;aaaaaa&quot;.match(&#x2F;a&#123;3,4&#125;&#x2F;g));&#x2F;&#x2F;最大允许4，最小允许3次   &#x2F;&#x2F;贪婪匹配</span><br><span class="line"></span><br><span class="line">console.log(&quot;caaaaatcbbbbt&quot;.match(&#x2F;c.&#123;4,5&#125;t&#x2F;g));</span><br><span class="line">        &#x2F;&#x2F; 贪婪匹配  先匹配最大的</span><br></pre></td></tr></table></figure><h3 id="匹配应用"><a class="markdownIt-Anchor" href="#匹配应用"></a> 匹配应用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;aaaaaaaa&quot;.match(&#x2F;a&#123;2,4&#125;&#x2F;g)); &#x2F;&#x2F;匹配两次</span><br><span class="line"></span><br><span class="line">console.log(&quot;aaaaaabbb&quot;.match(&#x2F;a&#123;0,4&#125;&#x2F;g));   &#x2F;&#x2F;先匹配a再匹配空字符串</span><br><span class="line"></span><br><span class="line">var arr&#x3D;&quot;item and items and itemes&quot;.match(&#x2F;items&#123;0,1&#125;\s&#x2F;g).map(function(item)&#123;   &#x2F;&#x2F;s匹配0次或1次</span><br><span class="line">            return item.replace(&#x2F;\s&#x2F;g,&quot;&quot;);  &#x2F;&#x2F;？？？</span><br><span class="line">        &#125;)</span><br><span class="line">        console.log(arr);</span><br></pre></td></tr></table></figure><h3 id="重复次数元字符"><a class="markdownIt-Anchor" href="#重复次数元字符"></a> 重复次数元字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; console.log(&quot;bbbabbbaaabbbbaabbb&quot;.match(&#x2F;a&#123;1,&#125;&#x2F;g))    &#x2F;&#x2F;重复一次或任意多次</span><br><span class="line">        &#x2F;&#x2F; console.log(&quot;bbbabbbaaabbbbaabbb&quot;.match(&#x2F;a&#123;0,&#125;&#x2F;g))    &#x2F;&#x2F;重复0次或任意多次</span><br><span class="line">        &#x2F;&#x2F; ?  &#123;0,1&#125; &#x2F;&#x2F;0次或者1次</span><br><span class="line">        &#x2F;&#x2F; +  &#123;1,&#125;  &#x2F;&#x2F;1次或者多次</span><br><span class="line">        &#x2F;&#x2F; *  &#123;0,&#125;  &#x2F;&#x2F;o次或者任意次</span><br><span class="line"></span><br><span class="line">var arr&#x3D;&quot;item and items and itemes&quot;.match(&#x2F;items?\s&#x2F;g).map(function(item)&#123;</span><br><span class="line">            return item.replace(&#x2F;\s&#x2F;g,&quot;&quot;);</span><br><span class="line">        &#125;)</span><br><span class="line">        console.log(arr);</span><br></pre></td></tr></table></figure><h3 id="非贪婪匹配"><a class="markdownIt-Anchor" href="#非贪婪匹配"></a> 非贪婪匹配</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; &#x2F;.*?&#x2F; &#x2F;&#x2F;非贪婪匹配</span><br><span class="line">console.log(&quot;aaaaaaaa&quot;.match(&#x2F;a&#123;2,5&#125;?&#x2F;g));  &#x2F;&#x2F;匹配最少次数</span><br><span class="line">console.log(&quot;aaaaaaaa&quot;.match(&#x2F;a&#123;2&#125;&#x2F;g));</span><br><span class="line">console.log(&quot;caaaaatcbbbbt&quot;.match(&#x2F;c.*?t&#x2F;g)); &#x2F;&#x2F;匹配最少次数多少都可以</span><br><span class="line"></span><br><span class="line">var obj&#x3D;&#123;</span><br><span class="line">           a:1,</span><br><span class="line">           b:2,</span><br><span class="line">           cd:10,</span><br><span class="line">           efg:11</span><br><span class="line">       &#125;</span><br><span class="line">       console.log(JSON.stringify(obj));</span><br><span class="line">       var str&#x3D;JSON.stringify(obj);</span><br><span class="line">       console.log(str.match(&#x2F;&quot;.+?&quot;&#x2F;g));  &#x2F;&#x2F;匹配所有字符串最少次数  ？？？</span><br></pre></td></tr></table></figure><h3 id="替换标签"><a class="markdownIt-Anchor" href="#替换标签"></a> 替换标签</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var str&#x3D;&quot;&lt;div&gt;def&lt;span&gt;ghi&lt;span&gt;&lt;&#x2F;div&gt;&lt;div&gt;&lt;a href&#x3D;&#39;#&#39;&gt;abc&lt;&#x2F;div&gt;&quot;</span><br><span class="line">       str&#x3D;str.replace(&#x2F;&lt;\&#x2F;?.+?&gt;&#x2F;g,function(item)&#123;    &#x2F;&#x2F;查找所有带有&#x2F;和不带&#x2F;的所有标签</span><br><span class="line">           return  &#x2F;\&#x2F;&#x2F;.test(item)?  &quot;&lt;&#x2F;p&gt;&quot; : &quot;&lt;p&gt;&quot;;    &#x2F;&#x2F;将有&#x2F;的标签字符串替换成&lt;&#x2F;p&gt;  将没有&#x2F;的标签字符串替换成&lt;p&gt;</span><br><span class="line">       &#125;);</span><br><span class="line">       console.log(str);</span><br></pre></td></tr></table></figure><h2 id="或者-起始结束群组"><a class="markdownIt-Anchor" href="#或者-起始结束群组"></a> 或者  ，起始结束，群组</h2><h3 id="或者"><a class="markdownIt-Anchor" href="#或者"></a> 或者</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;catdogcetdag&quot;.match(&#x2F;[catdog]&#x2F;))  &#x2F;&#x2F;只要有任意一个字符相同就可匹配</span><br><span class="line">console.log(&quot;catdogcetdag&quot;.match(&#x2F;cat|dog&#x2F;));&#x2F;&#x2F;或者,可以用来匹配多个字符或者另外得字符</span><br><span class="line"></span><br><span class="line">console.log(&quot;abcd&quot;.match(&#x2F;c|b&#x2F;));  &#x2F;&#x2F;先匹配符合条件的那一个</span><br><span class="line">console.log(&quot;abcd&quot;.match(&#x2F;[cb]&#x2F;));&#x2F;&#x2F;先匹配符合条件的那一个</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; console.log(&quot;abcdef&quot;.match(&#x2F;|a|b&#x2F;g));&#x2F;&#x2F;如果|得一端没有内容,则认为匹配空字符</span><br><span class="line">&#x2F;&#x2F; console.log(&quot;abcdef&quot;.match(&#x2F;a||b&#x2F;g));&#x2F;&#x2F;如果|得一端没有内容,则认为匹配空字符</span><br><span class="line">&#x2F;&#x2F; console.log(&quot;abcdef&quot;.match(&#x2F;a|d|&#x2F;g));&#x2F;&#x2F;如果|得一端没有内容,则认为匹配空字符</span><br></pre></td></tr></table></figure><h3 id="起始结束"><a class="markdownIt-Anchor" href="#起始结束"></a> 起始结束</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; ^起始   $结束     ^在[]中表示反义</span><br><span class="line">        var input,span;</span><br><span class="line">        init();</span><br><span class="line">        function init()&#123;</span><br><span class="line">            input&#x3D;document.querySelector(&quot;input&quot;);</span><br><span class="line">            span&#x3D;document.querySelector(&quot;span&quot;);</span><br><span class="line">            input.addEventListener(&quot;input&quot;,inputHandler);   &#x2F;&#x2F;给input添加监听事件</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function inputHandler(e)&#123;                          </span><br><span class="line">            if(this.ids) return;                          </span><br><span class="line">            this.ids&#x3D;setTimeout(function(input)&#123;            </span><br><span class="line">                clearTimeout(input.ids);                  &#x2F;&#x2F;清除事件</span><br><span class="line">                input.ids&#x3D;false;                          &#x2F;&#x2F;将ids设为false</span><br><span class="line">                testInputValue(input.value);              &#x2F;&#x2F;将输入的值作为参数进行函数操作</span><br><span class="line">            &#125;,500,this);                                  &#x2F;&#x2F;定时器的重复时间为500毫秒  &#x2F;&#x2F;防抖</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function testInputValue(txt)&#123;</span><br><span class="line">            console.log(txt.match(&#x2F;^[1-9]$|^[1-9][0-9]$|^[1-9][1-4][0-9]$|^[1-9][1-5]0$&#x2F;))  &#x2F;&#x2F;匹配1-150</span><br><span class="line">            if(&#x2F;^[1-9]$|^[1-9][0-9]$|^[1-9][1-4][0-9]$|^[1-9][1-5]0$&#x2F;.test(txt))&#123;</span><br><span class="line">                span.textContent&#x3D;&quot;输入正确&quot;;</span><br><span class="line">                span.style.color&#x3D;&quot;green&quot;;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                span.textContent&#x3D;&quot;输入错误&quot;;</span><br><span class="line">                span.style.color&#x3D;&quot;red&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="群组"><a class="markdownIt-Anchor" href="#群组"></a> 群组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 群组</span><br><span class="line">        &#x2F;&#x2F; &quot;18617891076&quot;.replace(&#x2F;&#x2F;)</span><br><span class="line">        &#x2F;&#x2F; console.log(&quot;18617891076&quot;.match(&#x2F;(\d&#123;3&#125;)(\d&#123;4&#125;)(\d&#123;4&#125;)&#x2F;))   &#x2F;&#x2F;将匹配到的条件进行分组</span><br><span class="line">       var str&#x3D;&quot;18617891076&quot;.match(&#x2F;(\d&#123;3&#125;)(\d&#123;4&#125;)(\d&#123;4&#125;)&#x2F;).slice(1).reduce(function(value,item,index)&#123;  &#x2F;&#x2F;从下标</span><br><span class="line">            return index&#x3D;&#x3D;&#x3D;1 ? value+&quot;****&quot; : value+item;</span><br><span class="line">        &#125;)</span><br><span class="line">        console.log(str);</span><br><span class="line">        &#x2F;&#x2F; $1就是第一个群组,$2就是第二个群组,$3就是第三个群组</span><br><span class="line">       var str&#x3D;&quot;18617891076&quot;.replace(&#x2F;(\d&#123;3&#125;)(\d&#123;4&#125;)(\d&#123;4&#125;)&#x2F;,&quot;$1****$3&quot;);</span><br><span class="line">       console.log(str);</span><br></pre></td></tr></table></figure><h2 id="正则表达式的先行断言及后行断言"><a class="markdownIt-Anchor" href="#正则表达式的先行断言及后行断言"></a> 正则表达式的先行断言及后行断言</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">一共分为四种</span><br><span class="line"></span><br><span class="line">- (?&#x3D;a) 零宽正向先行断言</span><br><span class="line">- (?!a)零宽负向先行断言</span><br><span class="line">- (?&lt;&#x3D;a)零宽正向后行断言</span><br><span class="line">- (?&lt;!a)零宽负向后行断言</span><br></pre></td></tr></table></figure><h3 id="a-零宽正向先行断言"><a class="markdownIt-Anchor" href="#a-零宽正向先行断言"></a> (?=a) 零宽正向先行断言</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">该正则匹配某字符前面的位置。</span><br><span class="line"></span><br><span class="line">let reg &#x3D; &#x2F;(?&#x3D;o)&#x2F;g</span><br><span class="line">let str &#x3D; &#39;hello world&#39;</span><br><span class="line">let s &#x3D; str.replace(reg,&#39;A&#39;)</span><br><span class="line">console.log(s)    &#x2F;&#x2F;输出hellAo wAorld</span><br><span class="line">&#x2F;&#x2F;经过上面的代码可以看到，A匹配到了o前面的位置</span><br><span class="line"></span><br><span class="line">let reg &#x3D; &#x2F;l(?&#x3D;o)&#x2F;g</span><br><span class="line">let str &#x3D; &#39;hello world&#39;</span><br><span class="line">let s &#x3D; str.replace(reg,&#39;A&#39;)</span><br><span class="line">console.log(s)     &#x2F;&#x2F;输出helAo world</span><br><span class="line">&#x2F;&#x2F;该正则匹配后面紧跟o的l字符，只有第二个l满足该条件，所以被替换</span><br></pre></td></tr></table></figure><h3 id="a零宽负向先行断言"><a class="markdownIt-Anchor" href="#a零宽负向先行断言"></a> (?!a)零宽负向先行断言</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">与上面的(?!a)相反，这个表达式匹配后面没有a字符的位置</span><br><span class="line"></span><br><span class="line">let reg &#x3D; &#x2F;(?!l)&#x2F;g</span><br><span class="line">let str &#x3D; &#39;hello&#39;</span><br><span class="line">let s &#x3D; str.replace(reg,&#39;A&#39;)</span><br><span class="line">console.log(s)    &#x2F;&#x2F;输出AhAellAoA</span><br><span class="line">该正则匹配后面没有字符l的位置，因此除了两个l字母前，均插入了A字符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">let reg &#x3D; &#x2F;l(?!o)&#x2F;g</span><br><span class="line">let str &#x3D; &#39;hello&#39;</span><br><span class="line">let s &#x3D; str.replace(reg,&#39;A&#39;)</span><br><span class="line">console.log(s)    &#x2F;&#x2F;输出heAlo</span><br><span class="line">该正则表示匹配后面无o字符的l字符，因为只有第一个l后面没有o，因此被替换</span><br></pre></td></tr></table></figure><h3 id="断言的不同使用方法注释理解"><a class="markdownIt-Anchor" href="#断言的不同使用方法注释理解"></a> 断言的不同使用方法注释理解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;abcdadef&quot;.match(&#x2F;a(?&#x3D;d)&#x2F;g))</span><br><span class="line">       console.log(&quot;a0bcd adef a&amp;cd&quot;.replace(&#x2F;a(?&#x3D;d)&#x2F;g,&quot;0&quot;));  &#x2F;&#x2F;匹配所有a前面的位置是否是a如果是a则将其替换成0</span><br><span class="line">       console.log(&quot;a0bcd adef a&amp;cd&quot;.replace(&#x2F;a(?&#x3D;[a-z])|a(?&#x3D;[0-9])&#x2F;g,&quot;1&quot;));&#x2F;&#x2F;匹配所有小写字母和数字之前的位置是否为a,有的话将其换成1;</span><br><span class="line"></span><br><span class="line">       console.log(&quot;a0bc adef a&amp;bc&quot;.replace(&#x2F;a(?![a-z])&#x2F;g,&quot;1&quot;));&#x2F;&#x2F;相当于不等于  匹配所有非小写字母且前面有a的将a替换成1</span><br><span class="line"></span><br><span class="line">       console.log(&quot;a0bc adef a&amp;bc&quot;.match(&#x2F;(?&lt;&#x3D;[0-9])b&#x2F;g))</span><br><span class="line">       console.log(&quot;a0bc adef a&amp;bc&quot;.replace(&#x2F;(?&lt;&#x3D;[0-9])b&#x2F;g,&quot;1&quot;));&#x2F;&#x2F;前置条件        &#x2F;&#x2F;匹配所有数字后面有b的，符合条件则将b替换成1</span><br><span class="line">       console.log(&quot;a0bc adef a&amp;bc&quot;.replace(&#x2F;(?&lt;![0-9])b&#x2F;g,&quot;1&quot;));&#x2F;&#x2F;前置条件不等于  &#x2F;&#x2F;匹配所有非数字后面有b的，符合条件则将b替换成1</span><br><span class="line">       console.log(&quot;abacd234&quot;.match(&#x2F;^(?&#x3D;.*[a-z])(?&#x3D;.*[0-9])\w+$&#x2F;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       console.log(&quot;你好&quot;.match(&#x2F;[\u4e00-\u9fd5]+&#x2F;g));&#x2F;&#x2F;中文</span><br><span class="line"></span><br><span class="line">       console.log(&quot;xietian@163.com&quot;.match(&#x2F;^\w+@\w&#123;2,&#125;\.(com|net)$&#x2F;));  &#x2F;&#x2F;判断邮箱符合条件   @前有任意字符后至少有2到任意多个字符 .后面为com或者net</span><br><span class="line">       &#x2F;&#x2F; &#x2F;^1[3-9]\d&#123;9&#125;$&#x2F;</span><br></pre></td></tr></table></figure><h3 id="添加类名操作注释理解"><a class="markdownIt-Anchor" href="#添加类名操作注释理解"></a> 添加类名操作注释理解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;  div1       div3   div2 &quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">var div &#x3D;document.querySelector(&quot;div&quot;);</span><br><span class="line">        function addClass(elem,className)&#123;</span><br><span class="line">            var arr&#x3D;(elem.className+&quot; &quot;+className).match(&#x2F;\S+&#x2F;g); &#x2F;&#x2F;将匹配为任意次数的非空字符的类名作为match的返回值储存到arr中</span><br><span class="line">            console.log(arr);</span><br><span class="line">            arr&#x3D;arr.filter(function(item,index,arr)&#123;    &#x2F;&#x2F;这里的arr参数是当前元素属于的数组对象</span><br><span class="line">                    return arr.indexOf(item,index+1)&lt;0; &#x2F;&#x2F;检索数组下的当前元素与当前元素之后的元素相对比若没有相同就返回</span><br><span class="line">            &#125;);</span><br><span class="line">            elem.className&#x3D;arr.join(&quot; &quot;);           &#x2F;&#x2F;用空字符将每个类名相连接</span><br><span class="line">        &#125;</span><br><span class="line">        addClass(div,&quot;div4&quot;);</span><br><span class="line">        console.log(div);</span><br></pre></td></tr></table></figure><h3 id="删除类名操作注释理解"><a class="markdownIt-Anchor" href="#删除类名操作注释理解"></a> 删除类名操作注释理解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;  div1       div3   div2 &quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line"> function removeClass(elem,className)&#123;</span><br><span class="line">            var arr&#x3D;elem.className.match(&#x2F;\S+&#x2F;g);   &#x2F;&#x2F;将原本类名的值做一个非空判断并将match返回的值储存到数组中</span><br><span class="line">            var arr1&#x3D;className.match(&#x2F;\S+&#x2F;g);       &#x2F;&#x2F;传入类名存储到数组中</span><br><span class="line">            arr1.forEach(function(item)&#123;</span><br><span class="line">                arr&#x3D;arr.filter(function(t)&#123;         </span><br><span class="line"></span><br><span class="line">                    return t!&#x3D;&#x3D;item;                &#x2F;&#x2F;传入第二个参数与之前的每一个类名相匹配   不相同的就返回到原数组，相同就不返回原数组  达到查重删除的效果是吧</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">            elem.className&#x3D;arr.join(&quot; &quot;);           &#x2F;&#x2F;将每个类名通过空字符进行连接</span><br><span class="line">        &#125;</span><br><span class="line">        var div&#x3D;document.querySelector(&quot;div&quot;);      </span><br><span class="line">        removeClass(div,&quot;    div2&quot;);</span><br></pre></td></tr></table></figure><h3 id="trim"><a class="markdownIt-Anchor" href="#trim"></a> trim();</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">去除字符串的头尾空格</span><br></pre></td></tr></table></figure><h3 id="重写tirm"><a class="markdownIt-Anchor" href="#重写tirm"></a> 重写tirm（）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> var str&#x3D;&quot;    sad   asads    &quot;;</span><br><span class="line">         function trim(str)&#123;                            &#x2F;&#x2F;去除字符串的头尾空格</span><br><span class="line">             return str.match(&#x2F;^\s*(.*?)\s*$&#x2F;)[1];      &#x2F;&#x2F;去租没加全局变量  返回的数组下标为0的是群组内容 下标为1的是匹配内容  </span><br><span class="line">         &#125;</span><br><span class="line">     </span><br><span class="line">console.log(trim(str));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;正则表达式基础&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#正则表达式基础&quot;&gt;&lt;/a&gt; 正则表达式基础&lt;/h2&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="正则表达式基础" scheme="https://cooli-willson.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>10.Event事件</title>
    <link href="https://cooli-willson.github.io/2020/01/27/10.Event%E4%BA%8B%E4%BB%B6/"/>
    <id>https://cooli-willson.github.io/2020/01/27/10.Event%E4%BA%8B%E4%BB%B6/</id>
    <published>2020-01-27T09:44:31.705Z</published>
    <updated>2020-01-27T09:47:30.248Z</updated>
    
    <content type="html"><![CDATA[<h3 id="event事件"><a class="markdownIt-Anchor" href="#event事件"></a> Event事件</h3><blockquote><h5 id="event事件类型"><a class="markdownIt-Anchor" href="#event事件类型"></a> Event事件类型</h5><blockquote><p>change   修改事件<br>error    错误事件<br>load    加载事件<br>reset  重设事件<br>resize  重新修改大小事件<br>select  选择文字事件<br>submit  提交事件<br>unload  卸载事件<br>scroll  滚动条事件</p></blockquote></blockquote><h4 id="鼠标事件"><a class="markdownIt-Anchor" href="#鼠标事件"></a> 鼠标事件</h4><ul><li><h6 id="mouseeventuieventevent-event称为事件基类"><a class="markdownIt-Anchor" href="#mouseeventuieventevent-event称为事件基类"></a> MouseEvent–&gt;UIEvent–&gt;Event  Event称为事件基类</h6></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"click"</span>,clickHandler);        <span class="comment">//dom的click 监听事件</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span>(<span class="params">e</span>)</span>&#123;                               <span class="comment">//事件函数</span></span><br><span class="line">            <span class="built_in">console</span>.log(e);                                     <span class="comment">//这里的e相当于document</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> evt=<span class="keyword">new</span> InputEvent(<span class="string">"click"</span>);</span><br><span class="line">        <span class="built_in">document</span>.dispatchEvent(evt);                         <span class="comment">//发布后的e为evt</span></span><br></pre></td></tr></table></figure><h4 id="change"><a class="markdownIt-Anchor" href="#change"></a> change</h4><ul><li><h5 id="change是修改事件主要用于表单元素当表单元素被修改时失去焦点收到事件"><a class="markdownIt-Anchor" href="#change是修改事件主要用于表单元素当表单元素被修改时失去焦点收到事件"></a> change是修改事件，主要用于表单元素，当表单元素被修改时，失去焦点收到事件</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user=<span class="built_in">document</span>.getElementById(<span class="string">"user"</span>);</span><br><span class="line">        <span class="keyword">var</span> man=<span class="built_in">document</span>.getElementById(<span class="string">"man"</span>);</span><br><span class="line">        <span class="keyword">var</span> city=<span class="built_in">document</span>.getElementById(<span class="string">"city"</span>);</span><br><span class="line">        city.addEventListener(<span class="string">"change"</span>,changeHandler);     <span class="comment">//给city添加change事件   </span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">changeHandler</span>(<span class="params">e</span>)</span>&#123;                        </span><br><span class="line">            <span class="built_in">console</span>.log(e.currentTarget===<span class="keyword">this</span>);            </span><br><span class="line">            <span class="built_in">console</span>.log(e.target);<span class="comment">//目标元素 可视元素</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.selectedOptions);             <span class="comment">//打印当前下下拉选项</span></span><br><span class="line">            city.selectedIndex <span class="comment">//下拉菜单被选的索引</span></span><br><span class="line">            city.selectedOptions <span class="comment">//下拉菜单中被选的option标签列表</span></span><br><span class="line">            <span class="keyword">var</span> selectStr=<span class="built_in">Array</span>.from(<span class="keyword">this</span>.selectedOptions).reduce(<span class="function"><span class="keyword">function</span>(<span class="params">value,item</span>)</span>&#123;         <span class="comment">//将所选取的元素转换为数组进行归并存放到selectStr中</span></span><br><span class="line">                    <span class="keyword">return</span> value+(value.length===<span class="number">0</span> ? <span class="string">""</span> :<span class="string">","</span>)+item.textContent;                 <span class="comment">//长度为0时加空字符串，不为0时加，将元素通过字符串的形式打印</span></span><br><span class="line">            &#125;,<span class="string">""</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(selectStr);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="submit-reset"><a class="markdownIt-Anchor" href="#submit-reset"></a> submit &amp;&amp; reset</h3><ul><li><h5 id="submit-reset-是表单事件只能作用于表单的事件类型"><a class="markdownIt-Anchor" href="#submit-reset-是表单事件只能作用于表单的事件类型"></a> submit &amp;&amp; reset 是表单事件，只能作用于表单的事件类型</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> form=<span class="built_in">document</span>.querySelector(<span class="string">"form"</span>);</span><br><span class="line">        <span class="keyword">var</span> city=<span class="built_in">document</span>.getElementById(<span class="string">"city"</span>);</span><br><span class="line">        <span class="keyword">var</span> citySelect=<span class="built_in">document</span>.getElementById(<span class="string">"citySelect"</span>);</span><br><span class="line">        <span class="comment">// 提交表单和重置表单</span></span><br><span class="line">        form.addEventListener(<span class="string">"submit"</span>,submitHandler);</span><br><span class="line">        form.addEventListener(<span class="string">"reset"</span>,submitHandler);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">submitHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> selectStr=<span class="built_in">Array</span>.from(city.selectedOptions).reduce(<span class="function"><span class="keyword">function</span>(<span class="params">value,item</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> value+(value.length===<span class="number">0</span> ? <span class="string">""</span> :<span class="string">","</span>)+item.textContent;</span><br><span class="line">            &#125;,<span class="string">""</span>);</span><br><span class="line">            <span class="comment">// 隐藏的文本在这里设置value,提交submit时,没有name的表单不会被提交</span></span><br><span class="line">            citySelect.value=selectStr;</span><br><span class="line">            <span class="built_in">console</span>.log(selectStr);</span><br><span class="line">            <span class="comment">// e.preventDefault();</span></span><br><span class="line">            <span class="comment">// console.log(e.type);</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="resize"><a class="markdownIt-Anchor" href="#resize"></a> resize</h3><ul><li><h5 id="resize-重设大小主要针对window的事件"><a class="markdownIt-Anchor" href="#resize-重设大小主要针对window的事件"></a> resize 重设大小主要针对window的事件</h5></li><li><h5 id="窗口被改变大小值事件被触发"><a class="markdownIt-Anchor" href="#窗口被改变大小值事件被触发"></a> 窗口被改变大小值，事件被触发</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,resizeHandler);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">resizeHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> scale=<span class="built_in">document</span>.documentElement.clientWidth/screen.width;</span><br><span class="line">            <span class="built_in">document</span>.documentElement.style.fontSize=<span class="number">100</span>*scale+<span class="string">"px"</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="select"><a class="markdownIt-Anchor" href="#select"></a> select</h3><ul><li><h5 id="select-文本选择事件-主要针对于input或者textarea中文本选择"><a class="markdownIt-Anchor" href="#select-文本选择事件-主要针对于input或者textarea中文本选择"></a> select 文本选择事件  主要针对于input或者textArea中文本选择</h5></li><li><h5 id="与下拉菜单没有关系主要是选择文本框中的文本内容时被触发"><a class="markdownIt-Anchor" href="#与下拉菜单没有关系主要是选择文本框中的文本内容时被触发"></a> 与下拉菜单没有关系，主要是选择文本框中的文本内容时被触发</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user=<span class="built_in">document</span>.getElementById(<span class="string">"user"</span>);</span><br><span class="line">        user.addEventListener(<span class="string">"select"</span>,selectHandler);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">selectHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// user.selectionStart</span></span><br><span class="line">            <span class="comment">// user.selectionEnd</span></span><br><span class="line">            <span class="comment">// user.selectionDirection</span></span><br><span class="line">            <span class="comment">// console.log(user.selectionStart,user.selectionEnd, user.selectionDirection)</span></span><br><span class="line">            user.value=user.value.slice(<span class="number">0</span>,user.selectionStart)+user.value.slice(user.selectionStart,user.selectionEnd).toUpperCase()+user.value.slice(user.selectionEnd)</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="event事件之加载和滚动条"><a class="markdownIt-Anchor" href="#event事件之加载和滚动条"></a> Event事件之加载和滚动条</h2><h3 id="scroll"><a class="markdownIt-Anchor" href="#scroll"></a> scroll</h3><ul><li><h5 id="scroll-滚动事件-是所有具备滚动条的容器都可以侦听的"><a class="markdownIt-Anchor" href="#scroll-滚动事件-是所有具备滚动条的容器都可以侦听的"></a> scroll 滚动事件  是所有具备滚动条的容器都可以侦听的</h5></li><li><h5 id="滚轮滚动不是滚动条事件触发方式间接触发滚动条事件"><a class="markdownIt-Anchor" href="#滚轮滚动不是滚动条事件触发方式间接触发滚动条事件"></a> 滚轮滚动不是滚动条事件触发方式，间接触发滚动条事件</h5></li><li><h5 id="滚动条位置的改变才会触发滚动条事件"><a class="markdownIt-Anchor" href="#滚动条位置的改变才会触发滚动条事件"></a> 滚动条位置的改变才会触发滚动条事件</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">div.addEventListener(<span class="string">"scroll"</span>,scrollHandler);</span><br><span class="line">         </span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">scrollHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    e.stopPropagation();<span class="comment">//如果要设置flash中的滚动条不改变外部的滚动条</span></span><br><span class="line"> <span class="comment">// 需要在flash的标签上设置停止冒泡</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="unload"><a class="markdownIt-Anchor" href="#unload"></a> unload</h3><ul><li><h5 id="unload-卸载-原有的页面在刷新原有的页面会被卸载掉这个时候触发事件"><a class="markdownIt-Anchor" href="#unload-卸载-原有的页面在刷新原有的页面会被卸载掉这个时候触发事件"></a> unload 卸载 原有的页面在刷新，原有的页面会被卸载掉，这个时候触发事件</h5></li><li><h5 id="unload-事件本身也不靠谱-关闭浏览器标签时被触发关闭浏览器窗口时不被触发"><a class="markdownIt-Anchor" href="#unload-事件本身也不靠谱-关闭浏览器标签时被触发关闭浏览器窗口时不被触发"></a> unload 事件本身也不靠谱  关闭浏览器标签时被触发，关闭浏览器窗口时不被触发</h5></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"click"</span>,clickHandler);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            location.href=<span class="string">"http://www.163.com"</span>;</span><br><span class="line">            <span class="comment">// location.assign("http://www.163.com");</span></span><br><span class="line">            <span class="comment">// location.replace("http://www.163.com");</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">window</span>.addEventListener(<span class="string">"unload"</span>,unloadHandler);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">unloadHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            <span class="comment">// console.log(e);</span></span><br><span class="line">            open(<span class="string">"http://www.qq.com"</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="load-error"><a class="markdownIt-Anchor" href="#load-error"></a> load  error</h3><ul><li><h4 id="load-加载事件"><a class="markdownIt-Anchor" href="#load-加载事件"></a> load 加载事件</h4></li><li><h4 id="error-错误比如地址错误造成的加载失败会触发"><a class="markdownIt-Anchor" href="#error-错误比如地址错误造成的加载失败会触发"></a> error 错误，比如地址错误造成的加载失败会触发</h4></li></ul><blockquote><h4 id="为什么加载图片"><a class="markdownIt-Anchor" href="#为什么加载图片"></a> 为什么加载图片</h4><blockquote><p><strong>图片是以个异步加载的过程</strong><br><strong>给window增加load事件，页面中所有的元素被加载完成后触发该事件</strong><br><strong>所有的元素都加载完成，包括图片</strong></p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="keyword">var</span> img=<span class="built_in">document</span>.querySelector(<span class="string">"img"</span>);</span><br><span class="line">              <span class="built_in">console</span>.log(img.width);</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">init();</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">             <span class="keyword">var</span> arr = [];                              </span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">2</span>; i &lt; <span class="number">80</span>; i++) &#123;          <span class="comment">//从第2张开始到第79张  </span></span><br><span class="line">                 <span class="keyword">var</span> img = <span class="keyword">new</span> Image();              <span class="comment">//声明一个图片对象</span></span><br><span class="line">                 img.src = <span class="string">"./img/"</span> + i + <span class="string">"-.jpg"</span>;   <span class="comment">//设置图片的地址</span></span><br><span class="line">                 img.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;          <span class="comment">//当图片都加载完时执行此函数</span></span><br><span class="line">                     arr.push(<span class="keyword">this</span>);                 <span class="comment">//将当前遍历到的图片存放到arr数组中</span></span><br><span class="line">                     <span class="keyword">if</span> (arr.length &gt;= <span class="number">78</span>) &#123;         <span class="comment">//当所有图片都加载完时 执行load函数</span></span><br><span class="line">                         loadFinish(arr);            </span><br><span class="line">                     &#125;</span><br><span class="line">                     <span class="built_in">document</span>.body.appendChild(img); <span class="comment">//将图片添加到body中</span></span><br><span class="line">                 &#125;</span><br><span class="line">               </span><br><span class="line">             &#125;</span><br><span class="line">             <span class="built_in">console</span>.log(<span class="string">"bbb"</span>);                     <span class="comment">//先执行此条语句，因为img.onload没有加载完成</span></span><br><span class="line">         &#125;</span><br><span class="line"> </span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">loadFinish</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">             arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                 <span class="built_in">console</span>.log(item.src);             <span class="comment">//打印当前图片的地址</span></span><br><span class="line">             &#125;)</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><h3 id="图片加载1"><a class="markdownIt-Anchor" href="#图片加载1"></a> 图片加载1</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num=<span class="number">2</span>,arr=[];</span><br><span class="line">        init();</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> img=<span class="keyword">new</span> Image();</span><br><span class="line">            img.src=<span class="string">"./img/"</span>+num+<span class="string">"-.jpg"</span>;</span><br><span class="line">            img.addEventListener(<span class="string">"load"</span>,loadHanlder);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">loadHanlder</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            arr.push(<span class="keyword">this</span>);                     <span class="comment">//将当前元素储存到arr中</span></span><br><span class="line">            num++;          </span><br><span class="line">            <span class="keyword">if</span>(num&gt;<span class="number">79</span>)&#123;                         <span class="comment">//循环79次</span></span><br><span class="line">                loadFinish(arr);                <span class="comment">//执行加载完成函数</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> img=<span class="keyword">new</span> Image();                            <span class="comment">//新建一个图片对象</span></span><br><span class="line">            img.src=<span class="string">"./img/"</span>+num+<span class="string">"-.jpg"</span>;                   <span class="comment">//路径地址</span></span><br><span class="line">            img.addEventListener(<span class="string">"load"</span>,loadHanlder)        <span class="comment">//给img创建一个加载监听事件</span></span><br><span class="line">            img.addEventListener(<span class="string">"error"</span>,errorHanlder);     </span><br><span class="line">            <span class="built_in">document</span>.body.appendChild(img);                 <span class="comment">//将img添加到body中</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">errorHanlder</span>(<span class="params">e</span>)</span>&#123;                           </span><br><span class="line">            <span class="built_in">console</span>.log(e);                                 </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">loadFinish</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;                         <span class="comment">//循环所有数组中的元素</span></span><br><span class="line">                <span class="built_in">console</span>.log(item.src);                          <span class="comment">//打印所有元素地址</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="图片加载2"><a class="markdownIt-Anchor" href="#图片加载2"></a> 图片加载2</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> num=<span class="number">2</span>,arr=[]</span><br><span class="line">        init();</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> img=<span class="keyword">new</span> Image();                                <span class="comment">//创建一个img对象</span></span><br><span class="line">            img.addEventListener(<span class="string">"load"</span>,loadHandler);           <span class="comment">//给img添加一个加载监听事件</span></span><br><span class="line">                                                                <span class="comment">//每次加载完一个图片都会再次调用此事件</span></span><br><span class="line">            img.src=<span class="string">"./img/"</span>+num+<span class="string">"-.jpg"</span>;                       <span class="comment">//设置图片地址</span></span><br><span class="line">            </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">loadHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// 把当时加载图片复制一份放在数组中,这个复制的图片就是当时这个地址的图片</span></span><br><span class="line">            arr.push(<span class="keyword">this</span>.cloneNode(<span class="literal">false</span>));                   <span class="comment">//复制当前img节点push到arr数组中</span></span><br><span class="line">            num++;                                              </span><br><span class="line">            <span class="keyword">if</span>(num&gt;<span class="number">79</span>)&#123;                                        </span><br><span class="line">                <span class="keyword">this</span>.removeEventListener(<span class="string">"load"</span>,loadHandler); <span class="comment">//当循环次数大于79时移除此事件</span></span><br><span class="line">                loadFinish(arr);                              <span class="comment">//并加载此函数</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.src=<span class="string">"./img/"</span>+num+<span class="string">"-.jpg"</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">loadFinish</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(item.src);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="图片的预加载封装"><a class="markdownIt-Anchor" href="#图片的预加载封装"></a> 图片的预加载封装</h3><p><strong>工具类部分</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> loadImage:<span class="function"><span class="keyword">function</span>(<span class="params">arr,callback,basePath</span>)</span>&#123;    <span class="comment">//第一个参数为图片名数组  第二个参数为执行函数  第三个参数为路径地址</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">typeof</span> basePath===<span class="string">"string"</span>)&#123;           </span><br><span class="line">                arr=arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> basePath+item;                   <span class="comment">//遍历当前数组并给每个元素添加路径名  成为一个完整的图片路径</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> img=<span class="keyword">new</span> Image();                                     <span class="comment">//声明一个图片对象</span></span><br><span class="line">            img.addEventListener(<span class="string">"load"</span>,<span class="keyword">this</span>.loadHandler);          <span class="comment">//给图片添加加载事件</span></span><br><span class="line">            img.addEventListener(<span class="string">"error"</span>,<span class="keyword">this</span>.loadHandler);         <span class="comment">//给图片添加错误事件</span></span><br><span class="line">            img.resultArr=[];</span><br><span class="line">            img.num=<span class="number">0</span>;</span><br><span class="line">            img.arr=arr;</span><br><span class="line">            img.self=<span class="keyword">this</span>;</span><br><span class="line">            img.callback=callback;</span><br><span class="line">            img.src=arr[<span class="number">0</span>];</span><br><span class="line">        &#125;,</span><br><span class="line">        loadHandler:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(e.type!==<span class="string">"error"</span>)<span class="keyword">this</span>.resultArr.push(<span class="keyword">this</span>.cloneNode(<span class="literal">false</span>));    <span class="comment">//若不出现错误  将此节点元素浅复制给数组</span></span><br><span class="line">            <span class="keyword">this</span>.num++;                     </span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.num&gt;<span class="keyword">this</span>.arr.length<span class="number">-1</span>)&#123;                                    <span class="comment">//循环数组的长度</span></span><br><span class="line">                <span class="keyword">this</span>.removeEventListener(<span class="string">"load"</span>,<span class="keyword">this</span>.self.loadHandler);        <span class="comment">//移除监听函数</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.callback)&#123;                                            </span><br><span class="line">                    <span class="keyword">this</span>.callback(<span class="keyword">this</span>.resultArr.slice());</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> evt=<span class="keyword">new</span> Event(<span class="string">"Load_image_Finish"</span>);</span><br><span class="line">                    evt.resultArr=<span class="keyword">this</span>.resultArr;</span><br><span class="line">                    <span class="built_in">document</span>.dispatchEvent(evt);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">this</span>.resultArr=<span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">this</span>.self=<span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">this</span>.callback=<span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">this</span>.arr=<span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.src=<span class="keyword">this</span>.arr[<span class="keyword">this</span>.num];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p><strong>html的js部分</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">      <span class="keyword">var</span> arr=[];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">2</span>;i&lt;<span class="number">80</span>;i++)&#123;</span><br><span class="line">            arr.push(i+<span class="string">"-.jpg"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 函数的参数</span></span><br><span class="line">        <span class="comment">// 必须填写的写在前面,不是必须填写的写在后面</span></span><br><span class="line">        <span class="comment">// document.addEventListener("Load_image_Finish",finishHandler)</span></span><br><span class="line">        Utils.loadImage(arr,finishImage,<span class="string">"./img/"</span>);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">        function finishHandler(e)&#123;</span></span><br><span class="line"><span class="comment">            console.log(e.resultArr);</span></span><br><span class="line"><span class="comment">        &#125; */</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">finishImage</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(arr);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="聚焦与input事件"><a class="markdownIt-Anchor" href="#聚焦与input事件"></a> 聚焦与input事件</h3><p><strong>FocusEvent事件</strong></p><ul><li>FocusEvent事件 获得焦距和失去焦距 主要针对所有表单元素和超链接</li><li>focusin  focusout</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user=<span class="built_in">document</span>.getElementById(<span class="string">"user"</span>);</span><br><span class="line">        <span class="keyword">var</span> user1=<span class="built_in">document</span>.getElementById(<span class="string">"user1"</span>);</span><br><span class="line">        <span class="comment">// 获得焦距</span></span><br><span class="line">        user.addEventListener(<span class="string">"focusin"</span>,focusHandler);</span><br><span class="line">        <span class="comment">// 失去焦距</span></span><br><span class="line">        user.addEventListener(<span class="string">"focusout"</span>,focusHandler);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">focusHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// e.relatedTarget  上一个失焦对象</span></span><br><span class="line">            <span class="built_in">console</span>.log(e);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>InputEvent 输入事件</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user=<span class="built_in">document</span>.getElementById(<span class="string">"user"</span>);</span><br><span class="line">       user.addEventListener(<span class="string">"input"</span>,inputHandler);</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">inputHandler</span>(<span class="params">e</span>)</span>&#123;   </span><br><span class="line">           <span class="built_in">console</span>.log(e);                         <span class="comment">//每输入新的内容控制台都会打印    </span></span><br><span class="line">           <span class="comment">// e.data: "s"  本次输入的内容</span></span><br><span class="line">           <span class="comment">// e.isComposing: false  输入法是否启动</span></span><br><span class="line">           <span class="comment">// e.inputType 输入的类型</span></span><br><span class="line">           <span class="comment">// insertCompositionText 输入插入</span></span><br><span class="line">           <span class="comment">// historyUndo 历史返回</span></span><br><span class="line">           <span class="comment">// insertText  插入文本</span></span><br><span class="line">           <span class="comment">// deleteContentBackward 退格删除（删除前一个）</span></span><br><span class="line">           <span class="comment">// deleteContentForward  delete删除（删除后一个）</span></span><br><span class="line">           <span class="comment">// deleteByCut 剪切删除</span></span><br><span class="line">           <span class="comment">// insertFromPaste 粘贴插入</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h3 id="节流"><a class="markdownIt-Anchor" href="#节流"></a> 节流</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> user=<span class="built_in">document</span>.getElementById(<span class="string">"user"</span>);            <span class="comment">//获取user元素（input）</span></span><br><span class="line">     user.addEventListener(<span class="string">"input"</span>,inputHandler);        <span class="comment">//给user添加input事件   </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">inputHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// this  节流</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.ids) <span class="keyword">return</span>;                            </span><br><span class="line">    <span class="keyword">this</span>.ids=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;             </span><br><span class="line">        clearTimeout(elem.ids);                     </span><br><span class="line">        elem.ids=<span class="literal">null</span>;                              </span><br><span class="line">        showValue(elem.value);</span><br><span class="line">    &#125;,<span class="number">500</span>,<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showValue</span>(<span class="params">txt</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(txt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="按键事件防抖"><a class="markdownIt-Anchor" href="#按键事件防抖"></a> 按键事件(防抖）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*  document.addEventListener("keydown",keyHandler);</span></span><br><span class="line"><span class="comment">         document.addEventListener("keyup",keyHandler);</span></span><br><span class="line"><span class="comment">         var type="";</span></span><br><span class="line"><span class="comment">         function keyHandler(e)&#123;</span></span><br><span class="line"><span class="comment">             if(type===e.type)return;</span></span><br><span class="line"><span class="comment">            type=e.type; </span></span><br><span class="line"><span class="comment">         //    code: "KeyS"  按下的键</span></span><br><span class="line"><span class="comment">         // key: "a"  按下的键</span></span><br><span class="line"><span class="comment">         // keyCode: 16 键码   </span></span><br><span class="line"><span class="comment">         //       左37  上38  右39  下40</span></span><br><span class="line"><span class="comment">         // which: 65 等同于keyCode</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         console.log(e);</span></span><br><span class="line"><span class="comment">         &#125; */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> hero, type = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">var</span> x = <span class="number">0</span>, y = <span class="number">0</span>, num = <span class="number">0</span>, time = <span class="number">0</span>,speed=<span class="number">1</span>;</span><br><span class="line">        init();</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            hero = <span class="built_in">document</span>.querySelector(<span class="string">"div"</span>);                               <span class="comment">//获取div元素命名为hero</span></span><br><span class="line">            </span><br><span class="line">            <span class="built_in">document</span>.addEventListener(<span class="string">"keydown"</span>, keyHandler);                   <span class="comment">//添加按键按下监听事件</span></span><br><span class="line">            <span class="built_in">document</span>.addEventListener(<span class="string">"keyup"</span>, keyHandler);                     <span class="comment">//添加按键抬起监听事件</span></span><br><span class="line">            setInterval(animation, <span class="number">16</span>);                                         <span class="comment">//设置定时器</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">keyHandler</span>(<span class="params">e</span>) </span>&#123;                                                </span><br><span class="line">            <span class="keyword">if</span> (e.type === <span class="string">"keydown"</span>)&#123;                                          <span class="comment">//当按键按下时</span></span><br><span class="line">                type = e.keyCode;                                               <span class="comment">//将当前按键的keycode储存在type中</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (e.type === <span class="string">"keyup"</span>)&#123;                                       <span class="comment">//当按键抬起时</span></span><br><span class="line">                type = <span class="number">100</span>;                                                     <span class="comment">//不做任何操作</span></span><br><span class="line">                hero.style.backgroundPositionX=<span class="string">"0px"</span>;                           <span class="comment">//背景图x轴定位为0</span></span><br><span class="line">                num=<span class="number">0</span>;                                                                                                                      </span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">switch</span> (e.keyCode) &#123;                                                <span class="comment">//将keycode码设为开关</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">37</span>:</span><br><span class="line">                    hero.style.backgroundPositionY = <span class="string">"-33px"</span>;                   <span class="comment">//通过keycode判断背景图y轴的位置</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">38</span>:</span><br><span class="line">                    hero.style.backgroundPositionY = <span class="string">"-99px"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">39</span>:</span><br><span class="line">                    hero.style.backgroundPositionY = <span class="string">"-66px"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">40</span>:</span><br><span class="line">                    hero.style.backgroundPositionY = <span class="string">"0px"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">animation</span>(<span class="params"></span>) </span>&#123;                                                  <span class="comment">//执行操作函数</span></span><br><span class="line">            <span class="keyword">if</span> (type &lt; <span class="number">37</span> || type &gt; <span class="number">40</span>) <span class="keyword">return</span>;                                 <span class="comment">//判断keycode的数值</span></span><br><span class="line">            heroMove();                                                         <span class="comment">//调用移动方法</span></span><br><span class="line">            changeSkin();                                                       <span class="comment">//皮肤切换函数</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 防抖</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">changeSkin</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            time--;</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) <span class="keyword">return</span>;                                               <span class="comment">//每次15次返回一次</span></span><br><span class="line">            time = <span class="number">15</span>;                  </span><br><span class="line">            <span class="keyword">if</span> (++num &gt; <span class="number">3</span>) num = <span class="number">0</span>;</span><br><span class="line">            hero.style.backgroundPositionX = <span class="number">-32</span> * num + <span class="string">"px"</span>;                  <span class="comment">//切换行走时的皮肤</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">heroMove</span>(<span class="params"></span>) </span>&#123;                                       </span><br><span class="line">            <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">37</span>:</span><br><span class="line">                    x -= speed;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">38</span>:</span><br><span class="line">                    y -= speed;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">39</span>:</span><br><span class="line">                    x += speed;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">40</span>:</span><br><span class="line">                    y += speed;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            hero.style.left = x + <span class="string">"px"</span>;                                     <span class="comment">//左右移动时每次移动的像素</span></span><br><span class="line">            hero.style.top = y + <span class="string">"px"</span>;                                      <span class="comment">//上下移动时每次移动的像素</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="滚轮事件"><a class="markdownIt-Anchor" href="#滚轮事件"></a> 滚轮事件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">  <span class="built_in">document</span>.addEventListener(<span class="string">"DOMMouseScroll"</span>,mouseHandler);   </span><br><span class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">"mousewheel"</span>,mouseHandler);   </span><br><span class="line">        <span class="keyword">var</span> div=<span class="built_in">document</span>.querySelector(<span class="string">"div"</span>);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">mouseHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> detail;</span><br><span class="line">            <span class="keyword">if</span>(e.detail!==<span class="number">0</span>)detail=e.detail;</span><br><span class="line">            <span class="keyword">else</span> detail=e.deltaY&lt;<span class="number">0</span> ? <span class="number">-3</span> : <span class="number">3</span>;</span><br><span class="line">            <span class="comment">// console.log(detail);</span></span><br><span class="line">            div.style.top=div.offsetTop+detail+<span class="string">"px"</span>;</span><br><span class="line">            <span class="comment">// e.detail: -3  向上  火狐</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">            deltaX: -0</span></span><br><span class="line"><span class="comment">            deltaY: -125</span></span><br><span class="line"><span class="comment">            deltaZ: 0</span></span><br><span class="line"><span class="comment">            detail: 0</span></span><br><span class="line"><span class="comment">            wheelDelta: 150</span></span><br><span class="line"><span class="comment">            wheelDeltaX: 0</span></span><br><span class="line"><span class="comment">            wheelDeltaY: 150 */</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;event事件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#event事件&quot;&gt;&lt;/a&gt; Event事件&lt;/h3&gt;
&lt;blockquote&gt;
&lt;h5 id=&quot;event事件类型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot;
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Event事件" scheme="https://cooli-willson.github.io/tags/Event%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>拖拽div</title>
    <link href="https://cooli-willson.github.io/2020/01/27/%E6%8B%96%E6%8B%BD%E5%8A%9F%E8%83%BD/"/>
    <id>https://cooli-willson.github.io/2020/01/27/%E6%8B%96%E6%8B%BD%E5%8A%9F%E8%83%BD/</id>
    <published>2020-01-27T08:10:52.536Z</published>
    <updated>2020-01-27T08:13:56.527Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div1</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.div0</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.divs</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#FF0000</span>;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"divs"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div0"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> divs = <span class="built_in">document</span>.querySelectorAll(<span class="string">".div1"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; divs.length; i++) &#123;</span><br><span class="line">            divs[i].addEventListener(<span class="string">"mousedown"</span>, mouseHandler);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">mouseHandler</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span> (e.type) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"mousedown"</span>:</span><br><span class="line">                    e.preventDefault();</span><br><span class="line">                    <span class="built_in">document</span>.elem = <span class="keyword">this</span>;</span><br><span class="line">                    <span class="built_in">document</span>.x = e.offsetX;</span><br><span class="line">                    <span class="built_in">document</span>.y = e.offsetY;</span><br><span class="line">                    <span class="built_in">document</span>.addEventListener(<span class="string">"mousemove"</span>, mouseHandler);</span><br><span class="line">                    <span class="built_in">document</span>.addEventListener(<span class="string">"mouseup"</span>, mouseHandler);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"mousemove"</span>:</span><br><span class="line">                    <span class="keyword">var</span> rect = <span class="keyword">this</span>.elem.parentElement.getBoundingClientRect();</span><br><span class="line">                    <span class="keyword">this</span>.elem.style.left = e.clientX - rect.x - <span class="keyword">this</span>.x + <span class="string">"px"</span>;</span><br><span class="line">                    <span class="keyword">this</span>.elem.style.top = e.clientY - rect.y - <span class="keyword">this</span>.y + <span class="string">"px"</span>;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="keyword">this</span>.elem.offsetLeft&lt;<span class="number">0</span>) <span class="keyword">this</span>.elem.style.left=<span class="string">"0px"</span>;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="keyword">this</span>.elem.offsetTop&lt;<span class="number">0</span>) <span class="keyword">this</span>.elem.style.top=<span class="string">"0px"</span>;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="keyword">this</span>.elem.offsetLeft&gt;rect.width-<span class="keyword">this</span>.elem.offsetWidth)<span class="keyword">this</span>.elem.style.left=rect.width-<span class="keyword">this</span>.elem.offsetWidth+<span class="string">"px"</span>;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="keyword">this</span>.elem.offsetTop&gt;rect.height-<span class="keyword">this</span>.elem.offsetHeight)<span class="keyword">this</span>.elem.style.top=rect.height-<span class="keyword">this</span>.elem.offsetHeight+<span class="string">"px"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"mouseup"</span>:</span><br><span class="line">                    <span class="keyword">this</span>.removeEventListener(<span class="string">"mousemove"</span>, mouseHandler);</span><br><span class="line">                    <span class="keyword">this</span>.removeEventListener(<span class="string">"mouseup"</span>, mouseHandler);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="功能" scheme="https://cooli-willson.github.io/categories/%E5%8A%9F%E8%83%BD/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="功能" scheme="https://cooli-willson.github.io/tags/%E5%8A%9F%E8%83%BD/"/>
    
      <category term="拖拽" scheme="https://cooli-willson.github.io/tags/%E6%8B%96%E6%8B%BD/"/>
    
  </entry>
  
  <entry>
    <title>div的多选功能的实现</title>
    <link href="https://cooli-willson.github.io/2020/01/27/%E5%AE%9E%E7%8E%B0div%E7%9A%84%E5%A4%9A%E9%80%89%E5%8A%9F%E8%83%BD/"/>
    <id>https://cooli-willson.github.io/2020/01/27/%E5%AE%9E%E7%8E%B0div%E7%9A%84%E5%A4%9A%E9%80%89%E5%8A%9F%E8%83%BD/</id>
    <published>2020-01-27T07:57:30.333Z</published>
    <updated>2020-01-27T07:59:58.819Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*  var pre;</span></span><br><span class="line"><span class="comment">     init();</span></span><br><span class="line"><span class="comment">     function init()&#123;</span></span><br><span class="line"><span class="comment">         var con=document.createDocumentFragment();</span></span><br><span class="line"><span class="comment">         for(var i=0;i&lt;10;i++)&#123;</span></span><br><span class="line"><span class="comment">             var div=document.createElement("div");</span></span><br><span class="line"><span class="comment">             Object.assign(div.style,&#123;</span></span><br><span class="line"><span class="comment">                 width:"50px",</span></span><br><span class="line"><span class="comment">                 height:"50px",</span></span><br><span class="line"><span class="comment">                 backgroundColor:(function()&#123;</span></span><br><span class="line"><span class="comment">                     var col="#";</span></span><br><span class="line"><span class="comment">                     for(var j=0;j&lt;6;j++)&#123;</span></span><br><span class="line"><span class="comment">                         col+=Math.floor(Math.random()*16).toString(16);</span></span><br><span class="line"><span class="comment">                     &#125;</span></span><br><span class="line"><span class="comment">                     return col;</span></span><br><span class="line"><span class="comment">                 &#125;)(),</span></span><br><span class="line"><span class="comment">                 position:"absolute",</span></span><br><span class="line"><span class="comment">                 left:Math.floor(Math.random()*1400)+"px",</span></span><br><span class="line"><span class="comment">                 top:Math.floor(Math.random()*550)+"px"</span></span><br><span class="line"><span class="comment">             &#125;);</span></span><br><span class="line"><span class="comment">             con.appendChild(div);</span></span><br><span class="line"><span class="comment">             div.addEventListener("click",clickHandler);</span></span><br><span class="line"><span class="comment">         &#125;</span></span><br><span class="line"><span class="comment">         document.body.appendChild(con);</span></span><br><span class="line"><span class="comment">         </span></span><br><span class="line"><span class="comment">     &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     function clickHandler(e)&#123;</span></span><br><span class="line"><span class="comment">         if(this===pre)   preChange();</span></span><br><span class="line"><span class="comment">         else   preChange(this);</span></span><br><span class="line"><span class="comment">     &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     function preChange(elem)&#123;</span></span><br><span class="line"><span class="comment">         if(pre)pre.style.border="none";</span></span><br><span class="line"><span class="comment">         pre=null;</span></span><br><span class="line"><span class="comment">         if(!elem) return;</span></span><br><span class="line"><span class="comment">         pre=elem;</span></span><br><span class="line"><span class="comment">         pre.style.border="2px solid #000000"</span></span><br><span class="line"><span class="comment">     &#125; */</span></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="keyword">var</span> preList=[];</span><br><span class="line">     init();</span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="keyword">var</span> con=<span class="built_in">document</span>.createDocumentFragment();</span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">             <span class="keyword">var</span> div=<span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">             <span class="built_in">Object</span>.assign(div.style,&#123;</span><br><span class="line">                 width:<span class="string">"50px"</span>,</span><br><span class="line">                 height:<span class="string">"50px"</span>,</span><br><span class="line">                 backgroundColor:(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                     <span class="keyword">var</span> col=<span class="string">"#"</span>;</span><br><span class="line">                     <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;<span class="number">6</span>;j++)&#123;</span><br><span class="line">                         col+=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">16</span>).toString(<span class="number">16</span>);</span><br><span class="line">                     &#125;</span><br><span class="line">                     <span class="keyword">return</span> col;</span><br><span class="line">                 &#125;)(),</span><br><span class="line">                 position:<span class="string">"absolute"</span>,</span><br><span class="line">                 left:<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">1400</span>)+<span class="string">"px"</span>,</span><br><span class="line">                 top:<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">550</span>)+<span class="string">"px"</span></span><br><span class="line">             &#125;);</span><br><span class="line">             con.appendChild(div);</span><br><span class="line">             div.addEventListener(<span class="string">"click"</span>,clickHandler);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="built_in">document</span>.body.appendChild(con);</span><br><span class="line">         </span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">         preChange(<span class="keyword">this</span>,e.ctrlKey);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">preChange</span>(<span class="params">elem,bool</span>)</span>&#123;</span><br><span class="line">         <span class="keyword">if</span>(preList.length&gt;<span class="number">0</span> &amp;&amp; !bool)&#123;</span><br><span class="line">             preList.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                 item.style.border=<span class="string">"none"</span>;</span><br><span class="line">             &#125;)</span><br><span class="line">             preList.length=<span class="number">0</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         preList.push(elem);</span><br><span class="line">         elem.style.border=<span class="string">"2px solid #000000"</span></span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
      <category term="功能" scheme="https://cooli-willson.github.io/categories/%E5%8A%9F%E8%83%BD/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="功能" scheme="https://cooli-willson.github.io/tags/%E5%8A%9F%E8%83%BD/"/>
    
      <category term="事件" scheme="https://cooli-willson.github.io/tags/%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>9.事件</title>
    <link href="https://cooli-willson.github.io/2020/01/27/9.%E4%BA%8B%E4%BB%B6/"/>
    <id>https://cooli-willson.github.io/2020/01/27/9.%E4%BA%8B%E4%BB%B6/</id>
    <published>2020-01-27T07:42:18.319Z</published>
    <updated>2020-01-27T07:45:54.620Z</updated>
    
    <content type="html"><![CDATA[<h2 id="派发和侦听事件"><a class="markdownIt-Anchor" href="#派发和侦听事件"></a> 派发和侦听事件</h2><h3 id="addeventlistener-事件侦听方法仅用于eventtarget对象"><a class="markdownIt-Anchor" href="#addeventlistener-事件侦听方法仅用于eventtarget对象"></a> addEventListener();        //事件侦听方法，仅用于EventTarget对象</h3><h3 id="dispatchevent派发发事件方法派发事件仅用于eventtarget对象"><a class="markdownIt-Anchor" href="#dispatchevent派发发事件方法派发事件仅用于eventtarget对象"></a> dispatchEvent();//派发发事件方法，派发事件，仅用于EventTarget对象</h3><h3 id="1-侦听和派发的对象是同一个2-侦听和派发的事件类型完全相同"><a class="markdownIt-Anchor" href="#1-侦听和派发的对象是同一个2-侦听和派发的事件类型完全相同"></a> 1、侦听和派发的对象是同一个，2、侦听和派发的事件类型完全相同</h3><h3 id="eventtarget-叫-事件目标对象event实例的对象叫-事件对象"><a class="markdownIt-Anchor" href="#eventtarget-叫-事件目标对象event实例的对象叫-事件对象"></a> EventTarget 叫     <strong>事件目标对象</strong>，Event实例的对象叫      事件对象</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var target&#x3D;new EventTarget();&#x2F;&#x2F;侦听和派发的对象可以是DOM元素，也可以是EventTarget，或者继承EventTarget的类</span><br><span class="line">        target.addEventListener(&quot;chilema&quot;,clickHandler);  &#x2F;&#x2F;创建chileme侦听事件</span><br><span class="line">        var evt&#x3D;new Event(&quot;chilema&quot;);&#x2F;&#x2F;创建chileme事件对象</span><br><span class="line">        evt.num&#x3D;10;</span><br><span class="line">        target.dispatchEvent(evt);&#x2F;&#x2F;派发事件</span><br><span class="line">        &#x2F;&#x2F; 事件侦听回调函数，不能传参,因此事件回调函数中有且仅有一个参数,这个参数即为事件对象</span><br><span class="line">        function clickHandler(e)&#123;</span><br><span class="line">           console.log(e.type);&#x2F;&#x2F;派发的事件类型</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="侦听与派发"><a class="markdownIt-Anchor" href="#侦听与派发"></a> 侦听与派发</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">var obj&#x3D;&#123;</span><br><span class="line">            _a:1,</span><br><span class="line">            a:function()&#123;</span><br><span class="line">                &#x2F;&#x2F; obj1.a(this._a);</span><br><span class="line">            &#125;,</span><br><span class="line">            b:function()&#123;</span><br><span class="line">                var evt&#x3D;new Event(&quot;abc&quot;);   &#x2F;&#x2F;evt类型为abc</span><br><span class="line">                evt.a&#x3D;this._a;              &#x2F;&#x2F;将obj的_a属性赋值给evt对象</span><br><span class="line">                document.dispatchEvent(evt);  &#x2F;&#x2F;派发evt事件对象</span><br><span class="line">                console.log(evt);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        obj.b();</span><br><span class="line">            </span><br><span class="line">        var obj1&#x3D;&#123;</span><br><span class="line">            _a:2,</span><br><span class="line">            a:function(arg)&#123;</span><br><span class="line">                &#x2F;&#x2F; console.log(arg);</span><br><span class="line">            &#125;,</span><br><span class="line">            b:function()&#123;</span><br><span class="line">                document.addEventListener(&quot;abc&quot;,this.c);   &#x2F;&#x2F;侦听abc事件  调用c方法  </span><br><span class="line">            &#125;,</span><br><span class="line">            c:function(e)&#123;</span><br><span class="line">                console.log(e.a);                       &#x2F;&#x2F;打印evt.a  &#x3D;&#x3D;&#x3D;1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var obj2&#x3D;&#123;</span><br><span class="line">            a:function()&#123;</span><br><span class="line">                document.addEventListener(&quot;abc&quot;,this.b);  &#x2F;&#x2F;侦听abc事件  调用b方法</span><br><span class="line">            &#125;,</span><br><span class="line">            b:function(e)&#123;</span><br><span class="line">                console.log(e.a);                         &#x2F;&#x2F;打印evt.a &#x3D;&#x3D;&#x3D;1</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        obj1.b();</span><br><span class="line">        obj2.a();</span><br><span class="line">        obj.b();</span><br></pre></td></tr></table></figure><h3 id="高内聚低耦合"><a class="markdownIt-Anchor" href="#高内聚低耦合"></a> 高内聚低耦合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">var obj&#x3D;&#123;</span><br><span class="line">           a:function()&#123;</span><br><span class="line">               document.addEventListener(&quot;b&quot;,this.b);      &#x2F;&#x2F;侦听b事件  调用b方法</span><br><span class="line">           &#125;,</span><br><span class="line">           b:function(e)&#123;                                 </span><br><span class="line">               var num&#x3D;e.num+10;                           &#x2F;&#x2F; num&#x3D;evt.num+10;</span><br><span class="line">               var evt&#x3D;new Event(&quot;a&quot;);                     &#x2F;&#x2F;创建事件对象  对象类型为 a</span><br><span class="line">               evt.num&#x3D;num;                                &#x2F;&#x2F;将b.num赋值给evt.num</span><br><span class="line">               document.dispatchEvent(evt);                &#x2F;&#x2F;派发evt事件对象</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       var obj1&#x3D;&#123;</span><br><span class="line">           a:function()&#123;</span><br><span class="line">               document.addEventListener(&quot;a&quot;,this.b);      &#x2F;&#x2F;侦听a事件  调用obj1的方法</span><br><span class="line">               var evt&#x3D;new Event(&quot;b&quot;);                     &#x2F;&#x2F;创建事件对象  对象类型为b</span><br><span class="line">               evt.num&#x3D;2;                                  &#x2F;&#x2F;b.num&#x3D;2;</span><br><span class="line">               document.dispatchEvent(evt);                &#x2F;&#x2F;派发b事件</span><br><span class="line">           &#125;,</span><br><span class="line">           b:function(e)&#123;</span><br><span class="line">               console.log(e.num);                         &#x2F;&#x2F;12</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       </span><br><span class="line">       obj.a();</span><br><span class="line">       obj1.a();</span><br></pre></td></tr></table></figure><h2 id="事件原理"><a class="markdownIt-Anchor" href="#事件原理"></a> 事件原理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        #div1 &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            position: relative;</span><br><span class="line">            background-color: aquamarine;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #div2 &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: blueviolet;</span><br><span class="line">            position: absolute;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #div3 &#123;</span><br><span class="line">            width: 50px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: yellowgreen;</span><br><span class="line">            position: absolute;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        div &#123;</span><br><span class="line">            left: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            margin: auto;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">        &lt;div id&#x3D;&quot;div2&quot;&gt;</span><br><span class="line">            &lt;div id&#x3D;&quot;div3&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    &#x2F;*      var obj&#x3D;&#123;</span><br><span class="line">             a:1,</span><br><span class="line">             b:2</span><br><span class="line">         &#125;</span><br><span class="line">         document.addEventListener(&quot;click&quot;,clickHandler);   &#x2F;&#x2F;监听点击事件  调用clickHandler方法</span><br><span class="line"> </span><br><span class="line">         function clickHandler(e)&#123;                      &#x2F;&#x2F;每次点击时调用此方法</span><br><span class="line">             console.log(&quot;aaaa&quot;);</span><br><span class="line">             console.log(obj.a);</span><br><span class="line">             e.a&#x3D;obj.a;   </span><br><span class="line">             console.log(e.a);</span><br><span class="line">            </span><br><span class="line">         &#125;</span><br><span class="line"> </span><br><span class="line">         var evt&#x3D;new Event(&quot;click&quot;);               &#x2F;&#x2F;创建click事件对象</span><br><span class="line">         obj.a&#x3D;10;                                  </span><br><span class="line">         document.dispatchEvent(evt);              &#x2F;&#x2F;派发click事件对象</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">        var div1 &#x3D; document.getElementById(&quot;div1&quot;);</span><br><span class="line">        var div2 &#x3D; document.getElementById(&quot;div2&quot;);</span><br><span class="line">        var div3 &#x3D; document.getElementById(&quot;div3&quot;);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;  addEventListener(事件类型，事件回调函数，是否捕获阶段执行（默认false）||对象&#123;once:true&#125;)&#x2F;&#x2F;是否只执行一次</span><br><span class="line">        &#x2F;&#x2F; div1.addEventListener(&quot;click&quot;, clickHandler1,&#123;once:true&#125;);</span><br><span class="line">        div1.addEventListener(&quot;click&quot;, clickHandler1);</span><br><span class="line">        div2.addEventListener(&quot;click&quot;, clickHandler2);</span><br><span class="line">        div3.addEventListener(&quot;click&quot;, clickHandler3);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 阻止事件冒泡</span><br><span class="line"></span><br><span class="line">        function clickHandler1(e) &#123;</span><br><span class="line">            &#x2F;&#x2F; e.stopPropagation();&#x2F;&#x2F;阻止事件冒泡</span><br><span class="line">            &#x2F;&#x2F; console.log(e);</span><br><span class="line">            &#x2F;&#x2F; e.cancelBubble&#x3D;true;&#x2F;&#x2F;阻止事件冒泡   IE8一下浏览器</span><br><span class="line">            console.log(&quot;div1&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        function clickHandler2(e) &#123;</span><br><span class="line">            console.log(&quot;div2&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        function clickHandler3(e) &#123;</span><br><span class="line">          </span><br><span class="line">            console.log(&quot;div3&quot;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 事件原理三阶段</span><br><span class="line">        &#x2F;&#x2F; 捕获    目标     冒泡</span><br><span class="line">        &#x2F;&#x2F; 外    到达目标    内</span><br><span class="line">        &#x2F;&#x2F; |                |</span><br><span class="line">        &#x2F;&#x2F; 内               外</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="事件委托和事件区别"><a class="markdownIt-Anchor" href="#事件委托和事件区别"></a> 事件委托和事件区别</h2><h3 id="etarget-ecurrenttarget"><a class="markdownIt-Anchor" href="#etarget-ecurrenttarget"></a> e.target  &amp;&amp; e.currentTarget</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">e.currentTarget 是事件侦听事件对象（什么对象执行addEventListener函数就是谁）</span><br><span class="line"></span><br><span class="line">e.target 事件的目标对象 事件实际触发的目标阶段最后对象，e.srcElement兼容IE</span><br><span class="line"></span><br><span class="line">事件函数中this默认等同于e.currentTarget</span><br></pre></td></tr></table></figure><h3 id="举例说明"><a class="markdownIt-Anchor" href="#举例说明"></a> 举例说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var ul&#x3D;document.querySelector(&quot;ul&quot;);</span><br><span class="line">        ul.addEventListener(&quot;click&quot;,clickHandler);</span><br><span class="line">        &#x2F;&#x2F; 如果侦听函数调用（addEventListener被使用），就会在内存中添加存储</span><br><span class="line">        &#x2F;&#x2F; 尽量减少事件的侦听，因此就会将事件委托给父容器做侦听，以达到减少事件侦听的存储</span><br><span class="line"></span><br><span class="line">        function clickHandler(e)&#123;</span><br><span class="line">            &#x2F;&#x2F; if(e.target.nodeName!&#x3D;&#x3D;&quot;LI&quot;) return;</span><br><span class="line">            if(e.target.constructor!&#x3D;&#x3D;HTMLLIElement) return;</span><br><span class="line">            &#x2F;&#x2F; console.log(e);</span><br><span class="line">            &#x2F;&#x2F; e.currentTarget 是事件侦听事件对象（什么对象执行addEventListener函数就是谁）</span><br><span class="line">            &#x2F;&#x2F; e.target 事件的目标对象 事件实际触发的目标阶段最后对象，e.srcElement兼容IE</span><br><span class="line">            &#x2F;&#x2F; 事件函数中this默认等同于e.currentTarget</span><br><span class="line">            console.log(e.currentTarget,e.target,e.srcElement); &#x2F;&#x2F;ul  li  li</span><br><span class="line">            &#x2F;&#x2F; console.log(e.target.textContent);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="二级菜单开启关闭"><a class="markdownIt-Anchor" href="#二级菜单开启关闭"></a> 二级菜单开启关闭</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;ul id&#x3D;&quot;menu&quot;&gt;</span><br><span class="line">       &lt;li&gt;北京</span><br><span class="line">           &lt;ul&gt;</span><br><span class="line">               &lt;li&gt;海淀&lt;&#x2F;li&gt;</span><br><span class="line">               &lt;li&gt;昌平</span><br><span class="line">                   &lt;ul&gt;</span><br><span class="line">                       &lt;li&gt;沙河&lt;&#x2F;li&gt;</span><br><span class="line">                       &lt;li&gt;回龙观&lt;&#x2F;li&gt;</span><br><span class="line">                       &lt;li&gt;天通苑&lt;&#x2F;li&gt;</span><br><span class="line">                       &lt;li&gt;西二旗&lt;&#x2F;li&gt;</span><br><span class="line">                   &lt;&#x2F;ul&gt;</span><br><span class="line">               &lt;&#x2F;li&gt;</span><br><span class="line">               &lt;li&gt;朝阳&lt;&#x2F;li&gt;</span><br><span class="line">               &lt;li&gt;东城&lt;&#x2F;li&gt;</span><br><span class="line">           &lt;&#x2F;ul&gt;</span><br><span class="line">       &lt;&#x2F;li&gt;</span><br><span class="line">       &lt;li&gt;河北&lt;&#x2F;li&gt;</span><br><span class="line">       &lt;li&gt;天津&lt;&#x2F;li&gt;</span><br><span class="line">       &lt;li&gt;河南&lt;&#x2F;li&gt;</span><br><span class="line">       &lt;li&gt;山西&lt;&#x2F;li&gt;</span><br><span class="line">   &lt;&#x2F;ul&gt;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">       var lis&#x3D;document.getElementsByTagName(&quot;li&quot;);            &#x2F;&#x2F;获取所有li标签</span><br><span class="line">       for(var i&#x3D;0;i&lt;lis.length;i++)&#123;                          &#x2F;&#x2F;遍历li的长度</span><br><span class="line">           lis[i].addEventListener(&quot;click&quot;,clickHandler);      &#x2F;&#x2F;当点击每个li时添加click事件</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       function clickHandler(e)&#123;                               &#x2F;&#x2F;调用click方法</span><br><span class="line">           if(!this.firstElementChild) return;                 &#x2F;&#x2F;如果没有子元素  返回</span><br><span class="line">           e.stopPropagation();                                &#x2F;&#x2F;不再派发事件</span><br><span class="line">           if(!this.bool) this.firstElementChild.style.display&#x3D;&quot;none&quot;;     &#x2F;&#x2F;开关  将当前点击的元素的子元素进行隐藏</span><br><span class="line">           else this.firstElementChild.style.display&#x3D;&quot;block&quot;;              &#x2F;&#x2F;显示</span><br><span class="line">           this.bool&#x3D;!this.bool;                                           &#x2F;&#x2F;设置开关</span><br><span class="line">          </span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h3 id="事件委托"><a class="markdownIt-Anchor" href="#事件委托"></a> 事件委托</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var menu&#x3D;document.querySelector(&quot;#menu&quot;);             &#x2F;&#x2F;获取最外层ul</span><br><span class="line">      menu.addEventListener(&quot;click&quot;,clickHandler);          &#x2F;&#x2F;给menu添加点击事件</span><br><span class="line"></span><br><span class="line">      function clickHandler(e)&#123;                               </span><br><span class="line">          if(e.target.constructor!&#x3D;&#x3D;HTMLLIElement)return;   &#x2F;&#x2F;如果当前点击类型不为li  return</span><br><span class="line">          if(!e.target.firstElementChild) return;           &#x2F;&#x2F;???</span><br><span class="line">          e.stopPropagation();                              &#x2F;&#x2F;不再派发事件</span><br><span class="line">          if(!e.target.bool) e.target.firstElementChild.style.display&#x3D;&quot;none&quot;;     &#x2F;&#x2F;开关  当前元素的第一个子元素隐藏</span><br><span class="line">          else e.target.firstElementChild.style.display&#x3D;&quot;block&quot;;</span><br><span class="line">          e.target.bool&#x3D;!e.target.bool;                                           &#x2F;&#x2F;设置开关</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h3 id="移除侦听事件的方法"><a class="markdownIt-Anchor" href="#移除侦听事件的方法"></a> 移除侦听事件的方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 事件侦听添加（注册事件）占有内存的，</span><br><span class="line">        </span><br><span class="line">第一种：</span><br><span class="line">        document.addEventListener(&quot;click&quot;,clickHandler,&#123;once:true&#125;);  &#x2F;&#x2F;事件只执行一次</span><br><span class="line"></span><br><span class="line">第二种：</span><br><span class="line">        document.addEventListener(&quot;click&quot;,clickHandler);</span><br><span class="line">        &#x2F;&#x2F; 删除对象时，一定要将对象上的侦听事件移除</span><br><span class="line">        var num&#x3D;0;</span><br><span class="line">        function clickHandler(e)&#123;</span><br><span class="line">            num++;</span><br><span class="line">            console.log(&quot;aaa&quot;);</span><br><span class="line">            &#x2F;&#x2F; 事件移除</span><br><span class="line">            if(num&gt;&#x3D;3) this.removeEventListener(&quot;click&quot;,clickHandler);     &#x2F;&#x2F;移除click监听事件</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="不能同时执行两个事件函数-可以执行两个不同的函数"><a class="markdownIt-Anchor" href="#不能同时执行两个事件函数-可以执行两个不同的函数"></a> 不能同时执行两个事件函数           可以执行两个不同的函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">document.onclick&#x3D;function()&#123;</span><br><span class="line">            &#x2F;&#x2F; document.onclick&#x3D;null;&#x2F;&#x2F;移除事件侦听</span><br><span class="line">            console.log(&quot;a&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        document.onclick&#x3D;function()&#123;</span><br><span class="line">            console.log(&quot;b&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        &#x2F;&#x2F; 可以执行两个不同的函数</span><br><span class="line">        document.addEventListener(&quot;click&quot;,clickHandler1);</span><br><span class="line">        document.addEventListener(&quot;click&quot;,clickHandler2);</span><br><span class="line">        function clickHandler1(e)&#123;</span><br><span class="line">            document.removeEventListener(&quot;click&quot;,clickHandler1);</span><br><span class="line">            console.log(&quot;a&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        function clickHandler2(e)&#123;</span><br><span class="line">           console.log(&quot;b&quot;)</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="事件匿名函数的不断迭代就会造成回调地狱"><a class="markdownIt-Anchor" href="#事件匿名函数的不断迭代就会造成回调地狱"></a> 事件匿名函数的不断迭代就会造成回调地狱</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">document.onclick&#x3D;function()&#123;</span><br><span class="line">            var bn&#x3D;document.querySelector(&quot;button&quot;);</span><br><span class="line">            bn.onclick&#x3D;function()&#123;</span><br><span class="line">                console.log(&quot;aaa&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"> &#x2F;&#x2F; 而使用事件注册时用的是命名函数就会减少造成回调地狱</span><br></pre></td></tr></table></figure><h2 id="鼠标事件"><a class="markdownIt-Anchor" href="#鼠标事件"></a> 鼠标事件</h2><h3 id="mouseevent"><a class="markdownIt-Anchor" href="#mouseevent"></a> MouseEvent</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mousedown  鼠标按下</span><br><span class="line">mouseup  鼠标释放</span><br><span class="line">click  左键单击</span><br><span class="line">dblclick 左键双击</span><br><span class="line">mousemove  鼠标移动</span><br><span class="line">mouseover  鼠标经过</span><br><span class="line">mouseout   鼠标滑出</span><br><span class="line">mouseenter  鼠标进入</span><br><span class="line">mouseleave  鼠标离开</span><br><span class="line">contextmenu  右键菜单</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">document.addEventListener(&quot;click&quot;,clickHandler);</span><br><span class="line">       function clickHandler(e)&#123;</span><br><span class="line">           console.log(e);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       var div&#x3D;document.querySelector(&quot;.div2&quot;);</span><br><span class="line">       &#x2F;&#x2F; div.addEventListener(&quot;click&quot;,clickHandler);       </span><br><span class="line">       &#x2F;&#x2F; div.addEventListener(&quot;dblclick&quot;,clickHandler);</span><br><span class="line">       &#x2F;&#x2F; div.addEventListener(&quot;mousedown&quot;,clickHandler);</span><br><span class="line">       &#x2F;&#x2F; div.addEventListener(&quot;mouseup&quot;,clickHandler);</span><br><span class="line">       &#x2F;&#x2F; div.addEventListener(&quot;mousemove&quot;,clickHandler);</span><br><span class="line">       &#x2F;&#x2F; mouseover和mouseout子元素也会触发，可以冒泡触发</span><br><span class="line">       &#x2F;&#x2F; mouseenter和mouseleave是针对侦听的对象触发，阻止了冒泡</span><br><span class="line">       &#x2F;&#x2F; div.addEventListener(&quot;mouseover&quot;,clickHandler);</span><br><span class="line">       &#x2F;&#x2F; div.addEventListener(&quot;mouseout&quot;,clickHandler);</span><br><span class="line">       &#x2F;&#x2F; div.addEventListener(&quot;mouseenter&quot;,clickHandler);</span><br><span class="line">       &#x2F;&#x2F; div.addEventListener(&quot;mouseleave&quot;,clickHandler);</span><br></pre></td></tr></table></figure><h3 id="去除单机右键菜单"><a class="markdownIt-Anchor" href="#去除单机右键菜单"></a> 去除单机右键菜单</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">div.addEventListener(&quot;contextmenu&quot;,clickHandler);           &#x2F;&#x2F;给div添加一个单机右键菜单的监听事件</span><br><span class="line"></span><br><span class="line">        function clickHandler(e)&#123;</span><br><span class="line">            e.preventDefault();&#x2F;&#x2F;阻止事件默认行为</span><br><span class="line">            console.log(e.type);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="阻止图像默认拖拽"><a class="markdownIt-Anchor" href="#阻止图像默认拖拽"></a> 阻止图像默认拖拽</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var img&#x3D;document.querySelector(&quot;img&quot;);</span><br><span class="line">        img.addEventListener(&quot;mousedown&quot;,mouseHandler);</span><br><span class="line">        function mouseHandler(e)&#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="文字的拖拽和选择"><a class="markdownIt-Anchor" href="#文字的拖拽和选择"></a> 文字的拖拽和选择</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">div.addEventListener(&quot;mousedown&quot;,mouseHandler);</span><br><span class="line">        function mouseHandler(e)&#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="阻止表单提交及重设"><a class="markdownIt-Anchor" href="#阻止表单提交及重设"></a> 阻止表单提交及重设</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var bn&#x3D;document.querySelector(&quot;[type&#x3D;submit]&quot;);</span><br><span class="line">        bn.addEventListener(&quot;click&quot;,clickHandler);</span><br><span class="line"></span><br><span class="line">        function clickHandler(e)&#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="阻止表单提交"><a class="markdownIt-Anchor" href="#阻止表单提交"></a> 阻止表单提交</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var form&#x3D;document.querySelector(&quot;form&quot;);</span><br><span class="line">        form.addEventListener(&quot;submit&quot;,submitHandler);</span><br><span class="line">        function submitHandler(e)&#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            e.returnValue&#x3D;false;&#x2F;&#x2F;IE8 及以下兼容写法</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="拖拽"><a class="markdownIt-Anchor" href="#拖拽"></a> 拖拽</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;div1&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">var div &#x3D; document.querySelector(&quot;.div1&quot;);</span><br><span class="line"></span><br><span class="line">var div &#x3D; document.querySelector(&quot;.div1&quot;);      &#x2F;&#x2F;获取div1元素</span><br><span class="line">         div.onmousedown&#x3D;function(e1)&#123;&#x2F;&#x2F;设置鼠标拖拽的函数</span><br><span class="line">             document.onmousemove&#x3D;function(e2)&#123; &#x2F;&#x2F;相对与document鼠标拖拽的函数</span><br><span class="line">                 div.style.left&#x3D;e2.clientX-e1.offsetX+&quot;px&quot;;  &#x2F;&#x2F;点击位置距离当前body可视区域的x坐标-相对于带有定位的父盒子的x坐标</span><br><span class="line">                 div.style.top&#x3D;e2.clientY-e1.offsetY+&quot;px&quot;;  </span><br><span class="line">             &#125;</span><br><span class="line">             document.onmouseup&#x3D;function(e3)&#123;</span><br><span class="line">                 document.onmousemove&#x3D;null;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="拖拽2"><a class="markdownIt-Anchor" href="#拖拽2"></a> 拖拽2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;divs&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;div0&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div1&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;!-- &lt;div class&#x3D;&quot;div1&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div1&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div1&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div1&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;div1&quot;&gt;&lt;&#x2F;div&gt; --&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    </span><br><span class="line">     div.addEventListener(&quot;mousedown&quot;, mouseDownHandler);</span><br><span class="line">        var x, y;</span><br><span class="line"></span><br><span class="line">        function mouseDownHandler(e) &#123;</span><br><span class="line">            x &#x3D; e.offsetX;</span><br><span class="line">            y &#x3D; e.offsetY;</span><br><span class="line">            document.addEventListener(&quot;mousemove&quot;, mouseMoveHandler);</span><br><span class="line">            document.addEventListener(&quot;mouseup&quot;, mouseUpHandler);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function mouseMoveHandler(e) &#123;</span><br><span class="line">            div.style.left &#x3D; e.clientX - x + &quot;px&quot;;</span><br><span class="line">            div.style.top &#x3D; e.clientY - y + &quot;px&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function mouseUpHandler(e) &#123;</span><br><span class="line">            document.removeEventListener(&quot;mousemove&quot;, mouseMoveHandler);</span><br><span class="line">            document.removeEventListener(&quot;mouseup&quot;, mouseUpHandler);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;派发和侦听事件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#派发和侦听事件&quot;&gt;&lt;/a&gt; 派发和侦听事件&lt;/h2&gt;
&lt;h3 id=&quot;addeventlistener-事件侦听方法仅用于eventtarget对象&quot;&gt;&lt;a class=&quot;m
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="事件" scheme="https://cooli-willson.github.io/tags/%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>8.DOM的属性</title>
    <link href="https://cooli-willson.github.io/2020/01/25/8.DOM%E7%9A%84%E5%B1%9E%E6%80%A7/"/>
    <id>https://cooli-willson.github.io/2020/01/25/8.DOM%E7%9A%84%E5%B1%9E%E6%80%A7/</id>
    <published>2020-01-25T07:34:14.215Z</published>
    <updated>2020-01-25T07:41:36.445Z</updated>
    
    <content type="html"><![CDATA[<h2 id="dom的属性"><a class="markdownIt-Anchor" href="#dom的属性"></a> DOM的属性</h2><h3 id="dom常用属性"><a class="markdownIt-Anchor" href="#dom常用属性"></a> DOM常用属性</h3><h4 id="documentbody"><a class="markdownIt-Anchor" href="#documentbody"></a> document.body</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// console.log(document.body);//body标签</span></span><br></pre></td></tr></table></figure><h4 id="documenttitle"><a class="markdownIt-Anchor" href="#documenttitle"></a> document.title</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// console.log(document.title);//title标签</span></span><br></pre></td></tr></table></figure><h4 id="documenturl"><a class="markdownIt-Anchor" href="#documenturl"></a> document.URL</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// console.log(document.URL);//当前地址</span></span><br></pre></td></tr></table></figure><h4 id="documentstylesheets"><a class="markdownIt-Anchor" href="#documentstylesheets"></a> document.styleSheets</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//console.log(document.styleSheets);//css样式对象</span></span><br></pre></td></tr></table></figure><h4 id="documentdomainjs"><a class="markdownIt-Anchor" href="#documentdomainjs"></a> document.domainjs</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.domain);<span class="comment">//当前域</span></span><br></pre></td></tr></table></figure><h3 id="标签属性"><a class="markdownIt-Anchor" href="#标签属性"></a> 标签属性</h3><h4 id="自定义标签属性"><a class="markdownIt-Anchor" href="#自定义标签属性"></a> 自定义标签属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div s=<span class="string">"20"</span> id=<span class="string">"abc"</span> title=<span class="string">"abc"</span> name=<span class="string">"ef"</span> toggle-data=<span class="string">""</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> div=<span class="built_in">document</span>.querySelector(<span class="string">"div"</span>); </span><br><span class="line">div.sum=<span class="number">10</span>;</span><br><span class="line"><span class="comment">//标签属性中  class--&gt;对象属性的className</span></span><br><span class="line"><span class="built_in">console</span>.log(div.className);</span><br><span class="line">div.classname=<span class="string">"abcd"</span>;</span><br></pre></td></tr></table></figure><h4 id="标签默认的系统属性"><a class="markdownIt-Anchor" href="#标签默认的系统属性"></a> 标签默认的系统属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"checkbox"</span>  checked=<span class="string">"checked"</span> name=<span class="string">"ef"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> div=<span class="built_in">document</span>.querySelector(<span class="string">"div"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(input.checked);</span><br><span class="line">input.checked=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(input.name);</span><br><span class="line"><span class="built_in">console</span>.log(div.name);</span><br></pre></td></tr></table></figure><h4 id="自定义标签属性-2"><a class="markdownIt-Anchor" href="#自定义标签属性-2"></a> 自定义标签属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、命名单词之间使用-连</span><br><span class="line"><span class="number">2</span>、标签属性值必须是字符串</span><br><span class="line"></span><br><span class="line">div.setAttribute(<span class="string">"sums"</span>,<span class="string">"30"</span>);</span><br></pre></td></tr></table></figure><h4 id="删除标签属性"><a class="markdownIt-Anchor" href="#删除标签属性"></a> 删除标签属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除标签属性</span></span><br><span class="line">div.removeAttribute(<span class="string">"toggle-data"</span>);</span><br></pre></td></tr></table></figure><h4 id="获取标签属性-属性值都是字符串"><a class="markdownIt-Anchor" href="#获取标签属性-属性值都是字符串"></a> 获取标签属性 属性值都是字符串</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// console.log(div.getAttribute("name"));</span></span><br></pre></td></tr></table></figure><h3 id="导航栏标题滚动"><a class="markdownIt-Anchor" href="#导航栏标题滚动"></a> 导航栏标题滚动</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"欢迎来到千锋学习H5课程，希望大家能学有所成!"</span>;</span><br><span class="line">        <span class="keyword">var</span> n=<span class="number">-1</span>;</span><br><span class="line">        setInterval(animation,<span class="number">100</span>);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">animation</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            n++;</span><br><span class="line">            <span class="keyword">if</span>(n&gt;str.length<span class="number">-1</span>) n=<span class="number">0</span>;</span><br><span class="line">            <span class="built_in">document</span>.title=str.slice(n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="dom的样式"><a class="markdownIt-Anchor" href="#dom的样式"></a> DOM的样式</h2><h3 id="获取dom元素计算后样式css样式和行内样式合并计算后的样式"><a class="markdownIt-Anchor" href="#获取dom元素计算后样式css样式和行内样式合并计算后的样式"></a> 获取DOM元素计算后样式，CSS样式和行内样式合并计算后的样式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(div.currentStyle.width)<span class="comment">//仅适用于IE浏览器</span></span><br><span class="line"><span class="built_in">console</span>.log(getComputer(div).width)<span class="comment">//IE8以下不支持，谷歌火狐支持</span></span><br></pre></td></tr></table></figure><h3 id="获取dom计算后样式的几种方式"><a class="markdownIt-Anchor" href="#获取dom计算后样式的几种方式"></a> 获取DOM<code>计算后样式的几种方式</code></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> width;</span><br><span class="line">        <span class="keyword">if</span>(getComputedStyle(div))&#123;</span><br><span class="line">            width=getComputedStyle(div).width;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            width=div.currentStyle.width;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(width);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="keyword">var</span> style=getComputedStyle(div) || div.currentStyle;</span><br><span class="line">        <span class="keyword">var</span> width=style.width;</span><br><span class="line">        <span class="built_in">console</span>.log(width);</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">            width=getComputedStyle(div).width;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">            <span class="comment">// 执行try时出错后执行catch，并且不报错</span></span><br><span class="line">            <span class="comment">// e error对象</span></span><br><span class="line">            <span class="built_in">console</span>.log(e);</span><br><span class="line">            width=div.currentStyle.width;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(width);</span><br></pre></td></tr></table></figure><h3 id="设置css样式不可用"><a class="markdownIt-Anchor" href="#设置css样式不可用"></a> 设置CSS样式不可用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.styleSheets[<span class="number">0</span>].disabled=<span class="literal">true</span>;</span><br></pre></td></tr></table></figure><h3 id="通过函数插入css样式"><a class="markdownIt-Anchor" href="#通过函数插入css样式"></a> 通过函数插入CSS样式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;<span class="comment">//将CSS样式储存为对象类型</span></span><br><span class="line">            width:<span class="string">"50px"</span>,</span><br><span class="line">            height:<span class="string">"50px"</span>,</span><br><span class="line">            backgroundColor:<span class="string">"red"</span>,</span><br><span class="line">            border:<span class="string">"1px solid #000000"</span>         </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        insertCss(<span class="string">"div"</span>,obj);<span class="comment">//通过insert函数进行创建    第一个参数为标签名  第二个参数为CSS样式</span></span><br><span class="line">        insertCss(<span class="string">"div:hover"</span>,&#123;                  <span class="comment">//当hover时的样式</span></span><br><span class="line">            width:<span class="string">"100px"</span>,</span><br><span class="line">            height:<span class="string">"100px"</span>,</span><br><span class="line">            borderTop:<span class="string">"1px solid #000000"</span>,</span><br><span class="line">            borderBottom:<span class="string">"1px solid #000000"</span>,</span><br><span class="line">            fontSize:<span class="string">"25px"</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">insertCss</span>(<span class="params">select,styles</span>)</span>&#123;       </span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">document</span>.styleSheets.length===<span class="number">0</span>)&#123;             <span class="comment">//当没有样式表时在头部创建&lt;style&gt;标签</span></span><br><span class="line">                <span class="keyword">var</span> style=<span class="built_in">document</span>.createElement(<span class="string">"style"</span>);   </span><br><span class="line">                <span class="built_in">document</span>.head.appendChild(style);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> styleSheet=<span class="built_in">document</span>.styleSheets[<span class="built_in">document</span>.styleSheets.length<span class="number">-1</span>]; <span class="comment">//将styleSheets的最后一个元素赋值给styleSheet;</span></span><br><span class="line">            <span class="keyword">var</span> str=select+<span class="string">" &#123;"</span>;<span class="comment">//给标签进行样式写入</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> styles)&#123;<span class="comment">//在对象型样式中进行for in 遍历</span></span><br><span class="line">                str+=prop.replace(<span class="regexp">/([A-Z])/g</span>,<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;<span class="comment">//将大写css样式属性转换为小写，可以同样进行使用</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="string">"-"</span>+item.toLowerCase();</span><br><span class="line">                &#125;)+<span class="string">":"</span>+styles[prop]+<span class="string">";"</span></span><br><span class="line">            &#125;</span><br><span class="line">    str+=<span class="string">"&#125;"</span>;</span><br><span class="line">            styleSheet.insertRule(str,styleSheet.cssRules.length);    <span class="comment">//???</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;dom的属性&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#dom的属性&quot;&gt;&lt;/a&gt; DOM的属性&lt;/h2&gt;
&lt;h3 id=&quot;dom常用属性&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#dom常用属性&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="DOM的属性" scheme="https://cooli-willson.github.io/tags/DOM%E7%9A%84%E5%B1%9E%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>7.BOM</title>
    <link href="https://cooli-willson.github.io/2020/01/25/7.BOM/"/>
    <id>https://cooli-willson.github.io/2020/01/25/7.BOM/</id>
    <published>2020-01-25T07:09:14.521Z</published>
    <updated>2020-01-25T07:11:02.110Z</updated>
    
    <content type="html"><![CDATA[<h1 id="bom"><a class="markdownIt-Anchor" href="#bom"></a> BOM</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Document Object Model（文档对象模型）</span><br><span class="line">DOM是针对HTML和XML文档的一个API（Application Programming Interface应用程序编程接口）。DOM描绘了一个层次化的节点树，允许开发人员添加、移除和修改页面的某一部分。</span><br><span class="line">HTML DOM 定义了访问和操作HTML文档的标准方法。</span><br><span class="line">要改变页面的某个东西，JavaScript 就需要获得对 HTML 文档中所有元素进行访问的入口。这个入口，连同对 HTML 元素进行添加、移动、改变或移除的方法和属性，都是通过文档对象模型来获得的（DOM）。</span><br><span class="line">我们可以通过JavaScript操作DOM，可以对节点实现增删改查操作，可以动态添加标签，属性等。</span><br></pre></td></tr></table></figure><h3 id="bom和dom的区别"><a class="markdownIt-Anchor" href="#bom和dom的区别"></a> BOM和DOM的区别</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">BOM</span><br><span class="line">1.  BOM是Browser Object Model的缩写，即浏览器对象模型。</span><br><span class="line">2.  BOM没有相关标准。不同浏览器定义有差别,实现方式不同。</span><br><span class="line">3.  BOM的最根本对象是window。</span><br><span class="line">DOM</span><br><span class="line">1.DOM是Document Object Model的缩写，即文档对象模型。</span><br><span class="line">2.DOM是W3C的标准。</span><br><span class="line">3.DOM最根本对象是document（实际上是window.document）。</span><br><span class="line">DOM的最根本的对象是BOM的window对象的子对象。</span><br><span class="line">BOM是浏览器对象模型，DOM是文档对象模型，前者是对浏览器本身进行操作，而后者是对浏览器（可看成容器）内的内容进行操作</span><br></pre></td></tr></table></figure><h3 id="window对象"><a class="markdownIt-Anchor" href="#window对象"></a> window对象</h3><h4 id="open"><a class="markdownIt-Anchor" href="#open"></a> open()</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.open(<span class="string">"要打开的网页"</span>，<span class="string">"网页名字"</span>，<span class="string">"height=100,width=100"</span>);</span><br></pre></td></tr></table></figure><h4 id="colse"><a class="markdownIt-Anchor" href="#colse"></a> colse()</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">close();<span class="comment">//关闭网页</span></span><br></pre></td></tr></table></figure><h4 id="innerheight-innerwidth"><a class="markdownIt-Anchor" href="#innerheight-innerwidth"></a> innerHeight  &amp;&amp; innerWidth</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(innerWidth,innerHeight);<span class="comment">//浏览器的宽度和高度，包含滚动条宽度,高度是文档高度</span></span><br><span class="line"> <span class="built_in">console</span>.log(outerWidth,outerHeight);<span class="comment">//如果是全屏和上面相同，如果不是全屏包含阴影宽度，浏览器高度</span></span><br></pre></td></tr></table></figure><h4 id="screenleft-screenright-screenx-screeny"><a class="markdownIt-Anchor" href="#screenleft-screenright-screenx-screeny"></a> screenLeft  &amp;&amp; screenRight      ||     screenX &amp;&amp;screenY</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(screenLeft,screenTop)</span><br><span class="line"><span class="built_in">console</span>.log(screenX,screenY)</span><br><span class="line">完全相同 都是浏览器窗口距离屏幕左上顶点的距离，只读数据</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">setInterval(animation,<span class="number">16</span>);        <span class="comment">//定时器每16毫秒执行一次本方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animation</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(screenLeft,screenTop)</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="loaction对象"><a class="markdownIt-Anchor" href="#loaction对象"></a> loaction对象</h3><h4 id="reload"><a class="markdownIt-Anchor" href="#reload"></a> reload()</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       location.reload();</span><br><span class="line">     &#125;,<span class="number">3000</span>) <span class="comment">// 重载刷新当前页面</span></span><br></pre></td></tr></table></figure><h4 id="herf"><a class="markdownIt-Anchor" href="#herf"></a> herf</h4><p>用法:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.href = <span class="string">"https://www.baidu.com/"</span>;</span><br></pre></td></tr></table></figure><h4 id="assign"><a class="markdownIt-Anchor" href="#assign"></a> assign</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.assign(“https:<span class="comment">//www.baidu.com/“)</span></span><br></pre></td></tr></table></figure><h4 id="replace"><a class="markdownIt-Anchor" href="#replace"></a> replace</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.replace(<span class="string">"https://www.baidu.com/"</span>);</span><br></pre></td></tr></table></figure><h4 id="href-assign-replace-的区别"><a class="markdownIt-Anchor" href="#href-assign-replace-的区别"></a> href &amp;&amp; assign &amp;&amp;replace 的区别</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location.href=<span class="string">"http://www.163.com"</span>;<span class="comment">//href获取当前页面地址，也可以设置当前页面地址，达到跳转页面</span></span><br><span class="line">location.assign(<span class="string">"http://www.163.com"</span>);<span class="comment">//只能跳转页面</span></span><br><span class="line">location.replace(<span class="string">"http://www.163.com"</span>);<span class="comment">//替换当前页面，跳转页面</span></span><br></pre></td></tr></table></figure><h4 id="跳转"><a class="markdownIt-Anchor" href="#跳转"></a> 跳转</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// location.href="http://www.163.com";</span></span><br><span class="line">        <span class="comment">// location.assign("http://www.163.com");</span></span><br><span class="line">        location.replace(<span class="string">"http://www.163.com"</span>);<span class="comment">//不能产生历史记录</span></span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h4 id="hash"><a class="markdownIt-Anchor" href="#hash"></a> hash</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(location.hash);<span class="comment">//获取锚点名 #和后面内容</span></span><br></pre></td></tr></table></figure><h4 id="search"><a class="markdownIt-Anchor" href="#search"></a> search</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(location.search);<span class="comment">//?和后面的内容</span></span><br></pre></td></tr></table></figure><h4 id="hostname"><a class="markdownIt-Anchor" href="#hostname"></a> hostname</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(location.hostname);  <span class="comment">//域名</span></span><br></pre></td></tr></table></figure><h4 id="port"><a class="markdownIt-Anchor" href="#port"></a> port</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(location.port);     <span class="comment">//端口号</span></span><br></pre></td></tr></table></figure><h4 id="pathname"><a class="markdownIt-Anchor" href="#pathname"></a> pathname</h4><p>用法:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(location.)  <span class="comment">//当前地址除了域名和端口号以外的路径</span></span><br></pre></td></tr></table></figure><h4 id="protocol"><a class="markdownIt-Anchor" href="#protocol"></a> protocol</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(location.protocol);   <span class="comment">//协议  http</span></span><br></pre></td></tr></table></figure><h3 id="history对象"><a class="markdownIt-Anchor" href="#history对象"></a> history对象</h3><h4 id="forword-back"><a class="markdownIt-Anchor" href="#forword-back"></a> forword  &amp;&amp; back</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">history().forword;  <span class="comment">//向前进一页</span></span><br><span class="line">history().back;     <span class="comment">//向后退一页</span></span><br></pre></td></tr></table></figure><p>前进后退页面案例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> &lt;button id=<span class="string">"back"</span>&gt;向后&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button id="forword"&gt;向前&lt;/</span>button&gt;</span><br><span class="line"><span class="keyword">var</span> forword=<span class="built_in">document</span>.getElementById(<span class="string">"forword"</span>);</span><br><span class="line">    <span class="keyword">var</span> back=<span class="built_in">document</span>.getElementById(<span class="string">"back"</span>);</span><br><span class="line">    <span class="built_in">document</span>.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        location.href=<span class="string">"http://www.163.com"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    forword.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        history.forward();</span><br><span class="line">    &#125;</span><br><span class="line">    back.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        history.back();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>go()<br>用法:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">history.go(<span class="number">0</span>);<span class="comment">//刷新页面</span></span><br><span class="line">history.go(<span class="number">1</span>);<span class="comment">//向前一个</span></span><br><span class="line">history.go(<span class="number">-1</span>);<span class="comment">//向后一个</span></span><br></pre></td></tr></table></figure><h4 id="length"><a class="markdownIt-Anchor" href="#length"></a> length</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log( history.length);  <span class="comment">//属性返回历史列表中的网址数</span></span><br></pre></td></tr></table></figure><h3 id="screen对象"><a class="markdownIt-Anchor" href="#screen对象"></a> screen对象</h3><h4 id="availheight-availwidth"><a class="markdownIt-Anchor" href="#availheight-availwidth"></a> availHeight  &amp;&amp;  availWidth</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(screen.availWidth,screen.availHeight);<span class="comment">//去除了任务栏的宽高</span></span><br><span class="line"><span class="built_in">console</span>.log(screen.width,screen.height);<span class="comment">//全屏幕宽高</span></span><br></pre></td></tr></table></figure><h4 id="height-width"><a class="markdownIt-Anchor" href="#height-width"></a> height &amp;&amp;width</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">height</span><br><span class="line">    屏幕的高度像素</span><br><span class="line">width</span><br><span class="line">    屏幕的宽度像素</span><br></pre></td></tr></table></figure><h3 id="navigator对象"><a class="markdownIt-Anchor" href="#navigator对象"></a> navigator对象</h3><h4 id="useragent"><a class="markdownIt-Anchor" href="#useragent"></a> userAgent</h4><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onsole.log(navigator.userAgent);<span class="comment">//获取浏览器信息</span></span><br></pre></td></tr></table></figure><h4 id="username"><a class="markdownIt-Anchor" href="#username"></a> userName</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(navigator.appName);<span class="comment">//返回浏览器的名称</span></span><br></pre></td></tr></table></figure><h4 id="appversion"><a class="markdownIt-Anchor" href="#appversion"></a> appversion</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(navigator.appVersion);<span class="comment">//返回浏览器的平台和版本信息</span></span><br></pre></td></tr></table></figure><h4 id="platform"><a class="markdownIt-Anchor" href="#platform"></a> platform</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(navigator.platform);<span class="comment">//返回运行浏览器的操作系统平台</span></span><br></pre></td></tr></table></figure><h2 id="bom节点"><a class="markdownIt-Anchor" href="#bom节点"></a> BOM节点</h2><h3 id="nodename节点名称"><a class="markdownIt-Anchor" href="#nodename节点名称"></a> nodeName(节点名称)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">元素节点的nodeName是标签名称</span><br><span class="line">文本节点的nodeName永远是#text</span><br><span class="line">注释节点的nodeName永远是#comment</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.nodeName,<span class="built_in">document</span>.nodeType,<span class="built_in">document</span>.nodeValue);</span><br><span class="line">标签元素的nodeName就是该标签的大写字母  div的nodeName就是DIV</span><br></pre></td></tr></table></figure><h4 id="判断节点名称"><a class="markdownIt-Anchor" href="#判断节点名称"></a> 判断节点名称</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(div.nodeName===<span class="string">"DIV"</span>)&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"div是DIV标签"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(div.nodeName===<span class="string">"SPAN"</span>)&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"div是SPAN标签"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="nodevalue节点值"><a class="markdownIt-Anchor" href="#nodevalue节点值"></a> nodeValue(节点值)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">文本节点，nodeValue属性包含文本</span><br><span class="line">元素节点nodeValue不可用</span><br><span class="line">注释节点nodeValue包括注释内容</span><br><span class="line"><span class="built_in">console</span>.log(div.nodeName,div.nodeType,div.nodeValue);</span><br><span class="line">nodeValue针对标签元素永远都是<span class="literal">null</span>，但是针对文字节点或者注释就是这个节点的内容</span><br></pre></td></tr></table></figure><h3 id="nodetype"><a class="markdownIt-Anchor" href="#nodetype"></a> nodetype</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(div.previousSibling.nodeName,div.previousSibling.nodeType,div.previousSibling.nodeValue);</span><br><span class="line"><span class="comment">//前一个同胞节点的节点名，节点类型，节点值</span></span><br><span class="line"><span class="comment">//#text 3 a</span></span><br><span class="line"><span class="built_in">console</span>.log(div.nextSibling.nodeName,div.nextSibling.nodeType,div.nextSibling.nodeValue);</span><br><span class="line"><span class="comment">//下一个同胞节点的节点名，节点类型，节点值</span></span><br><span class="line"><span class="comment">// #comment 8 &lt;a herf="&gt;&lt;/a&gt;"</span></span><br></pre></td></tr></table></figure><h4 id="获取同胞节点"><a class="markdownIt-Anchor" href="#获取同胞节点"></a> 获取同胞节点</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(div.previousSibling);   <span class="comment">//前一个同胞节点</span></span><br><span class="line"><span class="built_in">console</span>.log(div.nextSibling);       <span class="comment">//这个元素之后紧跟的节点</span></span><br></pre></td></tr></table></figure><h3 id="获取元素"><a class="markdownIt-Anchor" href="#获取元素"></a> 获取元素</h3><h4 id="通过id获取元素"><a class="markdownIt-Anchor" href="#通过id获取元素"></a> 通过id获取元素</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">""</span>);<span class="comment">//根据id获取元素，只能获取唯一一个，只能使用document获取</span></span><br></pre></td></tr></table></figure><h4 id="通过标签获取元素"><a class="markdownIt-Anchor" href="#通过标签获取元素"></a> 通过标签获取元素</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> divs=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>);<span class="comment">//根据标签名获取元素列表，是一个列表</span></span><br><span class="line"><span class="comment">// 这个列表类型是HTMLCollection  HTML标签列表</span></span><br></pre></td></tr></table></figure><h4 id="根据父元容器获取元素列表"><a class="markdownIt-Anchor" href="#根据父元容器获取元素列表"></a> 根据父元容器获取元素列表</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(divs.item(<span class="number">0</span>));<span class="comment">//divs[0]</span></span><br><span class="line"><span class="comment">// 获取元素列表是根据父容器可以获取的</span></span><br><span class="line"> <span class="built_in">console</span>.log(divs);</span><br><span class="line"><span class="comment">// 以获取到的div1为父元素，获取其里面子元素是div的元素标签</span></span><br><span class="line"><span class="keyword">var</span> divs=<span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>).getElementsByTagName(<span class="string">"div"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(divs);</span><br></pre></td></tr></table></figure><h4 id="根据标签获取元素"><a class="markdownIt-Anchor" href="#根据标签获取元素"></a> 根据标签获取元素</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> divs=<span class="built_in">document</span>.getElementsByClassName(<span class="string">"divs"</span>);</span><br><span class="line">          <span class="comment">// 这个列表类型是HTMLCollection  HTML标签列表</span></span><br><span class="line">        <span class="comment">//   也可以根据父容器获取子容器的所有class是什么的元素</span></span><br><span class="line">        <span class="keyword">var</span> divs=<span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>).getElementsByClassName(<span class="string">"divs"</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(divs)</span><br></pre></td></tr></table></figure><h4 id="根据name获取元素"><a class="markdownIt-Anchor" href="#根据name获取元素"></a> 根据name获取元素</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只能使用document获取</span></span><br><span class="line">        <span class="keyword">var</span> ck=<span class="built_in">document</span>.getElementsByName(<span class="string">"sex"</span>);</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 获取的是NodeList列表  节点列表</span></span><br><span class="line">        <span class="built_in">console</span>.log(ck); </span><br><span class="line">        <span class="built_in">console</span>.log(ck.entries());</span><br><span class="line"><span class="comment">//entries() 方法返回一个数组的迭代对象，该对象包含数组的键值对 (key/value)。</span></span><br><span class="line">        ck.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(item,index);</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">console</span>.log(ck.keys())</span><br><span class="line"><span class="comment">//keys() 方法用于从数组创建一个包含数组键的可迭代对象。 如果对象是数组返回 true，否则返回 false。</span></span><br></pre></td></tr></table></figure><h4 id="根据选择器获取元素"><a class="markdownIt-Anchor" href="#根据选择器获取元素"></a> 根据选择器获取元素</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据选择器获取元素，并且只返回元素中的第一个</span></span><br><span class="line">       <span class="built_in">document</span>.querySelector(<span class="string">"div"</span>);</span><br><span class="line">       <span class="built_in">document</span>.querySelector(<span class="string">".divs"</span>);<span class="comment">//根据class</span></span><br><span class="line">       <span class="built_in">document</span>.querySelector(<span class="string">"#div"</span>);<span class="comment">//根据id</span></span><br><span class="line">       </span><br><span class="line">       <span class="keyword">var</span> span=<span class="built_in">document</span>.querySelector(<span class="string">"#div1&gt;.divs"</span>);</span><br><span class="line">       <span class="comment">// var span=document.querySelector("span.divs");</span></span><br><span class="line">       <span class="keyword">var</span> input=<span class="built_in">document</span>.querySelector(<span class="string">"input[type=submit]"</span>);</span><br><span class="line">       <span class="built_in">console</span>.log(span);</span><br><span class="line">       <span class="built_in">console</span>.log(input);</span><br></pre></td></tr></table></figure><h4 id="继承树"><a class="markdownIt-Anchor" href="#继承树"></a> 继承树</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>--&gt;EventTarget--&gt;Node--&gt;Element--&gt;HTMLElement--&gt;HTMLDivElement</span><br><span class="line">       <span class="built_in">Object</span>--&gt;EventTarget--&gt;Node--&gt;Element--&gt;HTMLElement--&gt;HTMLAnchorElement</span><br><span class="line">       <span class="built_in">Object</span>--&gt;EventTarget--&gt;Node--&gt;Element--&gt;HTMLElement--&gt;HTMLSpanElement</span><br><span class="line">       <span class="built_in">Object</span>--&gt;EventTarget--&gt;Node--&gt;Element--&gt;HTMLElement--&gt;HTMLUListElement</span><br><span class="line">       <span class="built_in">Object</span>--&gt;EventTarget--&gt;Node--&gt;Element--&gt;HTMLElement--&gt;HTMLLIElement</span><br></pre></td></tr></table></figure><h4 id="判断元素类型"><a class="markdownIt-Anchor" href="#判断元素类型"></a> 判断元素类型</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var div=document.querySelector("div");</span></span><br><span class="line">        <span class="comment">// console.log(div.nodeName==="DIV");</span></span><br><span class="line">        <span class="comment">// console.log(div.constructor===HTMLDivElement);//判断元素是什么类别</span></span><br><span class="line">        <span class="comment">// console.log(div);</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 所有的标签都是DOM元素 是Object类型</span></span><br><span class="line">        <span class="comment">/* div.abc=10;</span></span><br><span class="line"><span class="comment">        console.log(div);</span></span><br><span class="line"><span class="comment">        console.dir(div);</span></span><br><span class="line"><span class="comment">        var arr=[1,2];</span></span><br><span class="line"><span class="comment">        console.log(arr); */</span></span><br></pre></td></tr></table></figure><h4 id="通过节点获取元素"><a class="markdownIt-Anchor" href="#通过节点获取元素"></a> 通过节点获取元素</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// document.body   body元素</span></span><br><span class="line">      <span class="comment">// document.body.children  //所有的子元素</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">document</span>.body.children);<span class="comment">//子元素</span></span><br><span class="line">      <span class="built_in">console</span>.log(div1);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">document</span>.body.childNodes);<span class="comment">//子节点</span></span><br><span class="line">      <span class="built_in">console</span>.log(div1.parentElement);<span class="comment">//父元素</span></span><br><span class="line">      <span class="built_in">console</span>.log(div1.parentNode);<span class="comment">//父节点</span></span><br><span class="line">      <span class="keyword">var</span> div1=<span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(div1.firstElementChild);<span class="comment">//第一个子元素</span></span><br><span class="line">      <span class="built_in">console</span>.log(div1.firstChild);<span class="comment">//第一个子节点</span></span><br><span class="line">      <span class="built_in">console</span>.log(div1.lastElementChild);<span class="comment">//最后一个子元素</span></span><br><span class="line">      <span class="built_in">console</span>.log(div1.lastChild);<span class="comment">//最后一个子节点</span></span><br><span class="line">      <span class="built_in">console</span>.log(div1.nextElementSibling);<span class="comment">//下一个兄弟元素</span></span><br><span class="line">      <span class="built_in">console</span>.log(div1.nextSibling);<span class="comment">//下一个兄弟节点</span></span><br><span class="line">      <span class="built_in">console</span>.log(div1.previousElementSibling);<span class="comment">//上一个兄弟元素</span></span><br><span class="line">      <span class="built_in">console</span>.log(div1.previousSibling);<span class="comment">//上一个兄弟节点</span></span><br></pre></td></tr></table></figure><h2 id="dom元素的增删改查"><a class="markdownIt-Anchor" href="#dom元素的增删改查"></a> DOM元素的增删改查</h2><h3 id="创建dom元素"><a class="markdownIt-Anchor" href="#创建dom元素"></a> 创建DOM元素</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建DOM元素</span></span><br><span class="line">        <span class="keyword">var</span> div=<span class="built_in">document</span>.createElement(<span class="string">"span"</span>);</span><br><span class="line">        div.style.width=<span class="string">"100px"</span>;</span><br><span class="line">        div.style.height=<span class="string">"100px"</span>;</span><br><span class="line">        div.style.backgroundColor=<span class="string">"red"</span>;</span><br><span class="line">        div.style.display=<span class="string">"block"</span>;</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(div);</span><br><span class="line">        <span class="built_in">document</span>.querySelector(<span class="string">"button"</span>).addEventListener(<span class="string">"click"</span>,clickHandler1);</span><br><span class="line">        div.addEventListener(<span class="string">"click"</span>,clickHandler);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            div.remove();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">clickHandler1</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">document</span>.body.appendChild(div);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="给通过dom添加的元素插入文本内容"><a class="markdownIt-Anchor" href="#给通过dom添加的元素插入文本内容"></a> 给通过DOM添加的元素插入文本内容</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="built_in">document</span>.createElement(<span class="string">"a"</span>);</span><br><span class="line">          a.href=<span class="string">"#"</span>;</span><br><span class="line">          </span><br><span class="line"><span class="comment">// textContent 就是文本内容</span></span><br><span class="line">a.textContent=<span class="string">"超链接"</span>;</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(a);</span><br></pre></td></tr></table></figure><h4 id="图片可以实例化-不可以实例化"><a class="markdownIt-Anchor" href="#图片可以实例化-不可以实例化"></a> 图片可以实例化 不可以实例化</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> img=<span class="built_in">document</span>.createElement(<span class="string">"img"</span>);</span><br><span class="line">        <span class="keyword">var</span> img=<span class="keyword">new</span> Image();         <span class="comment">//实例化image对象</span></span><br><span class="line">        <span class="keyword">var</span> div=<span class="keyword">new</span> HTMLDivElement();<span class="comment">//错误的</span></span><br></pre></td></tr></table></figure><h3 id="随机添加红色方块"><a class="markdownIt-Anchor" href="#随机添加红色方块"></a> 随机添加红色方块</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">"button"</span>).addEventListener(<span class="string">"click"</span>,clickHandler);  <span class="comment">//给找到的第一个按钮添加点击监听事件</span></span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">             <span class="comment">// e.clientX,e.clientY  鼠标点击的坐标</span></span><br><span class="line">             <span class="comment">// document.body.innerHTML+="&lt;div&gt;&lt;/div&gt;"</span></span><br><span class="line">             <span class="keyword">var</span> x=<span class="built_in">Math</span>.random()*<span class="number">1300</span>;</span><br><span class="line">             <span class="keyword">var</span> y=<span class="built_in">Math</span>.random()*<span class="number">500</span>;</span><br><span class="line">             <span class="comment">// document.write("&lt;div style='width:50px;height:50px;background-color:red;position:absolute;left:"+x+"px;top:"+y+"px'&gt;&lt;/div&gt;");</span></span><br><span class="line">             <span class="comment">// document.body.innerHTML+="&lt;div style='width:50px;height:50px;background-color:red;position:absolute;left:"+x+"px;top:"+y+"px'&gt;&lt;/div&gt;"</span></span><br><span class="line">             <span class="keyword">var</span> div=<span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">             div.style.width=<span class="string">"50px"</span>;</span><br><span class="line">             div.style.height=<span class="string">"50px"</span>;</span><br><span class="line">             div.style.backgroundColor=<span class="string">"red"</span>;</span><br><span class="line">             div.style.position=<span class="string">"absolute"</span>;</span><br><span class="line">             div.style.left=x+<span class="string">"px"</span>;</span><br><span class="line">             div.style.top=y+<span class="string">"px"</span>;</span><br><span class="line">             <span class="built_in">document</span>.body.appendChild(div);</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><h4 id="将数组添加到li中"><a class="markdownIt-Anchor" href="#将数组添加到li中"></a> 将数组添加到li中</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="string">"北京"</span>,<span class="string">"上海"</span>,<span class="string">"武汉"</span>,<span class="string">"天津"</span>,<span class="string">"西安"</span>];</span><br><span class="line">             <span class="keyword">var</span> ul=<span class="built_in">document</span>.createElement(<span class="string">"ul"</span>);</span><br><span class="line">         </span><br><span class="line">             arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">var</span> li=<span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span><br><span class="line">                 li.textContent=item;</span><br><span class="line">                 ul.appendChild(li);</span><br><span class="line">             &#125;)</span><br><span class="line">             <span class="built_in">document</span>.body.appendChild(ul);</span><br><span class="line">        <span class="comment">// 最后再将父容器放入在body中</span></span><br></pre></td></tr></table></figure><h4 id="碎片容器"><a class="markdownIt-Anchor" href="#碎片容器"></a> 碎片容器</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 已有的父容器中放入多个元素，主要用于直接给body放入多个</span></span><br><span class="line">  <span class="keyword">var</span> con=<span class="built_in">document</span>.createDocumentFragment();<span class="comment">//碎片容器</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> div=<span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">      con.appendChild(div);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">document</span>.body.appendChild(con);</span><br></pre></td></tr></table></figure><h4 id="给标签添加文本内容"><a class="markdownIt-Anchor" href="#给标签添加文本内容"></a> 给标签添加文本内容</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="built_in">document</span>.createElement(<span class="string">"a"</span>);</span><br><span class="line">                a.href=<span class="string">"#"</span>;</span><br><span class="line">                <span class="comment">// a.textContent="超链接";</span></span><br><span class="line">                <span class="keyword">var</span> span=<span class="built_in">document</span>.createElement(<span class="string">"span"</span>);</span><br><span class="line">                a.appendChild(span);</span><br><span class="line">                <span class="comment">// a.textContent="超链接";//这种写法会将a标签内的所有内容清除掉，并且写入文本</span></span><br><span class="line">                <span class="keyword">var</span> txt=<span class="built_in">document</span>.createTextNode(<span class="string">"超链接"</span>);<span class="comment">//创建文本节点</span></span><br><span class="line">                a.appendChild(txt);</span><br><span class="line">                <span class="built_in">document</span>.body.appendChild(a);</span><br></pre></td></tr></table></figure><h3 id="dom的插入"><a class="markdownIt-Anchor" href="#dom的插入"></a> DOM的插入</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div=Utils.ce(<span class="string">"div"</span>,&#123;</span><br><span class="line">            width:<span class="string">"50px"</span>,</span><br><span class="line">            height:<span class="string">"50px"</span>,</span><br><span class="line">            backgroundColor:<span class="string">"red"</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// div.textContent="你好";</span></span><br><span class="line">        <span class="comment">/* var a=Utils.ce("a");</span></span><br><span class="line"><span class="comment">        a.href="#";</span></span><br><span class="line"><span class="comment">        a.textContent="超链接";</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(div);</span><br></pre></td></tr></table></figure><h3 id="dom插入的工具类使用说明"><a class="markdownIt-Anchor" href="#dom插入的工具类使用说明"></a> DOM插入的工具类使用说明</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> span=Utils.ce(<span class="string">"span"</span>);</span><br><span class="line">        div.appendChild(span);</span><br><span class="line">        <span class="comment">//父容器.insertBefore(要插入的元素，要插入到那个元素的前面)</span></span><br><span class="line">        div.insertBefore(span,div.firstChild);</span><br><span class="line">        Utils.insertBefore(span,div);</span><br><span class="line">        Utils.before(span,div);</span><br></pre></td></tr></table></figure><h4 id="元素克隆"><a class="markdownIt-Anchor" href="#元素克隆"></a> 元素克隆</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div0 = <span class="built_in">document</span>.getElementById(<span class="string">"div0"</span>);</span><br><span class="line">        <span class="keyword">var</span> div1=div0.cloneNode(<span class="literal">false</span>);</span><br><span class="line">        div0.appendChild(div1);</span><br><span class="line">        <span class="built_in">console</span>.log(div1);  <span class="comment">//div0</span></span><br><span class="line">        <span class="built_in">console</span>.log(div0);  <span class="comment">//div0&gt;div0</span></span><br><span class="line">        <span class="comment">// true 是深复制</span></span><br><span class="line">        <span class="comment">// 浅复制仅复制当前元素的标签及属性值</span></span><br><span class="line">        <span class="comment">// 深复制可以将当前标签中的文</span></span><br></pre></td></tr></table></figure><h4 id="元素删除"><a class="markdownIt-Anchor" href="#元素删除"></a> 元素删除</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// div.remove();//删除</span></span><br><span class="line"><span class="built_in">document</span>.body.removeChild(div);父容器删除子元素</span><br><span class="line">        <span class="comment">// 删除是从DOM树中删除，如果没有将改元素设为null，将会驻留内存</span></span><br></pre></td></tr></table></figure><h4 id="替换元素"><a class="markdownIt-Anchor" href="#替换元素"></a> 替换元素</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父容器.repaceChild(新的元素，要替换的元素)</span></span><br><span class="line"><span class="built_in">document</span>.body.replaceChild(a,div);</span><br></pre></td></tr></table></figure><h4 id="对象浅复制"><a class="markdownIt-Anchor" href="#对象浅复制"></a> 对象浅复制</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div=<span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        <span class="comment">// Object.assign(目标对象，源对象)对象浅复制</span></span><br><span class="line">        <span class="built_in">Object</span>.assign(div.style,&#123;</span><br><span class="line">            width:<span class="string">'50px'</span>,</span><br><span class="line">            height:<span class="string">"50px"</span>,</span><br><span class="line">            backgroundColor:<span class="string">"green"</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(div);</span><br></pre></td></tr></table></figure><h4 id="列表切换案例"><a class="markdownIt-Anchor" href="#列表切换案例"></a> 列表切换案例</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"> #menu &#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">            margin: <span class="number">0</span>;</span><br><span class="line">            padding: <span class="number">0</span>;</span><br><span class="line">            position: relative;</span><br><span class="line">            height: <span class="number">200</span>px;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line">        #menu&gt;li &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            margin-left: <span class="number">20</span>px;</span><br><span class="line">            padding: <span class="number">10</span>px <span class="number">30</span>px;</span><br><span class="line">            border: 1px solid #000000;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">        &#125;</span><br><span class="line">        ul:not(#menu) &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">          &lt;ul id=<span class="string">"menu"</span>&gt;</span><br><span class="line">        &lt;li&gt;水果&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;蔬菜&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;零食&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;饮料&lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ul id="list1"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;猕猴桃&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;苹果&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;梨&lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ul id="list2"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;白菜&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;土豆&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;地瓜&lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ul id="list3"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;辣条&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;牛肉干&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;薯片&lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ul id="list4"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;可乐&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;雪碧&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;果汁&lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    </span></span><br><span class="line"><span class="regexp">var menu = document.getElementById("menu");                 /</span><span class="regexp">/获取menu列表</span></span><br><span class="line"><span class="regexp">        var lis = Array.from(menu.getElementsByTagName("li"));      /</span><span class="regexp">/获取所有的li元素</span></span><br><span class="line"><span class="regexp">        var uls = Array.from(document.getElementsByTagName("ul")).slice(1); /</span><span class="regexp">/获取除menu列表以外的其他ul元素</span></span><br><span class="line"><span class="regexp">        window.onpopstate = function () &#123;                           /</span><span class="regexp">/历史事件侦听</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ console.log(history.state);</span></span><br><span class="line"><span class="regexp">            changeList();</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        for (var i = 0; i &lt; lis.length; i++) &#123;</span></span><br><span class="line"><span class="regexp">            lis[i].onclick = clickHandler                           /</span><span class="regexp">/当前li被点击时</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        function clickHandler() &#123;</span></span><br><span class="line"><span class="regexp">            var index = lis.indexOf(this);                          /</span><span class="regexp">/当前点击得到的下标存储为index</span></span><br><span class="line"><span class="regexp">            history.pushState(&#123; state: "list" + (index + 1) &#125;, "", "#list" + (index + 1));   /</span><span class="regexp">/改变地址不刷新页面</span></span><br><span class="line"><span class="regexp">            changeList();</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        function changeList() &#123;</span></span><br><span class="line"><span class="regexp">            for (var i = 0; i &lt; uls.length; i++) &#123;</span></span><br><span class="line"><span class="regexp">                if (uls[i].id === history.state.state) &#123;</span></span><br><span class="line"><span class="regexp">                    uls[i].style.display = "block";</span></span><br><span class="line"><span class="regexp">                &#125; else &#123;</span></span><br><span class="line"><span class="regexp">                    uls[i].style.display = "none";</span></span><br><span class="line"><span class="regexp">                &#125;</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;bom&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#bom&quot;&gt;&lt;/a&gt; BOM&lt;/h1&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="BOM" scheme="https://cooli-willson.github.io/tags/BOM/"/>
    
  </entry>
  
  <entry>
    <title>倒计时功能</title>
    <link href="https://cooli-willson.github.io/2020/01/23/%E5%80%92%E8%AE%A1%E6%97%B6%E5%8A%9F%E8%83%BD/"/>
    <id>https://cooli-willson.github.io/2020/01/23/%E5%80%92%E8%AE%A1%E6%97%B6%E5%8A%9F%E8%83%BD/</id>
    <published>2020-01-22T16:39:05.532Z</published>
    <updated>2020-01-25T07:13:48.274Z</updated>
    
    <content type="html"><![CDATA[<h3 id="倒计时功能"><a class="markdownIt-Anchor" href="#倒计时功能"></a> 倒计时功能</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attribute">text-align</span>: right;</span><br><span class="line">          </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"hour"</span>&gt;</span>小时</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"minute"</span>&gt;</span>分钟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"second"</span>&gt;</span>秒</span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"bn"</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div0"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> preset,inputs;</span><br><span class="line">        init();</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            inputs=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>);</span><br><span class="line">            <span class="keyword">var</span> bn=<span class="built_in">document</span>.getElementById(<span class="string">"bn"</span>);</span><br><span class="line">            <span class="keyword">var</span> div=<span class="built_in">document</span>.getElementById(<span class="string">"div0"</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;inputs.length;i++)&#123;</span><br><span class="line">                inputs[i].oninput=inputHandler;</span><br><span class="line">            &#125;</span><br><span class="line">            setInterval(animation,<span class="number">500</span>,div);</span><br><span class="line">            bn.onclick=clickHandler;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">inputHandler</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.value=<span class="keyword">this</span>.value.replace(<span class="regexp">/\D/g</span>,<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            preset=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">            preset.setHours(preset.getHours()+<span class="built_in">Number</span>(inputs[<span class="number">0</span>].value));</span><br><span class="line">            preset.setMinutes(preset.getMinutes()+<span class="built_in">Number</span>(inputs[<span class="number">1</span>].value));</span><br><span class="line">            preset.setSeconds(preset.getSeconds()+<span class="built_in">Number</span>(inputs[<span class="number">2</span>].value));</span><br><span class="line">            setDisabled(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">animation</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!preset) <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">var</span> date=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">            <span class="keyword">var</span> time=preset-date;</span><br><span class="line">            <span class="keyword">if</span>(time&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                preset=<span class="literal">null</span>;</span><br><span class="line">                setDisabled(<span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            time=time/<span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">var</span> h=time&gt;=<span class="number">3600</span> ? <span class="built_in">parseInt</span>(time/<span class="number">3600</span>) : <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> m=time&gt;=<span class="number">60</span> ? <span class="built_in">parseInt</span>((time-h*<span class="number">3600</span>)/<span class="number">60</span>) : <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> s=<span class="built_in">parseInt</span>(time-h*<span class="number">3600</span>-m*<span class="number">60</span>);</span><br><span class="line">            elem.innerHTML=h+<span class="string">"小时"</span>+m+<span class="string">"分"</span>+s+<span class="string">"秒"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">setDisabled</span>(<span class="params">bool</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;inputs.length;i++)&#123;</span><br><span class="line">                inputs[i].disabled=bool;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;倒计时功能&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#倒计时功能&quot;&gt;&lt;/a&gt; 倒计时功能&lt;/h3&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
    
      <category term="功能" scheme="https://cooli-willson.github.io/categories/%E5%8A%9F%E8%83%BD/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="字符串" scheme="https://cooli-willson.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="功能" scheme="https://cooli-willson.github.io/tags/%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>获取中文时间</title>
    <link href="https://cooli-willson.github.io/2020/01/23/%E8%8E%B7%E5%8F%96%E4%B8%AD%E6%96%87%E6%97%B6%E9%97%B4/"/>
    <id>https://cooli-willson.github.io/2020/01/23/%E8%8E%B7%E5%8F%96%E4%B8%AD%E6%96%87%E6%97%B6%E9%97%B4/</id>
    <published>2020-01-22T16:38:42.439Z</published>
    <updated>2020-01-23T07:50:30.033Z</updated>
    
    <content type="html"><![CDATA[<h3 id="获取中文时间"><a class="markdownIt-Anchor" href="#获取中文时间"></a> 获取中文时间</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div0"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> arr=[<span class="string">"零"</span>,<span class="string">"一"</span>,<span class="string">"二"</span>,<span class="string">"三"</span>,<span class="string">"四"</span>,<span class="string">"五"</span>,<span class="string">"六"</span>,<span class="string">"七"</span>,<span class="string">"八"</span>,<span class="string">"九"</span>];</span><br><span class="line">        </span><br><span class="line">        init();</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> div=<span class="built_in">document</span>.getElementById(<span class="string">"div0"</span>);</span><br><span class="line">            setInterval(animation,<span class="number">500</span>,div);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">animation</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> date=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">            <span class="keyword">var</span> time=<span class="string">""</span>;</span><br><span class="line">            time+=getYearCN(date.getFullYear());</span><br><span class="line">            time+=getCNNumber(date.getMonth()+<span class="number">1</span>)+<span class="string">"月"</span>;</span><br><span class="line">            time+=getCNNumber(date.getDate())+<span class="string">"日&amp;emsp;"</span>;</span><br><span class="line">            time+=<span class="string">"星期"</span>+(date.getDay()===<span class="number">0</span> ? <span class="string">"日"</span> : getCNNumber(date.getDay()))+<span class="string">"&amp;emsp;"</span>;</span><br><span class="line">            time+=getCNNumber(date.getHours())+<span class="string">"点"</span>;</span><br><span class="line">            time+=getCNNumber(date.getMinutes(),<span class="literal">true</span>)+<span class="string">"分"</span>;</span><br><span class="line">            time+=date.getSeconds()===<span class="number">0</span>  ? <span class="string">""</span> : getCNNumber(date.getSeconds(),<span class="literal">true</span>)+<span class="string">"秒"</span>;</span><br><span class="line">            elem.innerHTML=time;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getYearCN</span>(<span class="params">year</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> y=<span class="string">""</span>;</span><br><span class="line">            year=<span class="built_in">String</span>(year);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;year.length;i++)&#123;</span><br><span class="line">                y+=arr[year[i]];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"公元"</span>+y+<span class="string">"年"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getCNNumber</span>(<span class="params">n,bool</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(n&lt;<span class="number">0</span> || n&gt;<span class="number">1000</span>) <span class="keyword">return</span> <span class="string">"错误的消息"</span>;</span><br><span class="line">                <span class="keyword">if</span>(n&lt;<span class="number">10</span>) <span class="keyword">return</span> bool ? <span class="string">"零"</span>+arr[n] : arr[n];</span><br><span class="line">                <span class="keyword">if</span>(n===<span class="number">10</span>) <span class="keyword">return</span> <span class="string">"十"</span>;</span><br><span class="line">                <span class="keyword">if</span>(n&lt;<span class="number">20</span>) <span class="keyword">return</span> <span class="string">"十"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">1</span>]];</span><br><span class="line">                <span class="keyword">if</span>(n&gt;=<span class="number">100</span> &amp;&amp; n%<span class="number">100</span>===<span class="number">0</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"百"</span>;</span><br><span class="line">                <span class="keyword">if</span>(n&gt;<span class="number">100</span> &amp;&amp; n%<span class="number">10</span>===<span class="number">0</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"百"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">1</span>]]+<span class="string">"十"</span>;</span><br><span class="line">                <span class="keyword">if</span>(n%<span class="number">10</span>===<span class="number">0</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"十"</span>;</span><br><span class="line">                <span class="keyword">if</span>(n&lt;<span class="number">100</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"十"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">1</span>]];</span><br><span class="line">                <span class="keyword">if</span>(n%<span class="number">100</span>&lt;<span class="number">10</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"百零"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">2</span>]];</span><br><span class="line">                <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"百"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">1</span>]]+<span class="string">"十"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">2</span>]];</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;获取中文时间&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#获取中文时间&quot;&gt;&lt;/a&gt; 获取中文时间&lt;/h3&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
    
      <category term="功能" scheme="https://cooli-willson.github.io/categories/%E5%8A%9F%E8%83%BD/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="功能" scheme="https://cooli-willson.github.io/tags/%E5%8A%9F%E8%83%BD/"/>
    
      <category term="中文时间" scheme="https://cooli-willson.github.io/tags/%E4%B8%AD%E6%96%87%E6%97%B6%E9%97%B4/"/>
    
  </entry>
  
  <entry>
    <title>6.特殊数组和字符串</title>
    <link href="https://cooli-willson.github.io/2020/01/23/6.%E7%89%B9%E6%AE%8A%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>https://cooli-willson.github.io/2020/01/23/6.%E7%89%B9%E6%AE%8A%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/</id>
    <published>2020-01-22T16:36:58.776Z</published>
    <updated>2020-01-25T07:12:41.301Z</updated>
    
    <content type="html"><![CDATA[<h1 id="特殊数组和字符串"><a class="markdownIt-Anchor" href="#特殊数组和字符串"></a> 特殊数组和字符串</h1><h3 id="复杂型数组"><a class="markdownIt-Anchor" href="#复杂型数组"></a> 复杂型数组</h3><p><strong>二维数组</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> arr=[];</span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">             arr[i]=[];</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">                 arr[i][j]=i*<span class="number">10</span>+j;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="comment">// 行列唯一对应值</span></span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><p><strong>对象型数组</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">       <span class="keyword">var</span> data=[</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1001</span>,<span class="attr">icon</span>:<span class="string">"img/1.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮0"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">10</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1002</span>,<span class="attr">icon</span>:<span class="string">"img/2.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮1"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">20</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1003</span>,<span class="attr">icon</span>:<span class="string">"img/3.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮2"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">30</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1004</span>,<span class="attr">icon</span>:<span class="string">"img/4.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮3"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">40</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1005</span>,<span class="attr">icon</span>:<span class="string">"img/5.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮4"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">50</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1006</span>,<span class="attr">icon</span>:<span class="string">"img/6.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮5"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">60</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1007</span>,<span class="attr">icon</span>:<span class="string">"img/7.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮6"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">70</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1008</span>,<span class="attr">icon</span>:<span class="string">"img/8.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮7"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">80</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1009</span>,<span class="attr">icon</span>:<span class="string">"img/9.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮8"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">90</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1010</span>,<span class="attr">icon</span>:<span class="string">"img/10.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮9"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">100</span>&#125;</span><br><span class="line">];</span><br><span class="line">        <span class="keyword">var</span> obj= &#123;<span class="attr">id</span>:<span class="number">1006</span>,<span class="attr">icon</span>:<span class="string">"img/6.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮5"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">60</span>&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(data.indexOf(obj));</span><br></pre></td></tr></table></figure><p><strong>flatMap 以及重构</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">        <span class="keyword">var</span> arr = [</span><br><span class="line">            [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">            [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span></span><br><span class="line">        ]; </span><br><span class="line">        <span class="comment">// var arr1=arr.flatMap(function(item,index,a)&#123;</span></span><br><span class="line">        <span class="comment">//     return item;</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="comment">// console.log(arr1);</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">flatMap</span>(<span class="params">arr, item</span>) </span>&#123;                     <span class="comment">//第一个参数为遍历数组，第二个元素为新数组</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[i].constructor===<span class="built_in">Array</span>)&#123;</span><br><span class="line">                    <span class="comment">// if(Array.isArray(arr[i]))&#123;         //第二种当前元素是否为数组的方式</span></span><br><span class="line">               <span class="keyword">if</span>(arr[i])</span><br><span class="line">                    flatMap(arr[i], item);                <span class="comment">//当前元素为数组时使用递归的方式继续遍历内数组</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    item.push(arr[i]);                    <span class="comment">//将每个元素push到item中去</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> item;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(flatMap(arr, []));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">flapMap</span>(<span class="params">arr,fn</span>)</span>&#123;</span><br><span class="line">           <span class="keyword">var</span> a=[];</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">               <span class="keyword">if</span>(arr[i]===<span class="literal">undefined</span>) <span class="keyword">continue</span>;</span><br><span class="line">               <span class="keyword">var</span> item=fn(arr[i],i,arr);</span><br><span class="line">               a=a.concat(item);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> a;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> arr=[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>],<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>];</span><br><span class="line">      <span class="keyword">var</span> a=flapMap(arr,<span class="function"><span class="keyword">function</span>(<span class="params">item,index,arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">Array</span>.isArray(item))&#123;</span><br><span class="line">               <span class="keyword">return</span> item.map(<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> t+<span class="number">10</span>;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> item+<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">       <span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p><strong>使用方法的方式</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> arr=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">        <span class="comment">// 实例化方法</span></span><br><span class="line">         arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 静态方法</span></span><br><span class="line">        <span class="built_in">Array</span>.isArray();</span><br><span class="line">        <span class="comment">// 把构造函数看成对象，增加的方法</span></span><br><span class="line">        <span class="built_in">Array</span>.from();</span><br><span class="line">        <span class="comment">// static</span></span><br><span class="line">        <span class="comment">//数学方法  Math</span></span><br><span class="line">        <span class="comment">//  Math全部都是静态属性和方法 Math是一种静态类</span></span><br><span class="line">        <span class="comment">// 该类别不能实例化</span></span><br><span class="line">        <span class="keyword">var</span> math=<span class="keyword">new</span> <span class="built_in">Math</span>();<span class="comment">//错误</span></span><br><span class="line">        <span class="built_in">console</span>.log(math);</span><br></pre></td></tr></table></figure><p><strong>math方法的使用</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">console</span>.log(<span class="built_in">Math</span>.PI);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.SQRT2);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.abs(<span class="number">-5</span>));<span class="comment">//绝对值</span></span><br><span class="line">        <span class="keyword">if</span>(a&lt;<span class="number">0</span>) a=-a;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">0.1</span>+<span class="number">0.2</span>===<span class="number">0.3</span>);</span><br><span class="line">        <span class="built_in">Math</span>.round(<span class="number">3.2</span>);<span class="comment">//四舍五入</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(<span class="number">-3.6</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(<span class="number">-4</span>+<span class="number">0.5</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(<span class="number">3.6</span>));<span class="comment">//向下取整  3</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil(<span class="number">3.2</span>));<span class="comment">//向上取整  4</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.max(<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>));<span class="comment">//8 求最大值</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.min(<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>));<span class="comment">//3 求最小值</span></span><br><span class="line">        <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">10</span>];</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.max.apply(<span class="literal">null</span>,arr));<span class="comment">//求数组中的最大值</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.min.apply(<span class="literal">null</span>,arr));<span class="comment">//求数组中的最小值</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.sqrt(<span class="number">9</span>))<span class="comment">//平方根</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.pow(<span class="number">2</span>,<span class="number">2</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.pow(<span class="number">2</span>,<span class="number">32</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.pow(<span class="number">4</span>,<span class="number">0.5</span>));<span class="comment">//平方根</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.pow(<span class="number">4</span>,<span class="number">1</span>/<span class="number">3</span>));<span class="comment">//立方根</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">1</span>&lt;&lt;<span class="number">32</span>);</span><br><span class="line">        <span class="comment">// Math.random() 随机值 0-1</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.random());</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">50</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random()*<span class="number">50</span>));</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">random</span>(<span class="params">min,max</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*(max-min))+min;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(random(<span class="number">50</span>,<span class="number">150</span>));</span><br></pre></td></tr></table></figure><h3 id="string基础"><a class="markdownIt-Anchor" href="#string基础"></a> String基础</h3><p><strong>不同声明或者使用方式储存的位置也是不同的</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> str = <span class="string">"abcdefghijk"</span>;</span><br><span class="line">        <span class="keyword">var</span> str=<span class="string">'abc'</span>;    </span><br><span class="line">        <span class="keyword">var</span> str=<span class="string">`abc`</span>;</span><br><span class="line">        <span class="keyword">var</span> str=<span class="built_in">String</span>(<span class="string">"abc"</span>);<span class="comment">//存在栈中</span></span><br><span class="line">        <span class="keyword">var</span> str1=<span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"abc"</span>);<span class="comment">//字符型对象，存在堆中的</span></span><br><span class="line">        <span class="keyword">var</span> str2=<span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"abc"</span>);<span class="comment">//字符型对象，存在堆中的</span></span><br><span class="line">        <span class="built_in">console</span>.log(str2===str1);<span class="comment">//不相等    </span></span><br><span class="line">        <span class="built_in">console</span>.log(str[<span class="number">0</span>]);<span class="comment">//获取字符串的下标是0的字符</span></span><br><span class="line">        str[<span class="number">0</span>]=<span class="number">10</span>;</span><br><span class="line">        <span class="comment">// str[0]  是只读，不能设置值</span></span><br><span class="line">        <span class="comment">// str.length  长度，只读，只能获取字符串的字符个数</span></span><br><span class="line">        <span class="keyword">var</span> len=str.length<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">var</span> str1=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">while</span>(len&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            str1+=str[len];</span><br><span class="line">            len--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(str1);</span><br></pre></td></tr></table></figure><p><strong>字符串连接</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// str=str.concat("abc");连接字符串</span></span><br><span class="line">        str+=<span class="string">"abc"</span>;</span><br><span class="line">        <span class="keyword">var</span> str1=str+<span class="string">"abc"</span>;</span><br><span class="line">        <span class="keyword">var</span> age=<span class="number">15</span>;</span><br><span class="line">        <span class="keyword">var</span> str=<span class="string">"今年小明"</span>+age+<span class="string">"岁了"</span>;</span><br><span class="line">        <span class="keyword">var</span> str=<span class="string">"今年小明"</span>.concat(age,<span class="string">"岁了"</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(str);</span><br></pre></td></tr></table></figure><p><strong>字符串和数组通用的方法</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">        <span class="built_in">console</span>.log(str.charAt(<span class="number">1</span>));<span class="comment">//str[1];</span></span><br><span class="line">        <span class="built_in">console</span>.log(str.indexOf(<span class="string">"b"</span>,<span class="number">1</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(str.lastIndexOf(<span class="string">"b"</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(str.slice(<span class="number">0</span>,<span class="number">1</span>));<span class="comment">//截取赋值0，1</span></span><br></pre></td></tr></table></figure><p><strong>随机颜色</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">randomColor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="keyword">var</span> color=<span class="string">"rgb("</span>;</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">                 color+=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">256</span>)+<span class="string">","</span>;</span><br><span class="line">             &#125;</span><br><span class="line">             color=color.slice(<span class="number">0</span>,<span class="number">-1</span>)+<span class="string">")"</span>;</span><br><span class="line">             <span class="keyword">return</span> color;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="built_in">console</span>.log(randomColor());</span><br></pre></td></tr></table></figure><p><strong>随机4位大小写验证码</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">getStr</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> arr = [];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">48</span>; i &lt; <span class="number">123</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i &gt; <span class="number">57</span> &amp;&amp; i &lt; <span class="number">65</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span> (i &gt; <span class="number">90</span> &amp;&amp; i &lt; <span class="number">97</span>) <span class="keyword">continue</span>;</span><br><span class="line">                arr.push(<span class="built_in">String</span>.fromCharCode(i));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/*  arr.sort(function()&#123;</span></span><br><span class="line"><span class="comment">                 return Math.random()-0.5;</span></span><br><span class="line"><span class="comment">             &#125;);</span></span><br><span class="line"><span class="comment">             arr.length=4;</span></span><br><span class="line"><span class="comment">             return arr.join(""); */</span></span><br><span class="line">            <span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">while</span> (str.length &lt; <span class="number">4</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> s = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * arr.length);</span><br><span class="line">                <span class="keyword">if</span> (str.indexOf(arr[s]) &gt; <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">                str += arr[s];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(getStr());</span><br></pre></td></tr></table></figure><p><strong>随机字母和数字验证码</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> arr = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">48</span>; i &lt; <span class="number">123</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">57</span> &amp;&amp; i &lt; <span class="number">65</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">90</span> &amp;&amp; i &lt; <span class="number">97</span>) <span class="keyword">continue</span>;</span><br><span class="line">            arr.push(<span class="built_in">String</span>.fromCharCode(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> arr1=[];</span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(arr.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">3</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">var</span> n=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*arr.length);</span><br><span class="line">            arr1.push(arr.splice(n,<span class="number">1</span>)[<span class="number">0</span>]);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(arr1);</span><br></pre></td></tr></table></figure><p><strong>字符串方法</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 正则中使用的方法</span></span><br><span class="line">        <span class="built_in">console</span>.log(str.search(<span class="string">"a"</span>));<span class="comment">//查找</span></span><br><span class="line">        <span class="built_in">console</span>.log(str.match(<span class="string">"a"</span>));<span class="comment">//查找</span></span><br><span class="line">        <span class="built_in">console</span>.log(str.replace(要查找的内容,要替换的值或者回调函数))</span><br><span class="line">        <span class="built_in">console</span>.log(str.replace(<span class="string">"a"</span>,<span class="string">"z"</span>));<span class="comment">//替换字符串中指定的内容，返回被替换后的字符串，原字符串不改变</span></span><br><span class="line">        <span class="comment">// 现在仅能替换第一个被查找到的元素</span></span><br><span class="line">        <span class="comment">// substring不允许使用负数（负数就是0）</span></span><br><span class="line">        <span class="comment">// 反向截取</span></span><br><span class="line">        <span class="built_in">console</span>.log(str.substring(<span class="number">4</span>,<span class="number">0</span>));</span><br><span class="line">        <span class="comment">// substr</span></span><br><span class="line">        <span class="comment">// 截取固定长度的字符串</span></span><br><span class="line">        <span class="comment">// str.substr(从什么位置开始，截取字符串的长度);</span></span><br><span class="line">        <span class="comment">// 开始位置可以使用负数,如果没有给长度，就会截取到尾部</span></span><br><span class="line">        <span class="built_in">console</span>.log(str.substr(<span class="number">-6</span>));</span><br><span class="line">        <span class="keyword">var</span> str=<span class="string">"xietian@163.com"</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(str.substring(str.indexOf(<span class="string">"@"</span>)+<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">var</span> str=<span class="string">"a,b,c,d,e"</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(str.split(<span class="string">","</span>));<span class="comment">//将字符串以什么符号切割成数组</span></span><br><span class="line">        <span class="built_in">console</span>.log(str.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>));</span><br><span class="line">        <span class="keyword">var</span> str=<span class="string">"xietian@163.com"</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(str.split(<span class="string">"@"</span>)[<span class="number">1</span>]);</span><br><span class="line">        <span class="built_in">console</span>.log(str.toUpperCase());<span class="comment">//转换成大写</span></span><br><span class="line">        <span class="built_in">console</span>.log(str[<span class="number">0</span>].toUpperCase()+str.slice(<span class="number">1</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(str.toLowerCase());<span class="comment">//转换为小写字母</span></span><br></pre></td></tr></table></figure><h3 id="date"><a class="markdownIt-Anchor" href="#date"></a> Date</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        <span class="built_in">console</span>.log(date);    </span><br><span class="line">        <span class="built_in">console</span>.log(date.toUTCString());<span class="comment">//获取格林尼治日期时间</span></span><br><span class="line">        <span class="built_in">console</span>.log(date.toLocaleString());<span class="comment">//获取本地日期时间</span></span><br><span class="line">        <span class="built_in">console</span>.log(date.toLocaleDateString());<span class="comment">//获取本地日期</span></span><br><span class="line">        <span class="built_in">console</span>.log(date.toLocaleTimeString());<span class="comment">//获取本地时间</span></span><br><span class="line">        <span class="built_in">console</span>.log(date.getTime());<span class="comment">//获取时间戳 1970.1.1，0点到现在的毫秒数</span></span><br><span class="line">        <span class="comment">// 时间戳永远都不相同</span></span><br></pre></td></tr></table></figure><p><strong>循环10000次的时间</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> time=<span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">10000</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">var</span> a=<span class="built_in">Math</span>.pow(<span class="number">2</span>,<span class="number">20</span>); </span><br><span class="line">            <span class="keyword">var</span> a=<span class="number">1</span>&lt;&lt;<span class="number">20</span>;   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()-time);</span><br></pre></td></tr></table></figure><h3 id="计算循环的时间"><a class="markdownIt-Anchor" href="#计算循环的时间"></a> 计算循环的时间</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="keyword">var</span> dateManager=&#123;</span><br><span class="line">            date:&#123;&#125;,</span><br><span class="line">            num:<span class="number">0</span>,</span><br><span class="line">            start:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="comment">// 对象的方法中，如果调用了该对象的属性，就需要使用this</span></span><br><span class="line">                <span class="keyword">this</span>.num++;</span><br><span class="line">                <span class="comment">// dateManager.num++;</span></span><br><span class="line">                <span class="keyword">this</span>.date[<span class="string">"date_"</span>+<span class="keyword">this</span>.num]=<span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"date_"</span>+<span class="keyword">this</span>.num</span><br><span class="line">            &#125;,</span><br><span class="line">            end:<span class="function"><span class="keyword">function</span>(<span class="params">id</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> time=<span class="keyword">this</span>.date[id];</span><br><span class="line">                <span class="keyword">delete</span> <span class="keyword">this</span>.date[id];</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>().getTime()-time;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* var dm=dateManager;</span></span><br><span class="line"><span class="comment">        dateManager=&#123;&#125;;</span></span><br><span class="line"><span class="comment">        dm.start();</span></span><br><span class="line"><span class="comment">        var id=date.start();</span></span><br><span class="line"><span class="comment">        // .....</span></span><br><span class="line"><span class="comment">        // ....</span></span><br><span class="line"><span class="comment">        var ids=date.start();</span></span><br><span class="line"><span class="comment">        // ...</span></span><br><span class="line"><span class="comment">        console.log(date.end(id));</span></span><br><span class="line"><span class="comment">        //...</span></span><br><span class="line"><span class="comment">        console.log(date.end(ids));  */</span></span><br><span class="line">        <span class="keyword">var</span> id1=dateManager.start();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">1000000</span>;i++)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> id2=dateManager.start();</span><br><span class="line">      <span class="keyword">var</span> ids=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(dateManager.end(id1));</span><br><span class="line">            clearTimeout(ids);</span><br><span class="line">            ids=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                clearTimeout(ids);</span><br><span class="line">                <span class="built_in">console</span>.log(dateManager.end(id2));</span><br><span class="line">            &#125;,<span class="number">1000</span>)</span><br><span class="line">        &#125;,<span class="number">1000</span>)</span><br></pre></td></tr></table></figure><p><strong>获取日期</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        <span class="built_in">console</span>.log(date.getYear());</span><br><span class="line">        <span class="built_in">console</span>.log(date.getFullYear());<span class="comment">//年</span></span><br><span class="line">        <span class="built_in">console</span>.log(date.getMonth());<span class="number">0</span><span class="number">-11</span><span class="comment">//月</span></span><br><span class="line">        <span class="built_in">console</span>.log(date.getDate());<span class="comment">//日期</span></span><br><span class="line">        <span class="built_in">console</span>.log(date.getDay());<span class="comment">//星期 星期日0，1-6星期一-星期六</span></span><br><span class="line">        <span class="built_in">console</span>.log(date.getHours());<span class="comment">//小时</span></span><br><span class="line">        <span class="built_in">console</span>.log(date.getMinutes());<span class="comment">//分 </span></span><br><span class="line">        <span class="built_in">console</span>.log(date.getSeconds());<span class="comment">//秒</span></span><br><span class="line">        <span class="built_in">console</span>.log(date.getMilliseconds());<span class="comment">//毫秒</span></span><br><span class="line">        <span class="built_in">console</span>.log(date.getUTCDate());<span class="comment">//格林尼治日期</span></span><br><span class="line">        date.setFullYear(<span class="number">2021</span>);</span><br><span class="line">        <span class="comment">// 设置日期时间时，如果超出范围，就会自动进位</span></span><br><span class="line">        date.setMonth(<span class="number">12</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(date);</span><br><span class="line">        date.setMinutes(date.getMinutes()+<span class="number">5</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(date);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;特殊数组和字符串&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#特殊数组和字符串&quot;&gt;&lt;/a&gt; 特殊数组和字符串&lt;/h1&gt;
&lt;h3 id=&quot;复杂型数组&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#复杂型数组&quot;
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="字符串" scheme="https://cooli-willson.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>5.js基础 递归和数组</title>
    <link href="https://cooli-willson.github.io/2020/01/22/5.js%E5%9F%BA%E7%A1%80%20%E9%80%92%E5%BD%92%E5%92%8C%E6%95%B0%E7%BB%84/"/>
    <id>https://cooli-willson.github.io/2020/01/22/5.js%E5%9F%BA%E7%A1%80%20%E9%80%92%E5%BD%92%E5%92%8C%E6%95%B0%E7%BB%84/</id>
    <published>2020-01-22T15:12:26.387Z</published>
    <updated>2020-01-22T15:15:20.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="5js基础-递归和数组"><a class="markdownIt-Anchor" href="#5js基础-递归和数组"></a> 5.js基础 递归和数组</h1><h3 id="递归"><a class="markdownIt-Anchor" href="#递归"></a> 递归</h3><p><strong>递归与回调函数的使用</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="comment">// console.log(i);</span></span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">4</span>) fn2();    </span><br><span class="line">            <span class="built_in">console</span>.log(i); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="comment">// console.log(i);</span></span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">4</span>) fn3();  </span><br><span class="line">            <span class="built_in">console</span>.log(i);   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn3</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="comment">// console.log(i);</span></span><br><span class="line">            <span class="comment">// if(i&lt;4) fn(); </span></span><br><span class="line">            <span class="built_in">console</span>.log(i); </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>浅复制与深层复制</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">            a: <span class="number">1</span>,</span><br><span class="line">            b: <span class="number">2</span>,</span><br><span class="line">            c: &#123;</span><br><span class="line">                a: <span class="number">3</span>,</span><br><span class="line">                b: <span class="number">4</span>,</span><br><span class="line">                c: &#123;</span><br><span class="line">                    a: <span class="number">5</span>,</span><br><span class="line">                    b: <span class="number">6</span>,</span><br><span class="line">                    c: &#123;</span><br><span class="line">                        a: <span class="number">7</span>,</span><br><span class="line">                        b: <span class="number">8</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">         <span class="keyword">var</span> obj1=&#123;&#125;;</span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> obj)&#123;</span><br><span class="line">             obj1[prop]=obj[prop];</span><br><span class="line">         &#125;</span><br><span class="line">         obj.c.a=<span class="number">10</span>;</span><br><span class="line">         <span class="built_in">console</span>.log(obj1);</span><br><span class="line">         </span><br><span class="line">         </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">cloneObj</span>(<span class="params">target,source</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> source)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="keyword">typeof</span> source[prop]===<span class="string">"object"</span> &amp;&amp; source[prop]!==<span class="literal">null</span>)&#123;</span><br><span class="line">                            target[prop]=&#123;&#125;;</span><br><span class="line">                            cloneObj(target[prop],source[prop])</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            target[prop]=source[prop];</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> target;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 同样的属性 使用引用关系的方式深度遍历</span></span><br><span class="line">            <span class="keyword">var</span> o = source.c;</span><br><span class="line">            target.c = &#123;&#125;;</span><br><span class="line">            <span class="keyword">var</span> o1 = target.c;</span><br><span class="line">            <span class="keyword">while</span> (o) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> prop <span class="keyword">in</span> o) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">typeof</span> o[prop] !== <span class="string">"object"</span> || o[prop] === <span class="literal">null</span>) &#123;</span><br><span class="line">                        o1[prop] = o[prop];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                o = o.c;</span><br><span class="line">                <span class="keyword">if</span> (o) &#123;</span><br><span class="line">                    o1.c = &#123;&#125;;</span><br><span class="line">                    o1 = o1.c;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> target</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> obj1 = &#123;&#125;;</span><br><span class="line">        obj1 = cloneObj(obj1, obj);</span><br><span class="line">        <span class="comment">// obj.c.c.a = 10;</span></span><br><span class="line">        <span class="built_in">console</span>.log(obj1);</span><br></pre></td></tr></table></figure><h3 id="数组的创建"><a class="markdownIt-Anchor" href="#数组的创建"></a> 数组的创建</h3><p><strong>什么是数组</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[];</span><br><span class="line">        <span class="keyword">var</span> arr=<span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">        <span class="keyword">var</span> arr=<span class="keyword">new</span> <span class="built_in">Object</span>([]);</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 数组是一个引用列表</span></span><br><span class="line">        <span class="comment">// 列表：顺序，只有值，紧密，速度慢</span></span><br><span class="line">        <span class="keyword">var</span> arr=[<span class="number">3</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">9</span>];</span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><p><strong>字面量创建数组</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">        <span class="comment">// arr是数组  1是索引值（下标）  arr[1]元素（下标变量）</span></span><br><span class="line">        <span class="built_in">console</span>.log(arr[<span class="number">1</span>]);</span><br><span class="line">        arr[<span class="number">1</span>]=<span class="number">10</span>;<span class="comment">//可以修改下标变量的结果</span></span><br><span class="line">        <span class="built_in">console</span>.log(arr[<span class="number">1</span>]);</span><br><span class="line">        arr[<span class="number">5</span>]=<span class="number">10</span>;</span><br><span class="line">        arr[<span class="number">7</span>]=<span class="number">10</span>;<span class="comment">//数组的紧密型，如果中间空余，就会自动补充空元素</span></span><br></pre></td></tr></table></figure><p><strong>数组的使用与特性</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 遍历内容较多，当添加删除元素时，因为数组紧密型，速度变慢，尤其前面插入和删除</span></span><br><span class="line">        arr[<span class="number">-1</span>]=<span class="number">10</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br><span class="line">        <span class="comment">// length  数组得长度</span></span><br><span class="line">        <span class="built_in">console</span>.log(arr.length);<span class="comment">//表示当前数组得索引下标的最大值+1，因为从0开始</span></span><br><span class="line">        <span class="comment">// 当添加不是索引数据（0开始），-1，不会累计在长度中，而作为对象的key，value增加内容</span></span><br><span class="line">        arr[<span class="string">"6"</span>]=<span class="number">10</span>;</span><br><span class="line">        arr[arr.length]=<span class="number">10</span>;<span class="comment">//在数组的尾部添加一个新元素</span></span><br><span class="line">        <span class="comment">// 每次添加元素后，长度会发生改变，length会变化的，因此下面这句不会修改最后一个元素，而是添加一个新元素</span></span><br><span class="line">        arr[arr.length]=<span class="number">11</span>;<span class="comment">//在数组的尾部添加一个新元素</span></span><br><span class="line">        arr.length=<span class="number">10</span>;<span class="comment">//如果直接设置数组的长度，长度大于原来的数组的长度时，添加空元素，让数量达到这个设置的值</span></span><br><span class="line">        arr.length=arr.length<span class="number">-1</span>;<span class="comment">//如果长度比原来少一个，就会删除最尾部元素</span></span><br><span class="line">        arr.length--;</span><br><span class="line">        arr.length=<span class="number">0</span>;<span class="comment">//表示清空数组</span></span><br><span class="line">        arr=[];<span class="comment">//引用地址变化了</span></span><br><span class="line">        arr.length=<span class="number">-2</span>;<span class="comment">//数组的长度不能为负值</span></span><br><span class="line">        arr.length=<span class="string">"a"</span>;<span class="comment">//如果给的不是数值，会隐式转换为数值，如果值是NaN，就会报错</span></span><br><span class="line">        <span class="built_in">console</span>.log(arr,arr.length);</span><br><span class="line">            <span class="comment">// 构造函数创建</span></span><br><span class="line">            <span class="comment">// 构造函数实例化对象</span></span><br><span class="line">            <span class="keyword">var</span> arr=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(arr);</span><br><span class="line">            <span class="comment">// 字符串转数组类型</span></span><br><span class="line">            <span class="keyword">var</span> arr=<span class="built_in">Array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(arr);</span><br><span class="line">            <span class="comment">// 数组通过构造函数创建时，如果只有一个参数，并且参数是正整数，</span></span><br><span class="line">            <span class="comment">// 这个数就是数组的长度，而不作为数组的新元素</span></span><br><span class="line">            <span class="comment">// 如果是数字，但不是正整数，都会报错</span></span><br><span class="line">            <span class="comment">// 如果不是数字，则作为数组的第一个元素添加</span></span><br><span class="line">            <span class="keyword">var</span> arr=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">var</span> arr=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"3"</span>);</span><br><span class="line">            <span class="keyword">var</span> arr=<span class="built_in">Array</span>(<span class="number">5</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;5js基础-递归和数组&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#5js基础-递归和数组&quot;&gt;&lt;/a&gt; 5.js基础 递归和数组&lt;/h1&gt;
&lt;h3 id=&quot;递归&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="数组" scheme="https://cooli-willson.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="递归" scheme="https://cooli-willson.github.io/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>在表格中插入文字和图片</title>
    <link href="https://cooli-willson.github.io/2020/01/22/%E5%9C%A8%E8%A1%A8%E6%A0%BC%E4%B8%AD%E6%8F%92%E5%85%A5%E6%96%87%E5%AD%97%E5%92%8C%E5%9B%BE%E7%89%87/"/>
    <id>https://cooli-willson.github.io/2020/01/22/%E5%9C%A8%E8%A1%A8%E6%A0%BC%E4%B8%AD%E6%8F%92%E5%85%A5%E6%96%87%E5%AD%97%E5%92%8C%E5%9B%BE%E7%89%87/</id>
    <published>2020-01-22T14:58:53.660Z</published>
    <updated>2020-01-22T19:02:35.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="在表格中插入文字和图片"><a class="markdownIt-Anchor" href="#在表格中插入文字和图片"></a> 在表格中插入文字和图片</h3><p><strong>CSS部分</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">   <span class="selector-tag">table</span> &#123;</span><br><span class="line">            <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">td</span> &#123;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">img</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>js部分</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// fn();</span></span><br><span class="line">         <span class="keyword">var</span> data1 = [</span><br><span class="line">             &#123; <span class="attr">id</span>: <span class="number">1001</span>, <span class="attr">icon</span>: <span class="string">"img/icon01.png"</span>, <span class="attr">name</span>: <span class="string">"餐饮0"</span>, <span class="attr">num</span>: <span class="number">1</span>, <span class="attr">price</span>: <span class="number">10</span> &#125;,</span><br><span class="line">             &#123; <span class="attr">id</span>: <span class="number">1002</span>, <span class="attr">icon</span>: <span class="string">"img/icon02.png"</span>, <span class="attr">name</span>: <span class="string">"餐饮1"</span>, <span class="attr">num</span>: <span class="number">1</span>, <span class="attr">price</span>: <span class="number">20</span> &#125;,</span><br><span class="line">             &#123; <span class="attr">id</span>: <span class="number">1003</span>, <span class="attr">icon</span>: <span class="string">"img/icon03.png"</span>, <span class="attr">name</span>: <span class="string">"餐饮2"</span>, <span class="attr">num</span>: <span class="number">1</span>, <span class="attr">price</span>: <span class="number">30</span> &#125;,</span><br><span class="line">             &#123; <span class="attr">id</span>: <span class="number">1004</span>, <span class="attr">icon</span>: <span class="string">"img/icon04.png"</span>, <span class="attr">name</span>: <span class="string">"餐饮3"</span>, <span class="attr">num</span>: <span class="number">1</span>, <span class="attr">price</span>: <span class="number">40</span> &#125;,</span><br><span class="line">             &#123; <span class="attr">id</span>: <span class="number">1005</span>, <span class="attr">icon</span>: <span class="string">"img/icon05.png"</span>, <span class="attr">name</span>: <span class="string">"餐饮4"</span>, <span class="attr">num</span>: <span class="number">1</span>, <span class="attr">price</span>: <span class="number">50</span> &#125;,</span><br><span class="line">             &#123; <span class="attr">id</span>: <span class="number">1006</span>, <span class="attr">icon</span>: <span class="string">"img/icon06.png"</span>, <span class="attr">name</span>: <span class="string">"餐饮5"</span>, <span class="attr">num</span>: <span class="number">1</span>, <span class="attr">price</span>: <span class="number">60</span> &#125;,</span><br><span class="line">             &#123; <span class="attr">id</span>: <span class="number">1007</span>, <span class="attr">icon</span>: <span class="string">"img/icon07.png"</span>, <span class="attr">name</span>: <span class="string">"餐饮6"</span>, <span class="attr">num</span>: <span class="number">1</span>, <span class="attr">price</span>: <span class="number">70</span> &#125;,</span><br><span class="line">             &#123; <span class="attr">id</span>: <span class="number">1008</span>, <span class="attr">icon</span>: <span class="string">"img/icon08.png"</span>, <span class="attr">name</span>: <span class="string">"餐饮7"</span>, <span class="attr">num</span>: <span class="number">1</span>, <span class="attr">price</span>: <span class="number">80</span> &#125;,</span><br><span class="line">             &#123; <span class="attr">id</span>: <span class="number">1009</span>, <span class="attr">icon</span>: <span class="string">"img/icon09.png"</span>, <span class="attr">name</span>: <span class="string">"餐饮8"</span>, <span class="attr">num</span>: <span class="number">1</span>, <span class="attr">price</span>: <span class="number">90</span> &#125;,</span><br><span class="line">             &#123; <span class="attr">id</span>: <span class="number">1010</span>, <span class="attr">icon</span>: <span class="string">"img/icon10.png"</span>, <span class="attr">name</span>: <span class="string">"餐饮9"</span>, <span class="attr">num</span>: <span class="number">1</span>, <span class="attr">price</span>: <span class="number">100</span> &#125;</span><br><span class="line">         ];</span><br><span class="line">        </span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">createTable</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">             <span class="keyword">var</span> table = <span class="string">"&lt;table&gt;"</span>;</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">var</span> prop <span class="keyword">in</span> data) &#123;</span><br><span class="line">                 table += <span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line">                 <span class="keyword">var</span> obj = data[prop];</span><br><span class="line">                 <span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> obj) &#123;</span><br><span class="line">                     <span class="keyword">if</span> (attr === <span class="string">"icon"</span>) &#123;</span><br><span class="line">                         table += <span class="string">"&lt;td&gt;&lt;img src='"</span> + obj[attr] + <span class="string">"'&gt;&lt;/td&gt;"</span>;</span><br><span class="line">                     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                         table += <span class="string">"&lt;td&gt;"</span> + obj[attr] + <span class="string">"&lt;/td&gt;"</span>;</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">                 table += <span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">             &#125;</span><br><span class="line">             table += <span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line">             <span class="built_in">document</span>.write(table);</span><br><span class="line">         &#125;</span><br><span class="line">         createTable(data1);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;在表格中插入文字和图片&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#在表格中插入文字和图片&quot;&gt;&lt;/a&gt; 在表格中插入文字和图片&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CSS部分&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;hig
      
    
    </summary>
    
    
      <category term="功能" scheme="https://cooli-willson.github.io/categories/%E5%8A%9F%E8%83%BD/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="功能" scheme="https://cooli-willson.github.io/tags/%E5%8A%9F%E8%83%BD/"/>
    
      <category term="循环" scheme="https://cooli-willson.github.io/tags/%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>实现简单的计算器功能</title>
    <link href="https://cooli-willson.github.io/2020/01/22/%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8%E5%8A%9F%E8%83%BD/"/>
    <id>https://cooli-willson.github.io/2020/01/22/%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8%E5%8A%9F%E8%83%BD/</id>
    <published>2020-01-22T14:49:54.302Z</published>
    <updated>2020-01-22T19:02:23.897Z</updated>
    
    <content type="html"><![CDATA[<h3 id="实现简易计算器功能"><a class="markdownIt-Anchor" href="#实现简易计算器功能"></a> 实现简易计算器功能</h3><p><strong>css部分</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div0</span> &#123;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">340px</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">275px</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">        <span class="attribute">background-color</span>:<span class="number">#aa0055</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.div0</span>&gt;<span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">padding-top</span>: <span class="number">10px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.div0</span>&gt;<span class="selector-tag">div</span>&gt;<span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">text-align</span>: center;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">        <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">3px</span> <span class="number">3px</span> <span class="number">2px</span> <span class="number">#4f0027</span>;</span><br><span class="line">        <span class="attribute">user-select</span>: none;                  <span class="comment">/* 将输入模式改为光标 */</span></span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#ff7dbe</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">        <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">80%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.div0</span>&gt;<span class="selector-tag">div</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">        <span class="attribute">box-shadow</span>: -<span class="number">2px</span> -<span class="number">2px</span> <span class="number">2px</span>  <span class="number">#4f0027</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.div0</span>&gt;<span class="selector-tag">input</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">        <span class="attribute">text-align</span>: right;</span><br><span class="line">        <span class="attribute">padding-right</span>: <span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#6f0037</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">        <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>html部分</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div0"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">id</span>=<span class="string">"input0"</span> <span class="attr">disabled</span>&gt;</span>  <span class="comment">&lt;!-- 禁止输入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div4"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div5"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div6"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div7"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div8"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div9"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div10"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div11"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div12"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div13"</span>&gt;</span>*<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div14"</span>&gt;</span>/<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div15"</span>&gt;</span>=<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div16"</span>&gt;</span>C<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>js部分</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">var</span> value, type, input;</span><br><span class="line">        <span class="keyword">var</span> value = <span class="string">"0"</span>;</span><br><span class="line">        getValue();</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            input = <span class="built_in">document</span>.getElementById(<span class="string">"input0"</span>);<span class="comment">//将input标签储存在input中</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">17</span>; i++) &#123;<span class="comment">//遍历每个标签</span></span><br><span class="line">                <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">"div"</span> + i); <span class="comment">//将得到div标签存放到div变量中</span></span><br><span class="line">                div.onclick = clickFunction;   <span class="comment">//当前div点击时调用clickFunction函数</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">clickFunction</span>(<span class="params"></span>) </span>&#123;         </span><br><span class="line">            <span class="keyword">switch</span> (<span class="keyword">this</span>.innerHTML) &#123;     <span class="comment">//通过当前点击获取的值来判断该执行怎样的操作</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">"+"</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"-"</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"*"</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"/"</span>:</span><br><span class="line">                    type = <span class="keyword">this</span>.innerHTML;   <span class="comment">//将运算符储存在type变量中</span></span><br><span class="line">                    value = input.value;     <span class="comment">//将当前拼接的字符串储存在value中</span></span><br><span class="line">                    input.value = <span class="string">"0"</span>;       <span class="comment">//在点击运算运算符后显示屏幕显示为0</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"="</span>:</span><br><span class="line">                    getResult();            <span class="comment">//调用计算函数</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"C"</span>:                   <span class="comment">//清空操作  当前所有值都设为初始值</span></span><br><span class="line">                    value = <span class="string">"0"</span>;             </span><br><span class="line">                    input.value = <span class="string">"0"</span>;</span><br><span class="line">                    type = <span class="string">""</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    input.value=<span class="built_in">Number</span>(input.value+<span class="keyword">this</span>.innerHTML);<span class="comment">//通过Number将拼接成字符串的结果转换为数值型赋值给input.value</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getResult</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">switch</span>(type)&#123;                   <span class="comment">//通过运算符来判断该执行那种运算操作</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">"+"</span>:</span><br><span class="line">                    input.value=<span class="built_in">Number</span>(value)+<span class="built_in">Number</span>(input.value);</span><br><span class="line">                    <span class="keyword">return</span>;                 <span class="comment">//return可以直接返回 break还要继续判断</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">"-"</span>:</span><br><span class="line">                    input.value=<span class="built_in">Number</span>(value)-<span class="built_in">Number</span>(input.value);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"*"</span>:</span><br><span class="line">                    input.value=<span class="built_in">Number</span>(value)*<span class="built_in">Number</span>(input.value);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"/"</span>:</span><br><span class="line">                    input.value=<span class="built_in">Number</span>(value)/input.value!==<span class="number">0</span>? <span class="built_in">Number</span>(input.value):<span class="string">"输入错误"</span>;   <span class="comment">//正则表达式,若被除数为0，则提示“输入错误”;</span></span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;实现简易计算器功能&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#实现简易计算器功能&quot;&gt;&lt;/a&gt; 实现简易计算器功能&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;css部分&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight
      
    
    </summary>
    
    
      <category term="功能" scheme="https://cooli-willson.github.io/categories/%E5%8A%9F%E8%83%BD/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="功能" scheme="https://cooli-willson.github.io/tags/%E5%8A%9F%E8%83%BD/"/>
    
      <category term="计算器" scheme="https://cooli-willson.github.io/tags/%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>4.javascript 基础-函数</title>
    <link href="https://cooli-willson.github.io/2020/01/22/4.js%E5%9F%BA%E7%A1%80-%E5%87%BD%E6%95%B0/"/>
    <id>https://cooli-willson.github.io/2020/01/22/4.js%E5%9F%BA%E7%A1%80-%E5%87%BD%E6%95%B0/</id>
    <published>2020-01-22T14:20:23.154Z</published>
    <updated>2020-01-22T14:34:39.677Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h1><h3 id="函数的创建"><a class="markdownIt-Anchor" href="#函数的创建"></a> 函数的创建</h3><ul><li>命名函数创建</li><li>当前函数最在script标签创建时，优先将该函数储存在堆中，并且函数名储存在栈中</li><li>当前这个代码所在的script标签的上面的script的标签中任意函数和全局变量都是可以被调用的</li><li>但是当前代码所在的script标签下面的script的标签中函数和全局变量是不可以调用的</li><li>函数名：驼峰式命名法，首字母一般都是小写，如果该函数是构造函数，函数名首字母需要大写</li><li>函数后面的（）是执行当前函数需要传入参数内容</li><li>{}里面是函数的语句块，当执行函数时，该语句的内容就会被执行</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a+b);</span><br><span class="line">        &#125;</span><br><span class="line">          fn(<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><p><strong>匿名函数</strong></p><ul><li>代码运行到定义匿名函数后才可以调用该匿名函数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fn=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         &#125;</span><br><span class="line">         (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="comment">// 自执行函数</span></span><br><span class="line">         &#125;)();</span><br></pre></td></tr></table></figure><h3 id="函数的作用域"><a class="markdownIt-Anchor" href="#函数的作用域"></a> 函数的作用域</h3><p><strong>函数内与函数外的变量</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数外的变量，在函数中可以调用到</span></span><br><span class="line">         <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a);</span><br><span class="line">        &#125;</span><br><span class="line">        fn();</span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line">            <span class="comment">// 函数内定义的变量不能被函数外调用</span></span><br><span class="line">             <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">                <span class="comment">//  在函数内使用var定义的变量就是局部变量</span></span><br><span class="line">                <span class="comment">// 在函数外用var定义的变量就是全局变量。</span></span><br><span class="line">                <span class="comment">// 不使用var直接给一个变量赋值就是相当于给window增加一个属性，那么这个属性也是全局变量</span></span><br><span class="line">             &#125;</span><br><span class="line">             fn();</span><br><span class="line">             <span class="built_in">console</span>.log(a);</span><br><span class="line">        <span class="comment">//  var是定义变量，如果在函数中没有用var定义变量，直接使用变量，该变量是全局变量</span></span><br><span class="line">             <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                  a=<span class="number">10</span>;</span><br><span class="line">             &#125;</span><br><span class="line">             fn();</span><br><span class="line">             <span class="built_in">console</span>.log(a);</span><br><span class="line">        <span class="comment">//  this===window</span></span><br><span class="line">        <span class="comment">// var b=10;</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           <span class="comment">//  window被省略了,如果没有使用var定义变量，就意味着直接在window对象下增加这个属性</span></span><br><span class="line">             a=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fn();</span><br><span class="line">        <span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p><strong>局部变量与全局变量</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="keyword">var</span> a=<span class="number">5</span>;</span><br><span class="line">             <span class="built_in">console</span>.log(a);<span class="comment">//5</span></span><br><span class="line">            <span class="comment">//  有局部变量时，先调用局部变量，没有局部变量才带哦用全局变量</span></span><br><span class="line">         &#125;</span><br><span class="line">         fn();</span><br><span class="line">         <span class="built_in">console</span>.log(a);<span class="comment">//10</span></span><br><span class="line">          <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">          <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="comment">// 在函数中任意位置使用var定义的变量，在该函数的任意位置都认为该变量是局部变量</span></span><br><span class="line">             <span class="built_in">console</span>.log(a);<span class="comment">//undefined</span></span><br><span class="line">              <span class="keyword">var</span> a=<span class="number">5</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          fn();</span><br><span class="line">          <span class="built_in">console</span>.log(a);<span class="comment">//10</span></span><br><span class="line">         <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="keyword">var</span> a=<span class="number">20</span>;</span><br><span class="line">            <span class="comment">// console.log(a+window.a);</span></span><br><span class="line">            <span class="built_in">console</span>.log(a+<span class="keyword">this</span>.a);</span><br><span class="line">         &#125;</span><br><span class="line">         fn();</span><br><span class="line">        <span class="comment">// function fn(a)&#123;</span></span><br><span class="line">        <span class="comment">//     // console.log(a);</span></span><br><span class="line">        <span class="comment">//     // 参数就是局部变量</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// fn(5);</span></span><br><span class="line">        </span><br><span class="line">           <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">           <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log(a);<span class="comment">//5</span></span><br><span class="line">               <span class="keyword">var</span> a=<span class="number">20</span>;</span><br><span class="line">            <span class="comment">//    这里相当于重新定义了一个局部变量a</span></span><br><span class="line">           &#125;</span><br><span class="line">           fn(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">5</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">var</span> b=<span class="number">20</span>;</span><br><span class="line">                 <span class="keyword">var</span> a=<span class="number">100</span>;</span><br><span class="line">                 <span class="built_in">console</span>.log(a);</span><br><span class="line">            &#125;</span><br><span class="line">            fn1();</span><br><span class="line">            <span class="built_in">console</span>.log(b);</span><br><span class="line">        &#125;</span><br><span class="line">        fn();</span><br><span class="line">        a(a);<span class="comment">//a都是全局变量，下面a=10还没有运行，所以在这里全局变量就是函数a,我们把函数a当前参数填入</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">10</span>;<span class="comment">//覆盖了函数a，函数a在这里也是全局变量</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a);</span><br><span class="line">            <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// a(a);</span></span><br><span class="line">        </span><br><span class="line">          <span class="keyword">var</span> a;</span><br><span class="line">          a(a);        </span><br><span class="line">          a=<span class="number">5</span>;</span><br><span class="line">          <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">              <span class="built_in">console</span>.log(a);</span><br><span class="line">              <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure><h3 id="函数的参数"><a class="markdownIt-Anchor" href="#函数的参数"></a> 函数的参数</h3><ul><li>参数可以时任意内容，如没有对应填入，该参数就是undefined、</li><li>执行函数时，填入的参数就相当于给参数赋值</li><li>js是一个弱类型语言，因此，参数不能强制约定类型</li><li>ES5中不能和设置参数的默认值</li><li>执行函数时填入值与函数参数顺序时一一对应关系</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">              <span class="comment">// 相当于给obj赋值一个o，obj和o的引用地址相同</span></span><br><span class="line">              <span class="comment">// 当修改obj的属性时，全局的o属性也会被修改</span></span><br><span class="line">              obj.a=<span class="number">10</span>;</span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          <span class="keyword">var</span> o=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">          fn(o);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// 重新设置了obj的新的引用地址</span></span><br><span class="line">            obj=&#123;</span><br><span class="line">                a:<span class="number">3</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> o=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        fn(o);</span><br></pre></td></tr></table></figure><p><strong>回调函数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">            f(a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a+<span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a+<span class="number">100</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn3</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a+<span class="number">1000</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">      </span><br><span class="line">        fn(fn2);</span><br></pre></td></tr></table></figure><p><strong>如果参数的数量不确定，就不设置参数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMaxValue</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              <span class="comment">// console.log(arguments);//ES5以上版本时尽量少用,arguments参数集</span></span><br><span class="line">              <span class="keyword">if</span>(<span class="built_in">arguments</span>.length===<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">              <span class="keyword">var</span> max=<span class="built_in">arguments</span>[<span class="number">0</span>];</span><br><span class="line">              <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;<span class="built_in">arguments</span>.length;i++)&#123;</span><br><span class="line">                  max=max&gt;<span class="built_in">arguments</span>[i] ? max : <span class="built_in">arguments</span>[i];</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="built_in">console</span>.log(max);</span><br><span class="line">          &#125;</span><br><span class="line">          getMaxValue(<span class="number">1</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">10</span>);</span><br><span class="line">           <span class="function"><span class="keyword">function</span> <span class="title">getMaxValue</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">               <span class="comment">// console.log(arguments.callee);//该函数自己</span></span><br><span class="line">               <span class="comment">// console.log(arguments.callee.caller);</span></span><br><span class="line">           &#125;</span><br><span class="line">   </span><br><span class="line">           getMaxValue(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>);</span><br></pre></td></tr></table></figure><p><strong>递归</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span></span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             i++;</span><br><span class="line">             <span class="keyword">if</span>(i&lt;<span class="number">10</span>) fn();</span><br><span class="line">         &#125;</span><br><span class="line">         fn();</span><br><span class="line">         <span class="built_in">console</span>.log(i);</span><br><span class="line">        </span><br><span class="line">                <span class="comment">// 用于匿名函数中调用自身函数</span></span><br><span class="line">                <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">                (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    i++;</span><br><span class="line">                    <span class="keyword">if</span>(i&lt;<span class="number">10</span>) <span class="built_in">arguments</span>.callee();</span><br><span class="line">                &#125;)();</span><br><span class="line">        </span><br><span class="line">                <span class="built_in">console</span>.log(i);</span><br></pre></td></tr></table></figure><p><strong>函数之间的调用</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">                <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"a"</span>);</span><br><span class="line">                    f();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="function"><span class="keyword">function</span> <span class="title">fn3</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"c"</span>);</span><br><span class="line">                    f();</span><br><span class="line">                &#125;</span><br><span class="line">        </span><br><span class="line">                <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="comment">// 调用当前函数的环境函数</span></span><br><span class="line">                    <span class="comment">// console.log(arguments.callee.caller);</span></span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"b"</span>);</span><br><span class="line">                    i++;</span><br><span class="line">                    <span class="keyword">if</span>(i&lt;<span class="number">10</span>) <span class="built_in">arguments</span>.callee.caller(<span class="built_in">arguments</span>.callee);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 耦合</span></span><br><span class="line">        </span><br><span class="line">                fn3(fn2);</span><br></pre></td></tr></table></figure><p><strong>随机生成颜色大小不同的50个方块</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> w, c;</span><br><span class="line">         init();</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">                 w = <span class="built_in">Math</span>.random() * <span class="number">50</span> + <span class="number">50</span>;</span><br><span class="line">                 c = randomColor();</span><br><span class="line">                 createDiv(w, w, c);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">createDiv</span>(<span class="params">_width, _height, _color</span>) </span>&#123;</span><br><span class="line">             <span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line">             str += <span class="string">"&lt;div style='"</span>;</span><br><span class="line">             str += <span class="string">"width:"</span> + _width + <span class="string">"px;"</span>;</span><br><span class="line">             str += <span class="string">"height:"</span> + _height + <span class="string">"px;"</span>;</span><br><span class="line">             str += <span class="string">"background-color:"</span> + _color + <span class="string">";"</span>;</span><br><span class="line">             str += <span class="string">"position:absolute;"</span>;</span><br><span class="line">             str += <span class="string">"left:"</span> + <span class="built_in">Math</span>.random() * <span class="number">1000</span> + <span class="string">"px;"</span>;</span><br><span class="line">             str += <span class="string">"top:"</span> + <span class="built_in">Math</span>.random() * <span class="number">600</span> + <span class="string">"px;"</span>;</span><br><span class="line">             str += <span class="string">"'&gt;&lt;/div&gt;"</span>;</span><br><span class="line">             <span class="built_in">document</span>.write(str);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">randomColor</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">             <span class="keyword">var</span> color = <span class="string">"#"</span>;</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">                 color += <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">16</span>).toString(<span class="number">16</span>);</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">return</span> color;</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><h3 id="return"><a class="markdownIt-Anchor" href="#return"></a> return</h3><p><strong>点击切换div的颜色</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">            <span class="keyword">if</span>(n&lt;<span class="number">5</span>) <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fn(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">// 把id是div0的元素获取成为DOM变量</span></span><br><span class="line">        <span class="keyword">var</span> div=<span class="built_in">document</span>.getElementById(<span class="string">"div0"</span>);</span><br><span class="line">        <span class="comment">// 设置行内样式</span></span><br><span class="line">        div.style.width=<span class="string">"100px"</span>;</span><br><span class="line">        div.style.height=<span class="string">"100px"</span>;</span><br><span class="line">        div.style.backgroundColor=<span class="string">"red"</span>;</span><br><span class="line">        <span class="keyword">var</span> bool=<span class="literal">false</span>;</span><br><span class="line">          div.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              bool=!bool;</span><br><span class="line">              div.style.backgroundColor=bool ? <span class="string">"blue"</span> :<span class="string">"red"</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        div.onclick=clickHandler;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            bool=!bool;</span><br><span class="line">            div.style.backgroundColor=bool ? <span class="string">"blue"</span> :<span class="string">"red"</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="定时器"><a class="markdownIt-Anchor" href="#定时器"></a> <strong>定时器</strong></h4><ul><li>setInterval() ：按照指定的周期（以毫秒计）来调用函数或计算表达式。方法会不停地调用函数，直到 clearInterval() 被调用或窗口被关闭。</li><li>setTimeout() ：在指定的毫秒数后调用函数或计算表达式。</li></ul><h4 id="setinterval"><a class="markdownIt-Anchor" href="#setinterval"></a> setInterval()</h4><p><strong>语法</strong></p><blockquote><p>setInterval(code,millisec)</p></blockquote><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>code</td><td>必须。要调用的函数或要执行的代码串。</td></tr><tr><td>millisec</td><td>必须。周期性执行或调用code之间的时间间隔，以毫秒计</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">// 间隔多长时间执行该函数，时间是毫秒数</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;,<span class="number">1000</span>);</span><br><span class="line">          <span class="keyword">var</span> time=<span class="number">0</span>;</span><br><span class="line">          <span class="comment">// setInterval(执行的函数，间隔的时间);返回一个数值，可以根据这个数值清楚执行函数</span></span><br><span class="line">         <span class="keyword">var</span> ids=setInterval(animation,<span class="number">1000</span>);</span><br><span class="line">          </span><br><span class="line">          <span class="function"><span class="keyword">function</span> <span class="title">animation</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              time++;</span><br><span class="line">              <span class="keyword">if</span>(time&gt;<span class="number">5</span>) clearInterval(ids);<span class="comment">//clearInterval(创建时间间隔id) 清楚时间间隔执行</span></span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure><h4 id="settimeout"><a class="markdownIt-Anchor" href="#settimeout"></a> setTimeout()</h4><p><strong>语法</strong></p><blockquote><p>setTimeout(code,millisec)</p></blockquote><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>code</td><td>必需。要调用的函数后要执行的javascript代码串</td></tr><tr><td>millisec</td><td>在执行代码浅需要等待的毫秒数</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 多少时间后执行该函数</span></span><br><span class="line">        <span class="comment">// setTimeout(执行的函数，间隔的时间);//多长时间后执行</span></span><br><span class="line">         <span class="keyword">var</span> ids=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">              clearTimeout(ids);<span class="comment">//清除时间间隔，每次用完必须清除</span></span><br><span class="line">          &#125;,<span class="number">5000</span>);</span><br><span class="line">        <span class="comment">// setInterval和setTimeout第三个参数都是可以给执行函数传入参数的</span></span><br><span class="line">        <span class="keyword">var</span> ids=setInterval(animation,<span class="number">1000</span>,<span class="number">5</span>);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">animation</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>return 阻断</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> disc=<span class="number">0</span>,bool=<span class="literal">false</span>;</span><br><span class="line">        init();</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">"div0"</span>);</span><br><span class="line">            div.style.width = <span class="string">"50px"</span>;</span><br><span class="line">            div.style.height = <span class="string">"50px"</span>;</span><br><span class="line">            div.style.backgroundColor = <span class="string">"red"</span>;</span><br><span class="line">            div.style.position = <span class="string">"absolute"</span>;</span><br><span class="line">            div.style.left=<span class="string">"0px"</span>;</span><br><span class="line">            div.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                bool=!bool;</span><br><span class="line">            &#125;</span><br><span class="line">            setInterval(anmiation,<span class="number">16</span>,div);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">anmiation</span>(<span class="params">div</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!bool) <span class="keyword">return</span>;</span><br><span class="line">            disc++;</span><br><span class="line">            div.style.left=disc+<span class="string">"px"</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>return break continue的区别</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i===<span class="number">5</span>) <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"a"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        fn();</span><br><span class="line">        <span class="comment">// return 有时候可以替代break</span></span><br><span class="line">        <span class="comment">// return 返回值</span></span><br><span class="line">        <span class="comment">// 可以允许函数返回一个值，仅一个。。</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"a"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 函数在执行时，将会返回一个结果，如果函数中没有return，就会返回undefined</span></span><br><span class="line">        <span class="keyword">var</span> s=fn();</span><br><span class="line">        <span class="built_in">console</span>.log(s);</span><br></pre></td></tr></table></figure><p><strong>随机颜色</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomColor</span>(<span class="params">alpha</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// 如果没有参数，随机</span></span><br><span class="line">            alpha=alpha==<span class="literal">undefined</span> ? <span class="built_in">Math</span>.random().toFixed(<span class="number">2</span>) : alpha;</span><br><span class="line">            <span class="comment">// 传入的参数转换为数值</span></span><br><span class="line">            alpha=<span class="built_in">Number</span>(alpha);</span><br><span class="line">            <span class="comment">// 如果传入的参数是非数值，就让透明度为1</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isNaN</span>(alpha))alpha=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> color=<span class="string">"rgba("</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">                color+=<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">256</span>)+<span class="string">","</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            color+=alpha+<span class="string">")"</span>;</span><br><span class="line">            <span class="keyword">return</span> color;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(randomColor(<span class="literal">true</span>));</span><br></pre></td></tr></table></figure><p><strong>将数字转换为汉字</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getCNNumber</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(n&lt;<span class="number">0</span> || n&gt;<span class="number">1000</span>) <span class="keyword">return</span> <span class="string">"错误的消息"</span>;</span><br><span class="line">            <span class="keyword">if</span>(n&lt;<span class="number">10</span>) <span class="keyword">return</span> arr[n];</span><br><span class="line">            <span class="keyword">if</span>(n===<span class="number">10</span>) <span class="keyword">return</span> <span class="string">"十"</span>;</span><br><span class="line">            <span class="keyword">if</span>(n&lt;<span class="number">20</span>) <span class="keyword">return</span> <span class="string">"十"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">1</span>]];</span><br><span class="line">            <span class="keyword">if</span>(n&gt;=<span class="number">100</span> &amp;&amp; n%<span class="number">100</span>===<span class="number">0</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"百"</span>;</span><br><span class="line">            <span class="keyword">if</span>(n&gt;<span class="number">100</span> &amp;&amp; n%<span class="number">10</span>===<span class="number">0</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"百"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">1</span>]]+<span class="string">"十"</span>;</span><br><span class="line">            <span class="keyword">if</span>(n%<span class="number">10</span>===<span class="number">0</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"十"</span>;</span><br><span class="line">            <span class="keyword">if</span>(n&lt;<span class="number">100</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"十"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">1</span>]];</span><br><span class="line">            <span class="keyword">if</span>(n%<span class="number">100</span>&lt;<span class="number">10</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"百零"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">2</span>]];</span><br><span class="line">            <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"百"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">1</span>]]+<span class="string">"十"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">2</span>]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(getCNNumber(<span class="number">345</span>));</span><br></pre></td></tr></table></figure><p><strong>返回对象可以返回多个值</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">w,h</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// var perimeter=(w+h)*2;</span></span><br><span class="line">            <span class="comment">// var area=w*h;</span></span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                perimeter:(w+h)*<span class="number">2</span>,</span><br><span class="line">                area:w*h</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="回调函数"><a class="markdownIt-Anchor" href="#回调函数"></a> 回调函数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">callBack</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        setInterval(callBack,<span class="number">1000</span>);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">            f();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"aaa"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        fn1(fn2);</span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"a"</span>);</span><br><span class="line">            f(fn1);</span><br><span class="line">            <span class="built_in">console</span>.log(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"b"</span>);</span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">6000</span>) f(fn2);</span><br><span class="line">        &#125;</span><br><span class="line">        fn1(fn2);</span><br><span class="line">        <span class="comment">// 堆栈溢出 递归或者回调的次数过多，没有阻止递归或者回调的条件</span></span><br></pre></td></tr></table></figure><p><strong>通过回调函数实现红绿灯功能</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getLight</span>(<span class="params">first,second,third</span>)</span>&#123;</span><br><span class="line">            first(second,third);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getRedLight</span>(<span class="params">fn,fn1</span>)</span>&#123;</span><br><span class="line">           <span class="keyword">var</span> f=<span class="built_in">arguments</span>.callee;</span><br><span class="line">            <span class="keyword">var</span> ids=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"红灯"</span>);</span><br><span class="line">                clearTimeout(ids);</span><br><span class="line">                fn(fn1,f);</span><br><span class="line">            &#125;,<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getYellowLight</span>(<span class="params">fn,fn1</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> f=<span class="built_in">arguments</span>.callee;</span><br><span class="line">            <span class="keyword">var</span> ids=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"黄灯"</span>);</span><br><span class="line">                clearTimeout(ids);</span><br><span class="line">                fn(fn1,f);</span><br><span class="line">            &#125;,<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getGreenLight</span>(<span class="params">fn,fn1</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> f=<span class="built_in">arguments</span>.callee;</span><br><span class="line">            <span class="keyword">var</span> ids=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"绿灯"</span>);</span><br><span class="line">                clearTimeout(ids);</span><br><span class="line">                fn(fn1,f);</span><br><span class="line">            &#125;,<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// getRedLight(getYellowLight,getGreenLight);</span></span><br><span class="line">        getLight(getGreenLight,getYellowLight,getRedLight)\</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;函数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#函数&quot;&gt;&lt;/a&gt; 函数&lt;/h1&gt;
&lt;h3 id=&quot;函数的创建&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#函数的创建&quot;&gt;&lt;/a&gt; 函数的创建&lt;/h3&gt;
&lt;
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="函数" scheme="https://cooli-willson.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>3.js基础-循环和对象</title>
    <link href="https://cooli-willson.github.io/2020/01/22/3.js%E5%9F%BA%E7%A1%80-%E5%BE%AA%E7%8E%AF%E5%92%8C%E5%AF%B9%E8%B1%A1/"/>
    <id>https://cooli-willson.github.io/2020/01/22/3.js%E5%9F%BA%E7%A1%80-%E5%BE%AA%E7%8E%AF%E5%92%8C%E5%AF%B9%E8%B1%A1/</id>
    <published>2020-01-22T07:51:40.150Z</published>
    <updated>2020-01-22T14:23:07.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="js基础-循环和对象"><a class="markdownIt-Anchor" href="#js基础-循环和对象"></a> js基础-循环和对象</h1><h3 id="三目运算符"><a class="markdownIt-Anchor" href="#三目运算符"></a> 三目运算符</h3><p><strong>条件 ？ 条件是true返回的结果  ：  条件是false时返回的结果</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> max=<span class="number">3</span>&gt;<span class="number">4</span> ? <span class="number">3</span> : <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> s=--i ? i++ : ++i;</span><br><span class="line">        <span class="built_in">console</span>.log(s);</span><br><span class="line">        <span class="keyword">var</span>  a=<span class="number">6</span>,</span><br><span class="line">            b=<span class="number">5</span>,</span><br><span class="line">            c=<span class="number">5</span>;</span><br><span class="line">        <span class="keyword">var</span> max=a&gt;b ? (a&gt;c ? a : (c&gt;b ? c : b)) : b&gt;c ? b : (c&gt;a ? c : a);</span><br><span class="line">        <span class="built_in">console</span>.log(max);</span><br><span class="line">        <span class="keyword">var</span> s=<span class="number">3</span>&gt;<span class="number">5</span> ? <span class="literal">false</span> : <span class="literal">true</span>;<span class="comment">//返回布尔值的三元运算时，不用些三元方式</span></span><br><span class="line">        <span class="keyword">var</span> s=<span class="number">3</span>&gt;<span class="number">5</span>;</span><br><span class="line">        <span class="keyword">var</span> obj= s ? s : <span class="number">5</span>;<span class="comment">//判断一个值是否存在，如果不存在重新赋值，或</span></span><br><span class="line">        <span class="keyword">var</span> obj=s || <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">var</span> s= s===<span class="number">0</span> ? <span class="number">0</span> : <span class="number">5</span>;<span class="comment">//判断是否是0 如果不是0，就返回另一个值，</span></span><br><span class="line">        <span class="keyword">var</span> s= s &amp;&amp; <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="条件语句"><a class="markdownIt-Anchor" href="#条件语句"></a> 条件语句</h3><p><strong>if语句</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="keyword">var</span> s=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">if</span>(s&gt;<span class="number">5</span>)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s&lt;<span class="number">10</span>)&#123;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s===<span class="number">0</span>)&#123;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// if(隐式转换为布尔值)&#123;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// 条件中的结果不是 "",false,0,NaN,undefined,null就可以进入条件</span></span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> s = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(++i)&#123;</span><br><span class="line">            s=i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i+<span class="number">1</span>!==<span class="number">0</span>)&#123;</span><br><span class="line">            s=i+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s=++i);</span><br><span class="line">        <span class="built_in">console</span>.log(s,i);</span><br><span class="line">        <span class="keyword">if</span>(i+<span class="number">1</span>!==<span class="number">0</span>) s=i+<span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 如果条件语句块只有一句话的时候，可以省略｛｝</span></span><br><span class="line">        <span class="keyword">if</span>(i===<span class="number">0</span>) i=i+<span class="number">2</span>;</span><br><span class="line">        i=i+<span class="number">3</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">0</span>) i=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i===<span class="number">0</span>) i=<span class="number">5</span>;</span><br><span class="line">        <span class="keyword">else</span> i=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>()&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 不管是否满足上面的条件，都需要判断下面的这个条件</span></span><br><span class="line">        <span class="keyword">if</span>()&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>()&#123;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>()&#123;</span><br><span class="line">        <span class="comment">// 如果上面的条件满足，就不会判断下面这个条件</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 配合函数中的return将会很少使用到if else if</span></span><br></pre></td></tr></table></figure><p><strong>switch case 语句</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断switch中表达式是否（绝对===）等于case中的值</span></span><br><span class="line">           <span class="keyword">var</span> s=<span class="number">10</span>;</span><br><span class="line">           <span class="keyword">switch</span>(s%<span class="number">10</span>)&#123;</span><br><span class="line">               <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">               <span class="comment">// 语句1</span></span><br><span class="line">               <span class="keyword">break</span>;<span class="comment">//break作用是跳出switch语句块，从break后面的语句块将不再执行</span></span><br><span class="line">                   <span class="comment">// 但是如果没有break,仍然在不判断结果的情况下执行一个case的语句块，这叫穿越</span></span><br><span class="line">               <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                 <span class="comment">// 语句2</span></span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">               <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                 <span class="comment">// 语句3</span></span><br><span class="line">               <span class="keyword">break</span>; </span><br><span class="line">               <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                 <span class="comment">// 语句4</span></span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">        <span class="comment">// switch 或者穿越</span></span><br><span class="line">         <span class="keyword">var</span> s=<span class="number">10</span>;</span><br><span class="line">         <span class="keyword">switch</span>(s%<span class="number">10</span>)&#123;</span><br><span class="line">             <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">             <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">             <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">             <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">             <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">             s++;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line">          <span class="keyword">var</span> s=<span class="number">10</span>;<span class="comment">//累积穿越</span></span><br><span class="line">          <span class="keyword">switch</span>(s%<span class="number">10</span>)&#123;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">              s=<span class="number">100</span>;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">              <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">              <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">              <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">              s--;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">         <span class="keyword">var</span> s=<span class="number">95</span>;</span><br><span class="line">         <span class="keyword">switch</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">             <span class="keyword">case</span> s&gt;<span class="number">90</span>:</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">             <span class="keyword">case</span> s&gt;<span class="number">80</span>:</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">             <span class="keyword">case</span> s&gt;<span class="number">70</span>:</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><p><strong>状态机</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">          <span class="keyword">var</span> value=prompt(<span class="string">"请输入你的成绩"</span>);</span><br><span class="line">        <span class="comment">//   console.log(value);</span></span><br><span class="line">        <span class="comment">//   document.write('你好');</span></span><br><span class="line">        <span class="keyword">var</span> value=<span class="built_in">parseInt</span>(prompt(<span class="string">"请输入你的成绩"</span>));</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">isNaN</span>(value))&#123;</span><br><span class="line">            <span class="keyword">if</span>(value&gt;<span class="number">100</span>) <span class="built_in">document</span>.write(<span class="string">"输入错误"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(value&gt;=<span class="number">90</span>) <span class="built_in">document</span>.write(<span class="string">"A"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(value&gt;=<span class="number">80</span>) <span class="built_in">document</span>.write(<span class="string">"B"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(value&gt;=<span class="number">70</span>) <span class="built_in">document</span>.write(<span class="string">"C"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(value&gt;=<span class="number">60</span>) <span class="built_in">document</span>.write(<span class="string">"D"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(value&gt;=<span class="number">0</span>) <span class="built_in">document</span>.write(<span class="string">"E"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">document</span>.write(<span class="string">"输入错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> value = <span class="built_in">parseInt</span>(prompt(<span class="string">"请输入你的成绩"</span>));</span><br><span class="line">        <span class="keyword">if</span> (value === <span class="number">100</span>) <span class="built_in">document</span>.write(<span class="string">"A"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (value &gt;= <span class="number">0</span> &amp;&amp; value &lt; <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (<span class="built_in">parseInt</span>(value / <span class="number">10</span>)) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                    <span class="built_in">document</span>.write(<span class="string">"A"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                    <span class="built_in">document</span>.write(<span class="string">"B"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                    <span class="built_in">document</span>.write(<span class="string">"C"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    <span class="built_in">document</span>.write(<span class="string">"D"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="built_in">document</span>.write(<span class="string">"E"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"输出错误"</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="循环语句"><a class="markdownIt-Anchor" href="#循环语句"></a> 循环语句</h3><p><strong>for 循环</strong></p><blockquote><p>循环的目的是为了重复执行｛｝内的语句</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"a"</span>);</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>循环的必须条件</p></blockquote><ul><li>必须由起始值。</li><li>必须有一个循环条件</li><li>须有一个不断向条件外处理的语句</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> str=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        str+=<span class="string">"&lt;ul&gt;"</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            str+=<span class="string">"&lt;li&gt;项目"</span>+i+<span class="string">"&lt;/li&gt;"</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        str+=<span class="string">"&lt;/ul&gt;"</span>;</span><br><span class="line">        <span class="built_in">document</span>.write(str);</span><br></pre></td></tr></table></figure><blockquote><p>循环是同步的，如果循环较长就会卡顿</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">console</span>.log(<span class="string">"a"</span>);</span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> s=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">100000000000</span>)&#123;</span><br><span class="line">            s+=i;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"b"</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(s);</span><br></pre></td></tr></table></figure><blockquote><p>深度循环</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">             value:<span class="number">1</span>,<span class="attr">next</span>:&#123;</span><br><span class="line">                 value:<span class="number">2</span>,<span class="attr">next</span>:&#123;</span><br><span class="line">                     value:<span class="number">3</span>,<span class="attr">next</span>:&#123;</span><br><span class="line">                         value:<span class="number">4</span>,<span class="attr">next</span>:&#123;</span><br><span class="line">                             value:<span class="number">5</span>,<span class="attr">next</span>:&#123;</span><br><span class="line">                                 value:<span class="number">6</span>,<span class="attr">next</span>:&#123;</span><br><span class="line">                                     value:<span class="number">7</span></span><br><span class="line">                                 &#125;</span><br><span class="line">                             &#125;</span><br><span class="line">                         &#125;</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="built_in">console</span>.log(obj.value);</span><br><span class="line">         <span class="keyword">while</span>(obj=obj.next)&#123;</span><br><span class="line">             <span class="built_in">console</span>.log(obj.value);</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><blockquote><p>轮盘赌算法(循环中的break)</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> num=<span class="number">0</span>;</span><br><span class="line">          <span class="comment">// 跳出，在循环中如果需要跳出循环（不再继续循环了） break</span></span><br><span class="line">          <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">              num++;</span><br><span class="line">              <span class="keyword">if</span>(<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">10</span>)===<span class="number">5</span>) <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="built_in">console</span>.log(num);</span><br></pre></td></tr></table></figure><blockquote><p>循环中的continue</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span>  str=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> num=<span class="number">47</span>;</span><br><span class="line">        <span class="keyword">while</span>(num&lt;<span class="number">122</span>)&#123;</span><br><span class="line">            num++;</span><br><span class="line">            <span class="keyword">if</span>(num&gt;<span class="number">57</span> &amp;&amp; num&lt;<span class="number">65</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(num&gt;<span class="number">90</span> &amp;&amp; num&lt;<span class="number">97</span>) <span class="keyword">continue</span>;</span><br><span class="line">            str+=<span class="built_in">String</span>.fromCharCode(num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.write(str);</span><br></pre></td></tr></table></figure><blockquote><p>双重循环语句</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 设置锚点位置</span></span><br><span class="line">       AB: <span class="keyword">while</span> (j &lt; <span class="number">10</span>) &#123;</span><br><span class="line">            str += <span class="string">"&lt;ul&gt;"</span>;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (i &lt; <span class="number">10</span>) &#123;</span><br><span class="line">                str += <span class="string">"&lt;li&gt;项目"</span> + i + <span class="string">"&lt;/li&gt;"</span>;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="comment">// 跳出到锚点位置</span></span><br><span class="line">                <span class="keyword">if</span>(i===<span class="number">4</span> &amp;&amp; j===<span class="number">4</span>) <span class="keyword">break</span> AB;</span><br><span class="line">            &#125;</span><br><span class="line">            str += <span class="string">"&lt;/ul&gt;"</span>;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.write(str);</span><br><span class="line">        </span><br><span class="line"> <span class="keyword">var</span> table=<span class="string">"&lt;table&gt;"</span>;</span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">1</span>,j=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            table+=<span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line">                j=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>(j&lt;<span class="number">10</span>)&#123;</span><br><span class="line">                    table+=<span class="string">"&lt;td&gt;"</span>+i+<span class="string">"*"</span>+j+<span class="string">"="</span>+i*j+<span class="string">"&lt;/td&gt;"</span>;</span><br><span class="line">                    <span class="keyword">if</span>(j&gt;=i) <span class="keyword">break</span>;<span class="comment">//跳出</span></span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">            table+=<span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        table+=<span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line">        <span class="built_in">document</span>.write(table);</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">var</span> y=<span class="number">2</span>,w=<span class="number">0</span>,bool;</span><br><span class="line">        <span class="keyword">while</span>(y&lt;<span class="number">100</span>)&#123;</span><br><span class="line">            <span class="comment">// 用i除以1-自身之间的数值，如果没有余数，就不是素数（质数）</span></span><br><span class="line">            bool=<span class="literal">false</span>;</span><br><span class="line">            w=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span>(w&lt;y)&#123;</span><br><span class="line">                <span class="keyword">if</span>(y%w===<span class="number">0</span>)&#123;</span><br><span class="line">                    bool=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                w++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!bool)&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(y);</span><br><span class="line">            &#125;</span><br><span class="line">            y++;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="循环的应用"><a class="markdownIt-Anchor" href="#循环的应用"></a> 循环的应用</h3><p><strong>打印等腰三角形</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>,j=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            k=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(k&lt;<span class="number">10</span>-i)&#123;</span><br><span class="line">                <span class="built_in">document</span>.write(<span class="string">"&amp;ensp;"</span>);</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">            j=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(j&lt;(i+<span class="number">1</span>)*<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">document</span>.write(<span class="string">"*"</span>);</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>do while 循环</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;<span class="keyword">while</span>(i&lt;<span class="number">10</span>);</span><br><span class="line">        <span class="comment">// do while 是先执行语句块，再判断是否继续循环</span></span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"a"</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;<span class="keyword">while</span>(i&gt;<span class="number">0</span> &amp;&amp; i&lt;<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">while</span>(i&gt;<span class="number">0</span> &amp;&amp; i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> n;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            n=<span class="built_in">Math</span>.random();</span><br><span class="line">            <span class="built_in">console</span>.log(n);</span><br><span class="line">        &#125;<span class="keyword">while</span>(n&lt;<span class="number">0.5</span>);</span><br></pre></td></tr></table></figure><p><strong>for 循环</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for(初始变量;循环条件;向条件外变化的表达式)&#123;</span></span><br><span class="line"><span class="comment">// 循环</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>while循环 do whie循环 for循环的区别</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sum=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;=<span class="number">100</span>;i++) sum+=i;</span><br><span class="line">       <span class="built_in">console</span>.log(sum);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 每次开始循环时，sum都会重置为0</span></span><br><span class="line">       <span class="comment">// 定义变量，每次循环的开始先执行,执行一次</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>,sum=<span class="number">0</span>,s=++i;i&lt;=<span class="number">100</span>;i++) sum+=i;</span><br><span class="line">       <span class="built_in">console</span>.log(sum,s);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="comment">// 条件语句，计算完成后必须转换为布尔值，是true才进入语句块</span></span><br><span class="line">       <span class="comment">// 条件语句先判断，条件语句每次都会执行判断</span></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>,sum=<span class="number">0</span>;i++<span class="xml"><span class="tag">&lt;<span class="name">100;)</span> <span class="attr">sum</span>+=<span class="string">i;</span></span></span></span><br><span class="line"><span class="xml">       console.log(sum);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">       // 变化是所有语句块运行完成后执行</span></span><br><span class="line"><span class="xml">       // 如果使用while或者do while中continue，i++就需要写在continue的上面</span></span><br><span class="line">       for(var i=0,sum=0;i&lt;100;i++)&#123;</span><br><span class="line">           sum+=i;</span><br><span class="line">           if(i===20) continue;</span><br><span class="line">           console.log("aa");</span><br><span class="line">       &#125;</span><br><span class="line">       console.log(sum);</span><br><span class="line">       for(var i=0,sum=0;i&lt;=100;sum+=i++);</span><br><span class="line">       console.log(sum);</span><br></pre></td></tr></table></figure><h3 id="对象的遍历"><a class="markdownIt-Anchor" href="#对象的遍历"></a> 对象的遍历</h3><p><strong>浅复制</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//对象的属性</span></span><br><span class="line">    <span class="keyword">var</span> a=<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">var</span> obj=&#123;</span><br><span class="line">        <span class="comment">// 创建对象时，如果key是一个变量，就需要写在[]</span></span><br><span class="line">        [a]:<span class="number">10</span>,</span><br><span class="line">        <span class="comment">// 这个a是一个字符Key</span></span><br><span class="line">        a:<span class="number">20</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 直接描述对象下有一个a的属性，值是1</span></span><br><span class="line">    obj.a=<span class="number">1</span>;</span><br><span class="line">    obj[<span class="string">"a"</span>]=<span class="number">1</span>;<span class="comment">//对象[字符key]=value;</span></span><br><span class="line">    <span class="comment">// key就是属性名称，必须是字符串（ES5）</span></span><br><span class="line">    <span class="keyword">var</span> a=<span class="string">"a"</span>;</span><br><span class="line">    obj[a]=<span class="number">1</span>;<span class="comment">//中括号的方式是可以带入变量作为key的，点方法是不能使用变量</span></span><br><span class="line">    <span class="keyword">var</span> s=<span class="number">4</span>;</span><br><span class="line">    obj[s]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> b=<span class="literal">true</span>;</span><br><span class="line">    obj[b]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> o=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">    obj[o]=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">var</span> o1=&#123;<span class="attr">a</span>:<span class="number">2</span>&#125;;</span><br><span class="line">    <span class="built_in">console</span>.log(obj[<span class="string">"3"</span>]);</span><br><span class="line">        </span><br><span class="line">    <span class="built_in">console</span>.log(obj.a);</span><br><span class="line">    <span class="built_in">console</span>.log(obj[<span class="string">"a"</span>]);</span><br><span class="line">    <span class="built_in">console</span>.log(obj[<span class="string">"a"</span>][<span class="string">"b"</span>]);</span><br><span class="line">    <span class="keyword">var</span> obj=&#123;</span><br><span class="line">        a:<span class="number">1</span>,</span><br><span class="line">        b:<span class="number">2</span>,</span><br><span class="line">        c:<span class="number">3</span>,</span><br><span class="line">        d:&#123;</span><br><span class="line">            a:<span class="number">1</span>,<span class="attr">b</span>:<span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        <span class="comment">// prop 就是obj下的所有属性名 key</span></span><br><span class="line">        <span class="comment">// 每循环一次就将属性名付给prop变量</span></span><br><span class="line">        <span class="built_in">console</span>.log(prop,obj[prop]);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">// 浅复制</span></span><br><span class="line">    <span class="keyword">var</span> obj1=&#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        obj1[prop]=obj[prop];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 复制后切段引用关系，所以源对象属性值改变，新对象不变</span></span><br><span class="line">    obj.d.a=<span class="number">10</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(obj1);</span><br><span class="line">        <span class="comment">// 删除某个属性</span></span><br><span class="line">    <span class="keyword">delete</span> obj.d;</span><br><span class="line">    <span class="built_in">console</span>.log(obj);</span><br></pre></td></tr></table></figure><h3 id="作业"><a class="markdownIt-Anchor" href="#作业"></a> 作业</h3><p><strong>表格的创建</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> table=<span class="string">"&lt;table&gt;"</span>;        <span class="comment">//table</span></span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>,</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; <span class="number">10</span>) &#123;                     </span><br><span class="line">            table += <span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &lt; <span class="number">10</span>) &#123;</span><br><span class="line">                table += <span class="string">"&lt;td&gt;"</span> + <span class="string">"&lt;/td&gt;"</span>;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            table += <span class="string">"&lt;/tr&gt;"</span></span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        table+= <span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line">        <span class="built_in">document</span>.write(table);</span><br></pre></td></tr></table></figure><p><strong>垃圾的三角形</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">var</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">           <span class="keyword">while</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">               i++;</span><br><span class="line">               </span><br><span class="line">               <span class="keyword">var</span> k=<span class="number">0</span>;</span><br><span class="line">               <span class="keyword">while</span>(k&lt;(<span class="number">10</span>-i))&#123;</span><br><span class="line">                   k++;</span><br><span class="line">                   <span class="built_in">document</span>.write(<span class="string">"&amp;nbsp;"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">               j=<span class="number">1</span>;</span><br><span class="line">               <span class="keyword">while</span>(j&lt;=i)&#123;</span><br><span class="line">                   j++;</span><br><span class="line">                   <span class="built_in">document</span>.write(<span class="string">"*"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="built_in">document</span>.write(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p><strong>垃圾的菱形</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//正三角</span></span><br><span class="line">         <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">         j = <span class="number">0</span>;</span><br><span class="line">         <span class="keyword">while</span> (i &lt; <span class="number">6</span>) &#123;</span><br><span class="line">             i++;</span><br><span class="line">             k = i;</span><br><span class="line">             <span class="keyword">while</span> (k &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">                 <span class="built_in">document</span>.write(<span class="string">"&amp;nbsp;"</span>);</span><br><span class="line">                 k++;</span><br><span class="line">             &#125;</span><br><span class="line">             j = <span class="number">1</span>;</span><br><span class="line">             <span class="keyword">while</span> (j &lt;= i) &#123;</span><br><span class="line">                 <span class="built_in">document</span>.write(<span class="string">"*"</span>);</span><br><span class="line">                 j++;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="built_in">document</span>.write(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//倒三角</span></span><br><span class="line">         <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">         j = <span class="number">0</span>;</span><br><span class="line">         <span class="keyword">while</span> (i &lt; <span class="number">6</span>) &#123;</span><br><span class="line">             i++;</span><br><span class="line">             <span class="keyword">var</span> k = <span class="number">0</span>;</span><br><span class="line">             <span class="keyword">while</span> (k &lt; i) &#123;</span><br><span class="line">                 <span class="built_in">document</span>.write(<span class="string">"&amp;nbsp;"</span>);</span><br><span class="line">                 k++</span><br><span class="line">             &#125;</span><br><span class="line">             j = i;</span><br><span class="line">             <span class="keyword">while</span> (j &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">                 <span class="built_in">document</span>.write(<span class="string">"*"</span>);</span><br><span class="line">                 j++;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="built_in">document</span>.write(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><p><strong>水仙花数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> hundred,</span><br><span class="line">             ten,</span><br><span class="line">             unit,</span><br><span class="line">             n;</span><br><span class="line">         <span class="keyword">for</span> (n = <span class="number">100</span>; n &lt; <span class="number">1000</span>; n++) &#123;</span><br><span class="line">             hundred = <span class="built_in">parseInt</span>(n / <span class="number">100</span>);</span><br><span class="line">             ten = <span class="built_in">parseInt</span>((n - (hundred * <span class="number">100</span>)) / <span class="number">10</span>);</span><br><span class="line">             unit = <span class="built_in">parseInt</span>(n % <span class="number">10</span>);</span><br><span class="line">             <span class="keyword">if</span> (n == ((hundred * hundred * hundred) + (ten * ten * ten) + (unit * unit * unit))) &#123;</span><br><span class="line">                 <span class="built_in">document</span>.write(<span class="string">"100-1000以内的水仙花数为"</span> + n + <span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><p><strong>弹窗计算机器</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">         <span class="keyword">var</span> num1,operator,num2,result;</span><br><span class="line">             num1=<span class="built_in">parseInt</span>(prompt(<span class="string">"第1个数"</span>));</span><br><span class="line">             num2=<span class="built_in">parseInt</span>(prompt(<span class="string">"第2个数"</span>));</span><br><span class="line">             operator=prompt(<span class="string">"运算符"</span>);</span><br><span class="line">             <span class="keyword">if</span>(!<span class="built_in">isNaN</span>(num1)&amp;&amp;!<span class="built_in">isNaN</span>(num2))&#123;</span><br><span class="line">                 <span class="keyword">switch</span>(operator)&#123;</span><br><span class="line">                     <span class="keyword">case</span> <span class="string">"+"</span>:</span><br><span class="line">                         result=num1+num2;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                     <span class="keyword">case</span> <span class="string">"-"</span>:</span><br><span class="line">                         result=num1-num2;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                     <span class="keyword">case</span> <span class="string">"*"</span>:</span><br><span class="line">                         result=num1*num2;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                     <span class="keyword">case</span> <span class="string">"/"</span>:</span><br><span class="line">                         result=num1/num2;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">                 alert(result);</span><br><span class="line">             &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 alert(<span class="string">"请输入正确数值"</span>);</span><br><span class="line">             &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>阶乘</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="built_in">parseInt</span>(prompt(<span class="string">"请输入一个数值"</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=num<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">            num*=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.write(num); </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> result = num;</span><br><span class="line">        <span class="keyword">while</span> (num &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            num--;</span><br><span class="line">            result *= num;</span><br><span class="line">        &#125; </span><br><span class="line">        </span><br><span class="line">        <span class="built_in">document</span>.write(result);</span><br></pre></td></tr></table></figure><p><strong>判断质数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i, j;</span><br><span class="line">         <span class="keyword">for</span> (i = <span class="number">100</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">             <span class="keyword">var</span> flag = <span class="number">0</span>;</span><br><span class="line">             <span class="keyword">for</span> (j =<span class="number">2</span>; j &lt; i; j++) &#123;</span><br><span class="line">                 <span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">                     flag++;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">if</span> (flag==<span class="number">0</span>) &#123;</span><br><span class="line">                 <span class="built_in">document</span>.write(i + <span class="string">"&lt;br&gt;"</span>)</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         </span><br><span class="line">         </span><br><span class="line"><span class="keyword">var</span> i = <span class="number">100</span>,</span><br><span class="line">            j;</span><br><span class="line">        <span class="keyword">var</span> count;</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= <span class="number">1000</span>) &#123;</span><br><span class="line">            count = <span class="number">0</span>;</span><br><span class="line">            i++;</span><br><span class="line">            j = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &lt; i) &#123;</span><br><span class="line">                j++;</span><br><span class="line">                <span class="keyword">if</span> (i % j == <span class="number">0</span>) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (count &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="built_in">document</span>.write(i + <span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>百钱买白鸡</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> x = <span class="number">1</span>; x &lt; <span class="number">100</span>; x++) &#123;</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">let</span> y = <span class="number">1</span>; y &lt; <span class="number">100</span>; y++) &#123;</span><br><span class="line">                 <span class="keyword">for</span> (<span class="keyword">let</span> z = <span class="number">1</span>; z &lt; <span class="number">100</span>; z++) &#123;</span><br><span class="line">                     <span class="keyword">if</span> ((x + y + z === <span class="number">100</span>) &amp;&amp; (<span class="number">5</span> * x + <span class="number">3</span> * y + z / <span class="number">3</span> === <span class="number">100</span>)) &#123;</span><br><span class="line">                         <span class="built_in">document</span>.write(<span class="string">'当前 公鸡'</span>+x+<span class="string">'只, 母鸡'</span>+y+<span class="string">'只, 小鸡 '</span>+z+<span class="string">'只'</span>+<span class="string">'&lt;br&gt;'</span>);</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;js基础-循环和对象&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#js基础-循环和对象&quot;&gt;&lt;/a&gt; js基础-循环和对象&lt;/h1&gt;
&lt;h3 id=&quot;三目运算符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="循环" scheme="https://cooli-willson.github.io/tags/%E5%BE%AA%E7%8E%AF/"/>
    
      <category term="对象" scheme="https://cooli-willson.github.io/tags/%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>2.javascript 运算符</title>
    <link href="https://cooli-willson.github.io/2020/01/20/2.js%E5%9F%BA%E7%A1%80-%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>https://cooli-willson.github.io/2020/01/20/2.js%E5%9F%BA%E7%A1%80-%E8%BF%90%E7%AE%97%E7%AC%A6/</id>
    <published>2020-01-20T14:42:27.505Z</published>
    <updated>2020-01-20T17:14:12.032Z</updated>
    
    <content type="html"><![CDATA[<h3 id="算术运算符"><a class="markdownIt-Anchor" href="#算术运算符"></a> 算术运算符</h3><p><strong>字符相加</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 隐式转换 多种数据类型不同时，进行运算需要将这些数据转换为相同类型才能运算，这个过程就是隐式转换</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="string">"a"</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="string">"b"</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">var</span> b;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">var</span> b=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="comment">// 遇到字符串相加时，另一种数据隐式转换为字符型.String()</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">// 遇到字符串相加时，另一种数据隐式转换为字符型.String()</span></span><br><span class="line">        <span class="built_in">console</span>.log(a+b);<span class="comment">//字符相加时，首尾相连</span></span><br><span class="line">        <span class="keyword">var</span> age=<span class="number">30</span>;</span><br><span class="line">        <span class="keyword">var</span> s=<span class="string">"今年我"</span>+age+<span class="string">"岁了"</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(s);</span><br><span class="line">        <span class="keyword">var</span> s=<span class="number">10</span>;</span><br><span class="line">        s=s+<span class="string">""</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(s);</span><br><span class="line">        <span class="comment">// 等号是赋值，因此先运算等号右边的结果，然后赋值给等号左边</span></span><br></pre></td></tr></table></figure><p><strong>布尔值相加</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 布尔值相加，不包含加字符</span></span><br><span class="line">        <span class="comment">// 布尔值转换为数值，除字符外所有内容都是隐式转换为数值运算 Number()</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">var</span> b;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">null</span>;</span><br><span class="line">        <span class="comment">// 任何数值加NaN都为NaN</span></span><br></pre></td></tr></table></figure><p><strong>对象相加</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// Object 对象相加时都会转换为字符串相加</span></span><br><span class="line">           <span class="keyword">var</span> a=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">var</span> b=&#123;<span class="attr">b</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(a+b);</span><br><span class="line">        <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];<span class="comment">//数组转换为字符串时是将数组的元素转换为字符串相连</span></span><br><span class="line">        <span class="keyword">var</span> a=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(arr+a);</span><br><span class="line">        <span class="built_in">console</span>.log([]+[]);</span><br></pre></td></tr></table></figure><p><strong>数值运算</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 减法 乘法 除法 取模都遵循转换为数值运算</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="string">"5"</span>;</span><br><span class="line">        <span class="keyword">var</span> b;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">var</span> b=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(a*b);</span><br></pre></td></tr></table></figure><h3 id="赋值运算符和一元运算符"><a class="markdownIt-Anchor" href="#赋值运算符和一元运算符"></a> 赋值运算符和一元运算符</h3><p><strong>赋值运算符</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 赋值运算符</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">3</span>;</span><br><span class="line">        a+=<span class="number">5</span>;<span class="comment">//a=a+5;</span></span><br><span class="line">        a+=<span class="string">""</span>;<span class="comment">//快速转换字符串</span></span><br><span class="line">        a*=<span class="number">3</span>;</span><br><span class="line">        a/=<span class="number">3</span>;</span><br><span class="line">        a%=<span class="number">2</span>;</span><br><span class="line">        a-=<span class="number">2</span>;</span><br><span class="line">        <span class="comment">// 赋值运算符也是有结果的</span></span><br><span class="line">        <span class="keyword">var</span> s=a+=<span class="number">2</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(s,a);</span><br><span class="line">        <span class="keyword">if</span>(a-=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"a"</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>一元运算符</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"3"</span>;</span><br><span class="line">a++;<span class="comment">//a=a+1 </span></span><br><span class="line">a+=<span class="number">1</span>;<span class="comment">//31</span></span><br><span class="line">a++;<span class="comment">//一元运算符强制将值转换为数值+1</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="number">3</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a+=<span class="number">1</span>);<span class="comment">// a=a+1   a-&gt;返回结果</span></span><br><span class="line"><span class="built_in">console</span>.log(a++);<span class="comment">// a-&gt;返回出来  a=a+1;</span></span><br><span class="line"><span class="built_in">console</span>.log(++a);<span class="comment">//a=a+1  a-&gt;返回结果</span></span><br><span class="line"><span class="comment">// a++和++a a的结果相同 返回结果不同</span></span><br><span class="line"><span class="keyword">var</span> y=a++;</span><br><span class="line"><span class="keyword">var</span> y=++a;</span><br><span class="line"><span class="keyword">var</span> x=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(--x)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> x=<span class="number">1</span>;</span><br><span class="line">    x=<span class="number">2</span><span class="number">-3</span><span class="number">-4</span><span class="number">-5</span></span><br><span class="line">      <span class="number">1</span>+<span class="number">2</span>+<span class="number">2</span>+<span class="number">3</span>+<span class="number">4</span></span><br><span class="line"><span class="keyword">var</span> y=x++ + x + x++ + x++ + x++;</span><br><span class="line"><span class="keyword">var</span> y=x + ++x + x++ +x++ + x++;</span><br><span class="line"><span class="built_in">console</span>.log(y,x);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"2"</span>&gt;<span class="string">"10"</span>);            <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span>==<span class="literal">null</span>); </span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span>&gt;<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><pre><code>### 关系运算符**关系运算符**&gt; 大小比较<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  &gt; &lt; &gt;= &lt;= == === != !==</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"aa"</span>;</span><br><span class="line"><span class="keyword">var</span> b=<span class="string">"ab"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(b&gt;a);<span class="comment">//判断字符串大小时先判断字符串首字符的ascii 或者 Unicode码值,如果相同判断后面字符的比较结果</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span>&gt;<span class="literal">false</span>);<span class="comment">//隐式转换为数值</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span>&gt;<span class="string">""</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"a"</span>&gt;<span class="number">1</span>);<span class="comment">//字符串与数值比较时，字符串转换为数值再比较</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span>&gt;<span class="literal">null</span>);</span><br></pre></td></tr></table></figure></code></pre><p><strong>辅助运算符和相等关系运算符</strong></p><blockquote><p>= 赋值<br>== 比较<br>=== 精确比较   比较值和类型</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"1"</span>==<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">""</span>==<span class="number">0</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0</span>==<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">""</span>==<span class="literal">false</span>);</span><br><span class="line"><span class="number">0</span>==<span class="string">""</span>== <span class="literal">false</span></span><br><span class="line"><span class="literal">undefined</span>==<span class="literal">null</span> </span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span>==<span class="literal">null</span>);<span class="comment">//判读空的结果是否相同</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span>==<span class="string">""</span>);<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span>==<span class="number">0</span>);<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span>==<span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line"><span class="comment">// NaN永远不和任何内容相等，包括NaN</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"a"</span>;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="literal">NaN</span>)&#123;</span><br><span class="line">    <span class="comment">// 判断a是否是NaN</span></span><br><span class="line">    <span class="comment">// isNaN()里面的内容会自动隐式转换为数值</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isNaN</span>(a))&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"非数值"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="comment">// undefined null</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="comment">// a是0 false ""</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">var</span> obj=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">var</span> obj1=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="built_in">console</span>.log(obj==obj1);</span><br><span class="line">    <span class="comment">// 引用地址不同</span></span><br><span class="line">    <span class="built_in">console</span>.log([]==[]);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"1"</span>==<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"1"</span>===<span class="number">1</span>);<span class="comment">//比较值和类型</span></span><br><span class="line">    <span class="comment">// != 不相等</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">0</span>!=<span class="literal">null</span>);</span><br><span class="line">    <span class="built_in">console</span>.log([]!=[]);</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a class="markdownIt-Anchor" href="#逻辑运算符"></a> 逻辑运算符</h3><blockquote><p><strong>逻辑与</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span> &amp;&amp; <span class="literal">true</span> =<span class="literal">true</span>;</span><br><span class="line"><span class="literal">true</span> &amp;&amp; <span class="literal">false</span> =<span class="literal">false</span>;</span><br><span class="line"><span class="literal">false</span> &amp;&amp; <span class="literal">true</span> =<span class="literal">false</span>;</span><br><span class="line"><span class="literal">false</span> &amp;&amp; <span class="literal">false</span> =<span class="literal">false</span>;</span><br></pre></td></tr></table></figure><blockquote><p><strong>逻辑或</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span> || <span class="literal">true</span> =<span class="literal">true</span>;</span><br><span class="line"><span class="literal">true</span> || <span class="literal">false</span> =<span class="literal">true</span>;</span><br><span class="line"><span class="literal">false</span> || <span class="literal">true</span> =<span class="literal">true</span>;</span><br><span class="line"><span class="literal">false</span> || <span class="literal">false</span> =<span class="literal">false</span>;</span><br></pre></td></tr></table></figure><blockquote><p><strong>逻辑运算符与一元运算符的应用</strong></p></blockquote><ul><li>&amp;&amp; 运算的两端，如果有一端转换为布尔值是false，就把这个值返回出去（值是什么就返回什么，不是返回false）</li><li>如果两端转换为布尔值都是true，就返回&amp;&amp;运算符右侧的值，先运行左侧再运行右侧</li><li>如果左侧运算的结果是false，直接返回左侧值，不运算右侧<br>+ 如果||的左侧的结果是ture，就直接返回左侧，不运算右侧，熔断</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> a=<span class="number">1</span>;</span><br><span class="line">a=a-- &amp;&amp; ++a;</span><br><span class="line">s=--a &amp;&amp; ++a;</span><br><span class="line">a=a++ &amp;&amp; --a;</span><br><span class="line"><span class="built_in">console</span>.log(s,a);</span><br><span class="line"><span class="comment">// &amp;&amp; 运算的两端，如果有一端转换为布尔值是false，就把这个值返回出去（值是什么就返回什么，不是返回false）</span></span><br><span class="line"><span class="comment">// 如果两端转换为布尔值都是true，就返回&amp;&amp;运算符右侧的值，先运行左侧再运行右侧</span></span><br><span class="line"><span class="comment">// 如果左侧运算的结果是false，直接返回左侧值，不运算右侧</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="number">1</span>;</span><br><span class="line">a=--a || a++;</span><br><span class="line">a=a-- || a++;</span><br><span class="line"><span class="comment">// 如果||的左侧的结果是ture，就直接返回左侧，不运算右侧，熔断</span></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><pre><code>&gt; 逻辑非+ !取反值，先将内容转换为布尔值，然后去反值+所有！运算符得到的结果都是布尔值<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// !取反值，先将内容转换为布尔值，然后去反值</span></span><br><span class="line"><span class="built_in">console</span>.log(!<span class="number">10</span>);<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(!<span class="string">""</span>);<span class="comment">//true</span></span><br><span class="line"><span class="comment">// 所有！运算符得到的结果都是布尔值</span></span><br><span class="line"><span class="built_in">console</span>.log(!obj1);</span><br><span class="line"><span class="built_in">console</span>.log(obj==!obj1);</span><br><span class="line"><span class="built_in">console</span>.log(![]==[]);<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log([]==[]);<span class="comment">//false</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="二进制和十六进制未详细整理"><a class="markdownIt-Anchor" href="#二进制和十六进制未详细整理"></a> 二进制和十六进制（未详细整理）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 数值转换二进制</span></span><br><span class="line">          <span class="number">0</span>,<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">10</span>,  <span class="number">11</span>,  <span class="number">12</span>,  <span class="number">13</span>,  <span class="number">14</span>,  <span class="number">15</span>,  <span class="number">16</span>,  <span class="number">17</span>,   <span class="number">20</span></span><br><span class="line">        <span class="number">0</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">100</span>,<span class="number">101</span>,<span class="number">110</span>,<span class="number">111</span>,<span class="number">1000</span>,<span class="number">1001</span>,<span class="number">1010</span>,<span class="number">1011</span>,<span class="number">1100</span>,<span class="number">1101</span>,<span class="number">1110</span>,<span class="number">1111</span>,<span class="number">10000</span></span><br><span class="line">        <span class="number">0</span>,<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,   <span class="number">8</span>,   <span class="number">9</span>,  <span class="number">10</span>,  <span class="number">11</span>,  <span class="number">12</span>,  <span class="number">13</span>,  <span class="number">14</span>,  <span class="number">15</span>,   <span class="number">16</span></span><br><span class="line">        <span class="number">0</span>,<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,   <span class="number">8</span>,   <span class="number">9</span>,   A,   B,   C,   D,   E,   F,   <span class="number">10</span></span><br><span class="line">        </span><br><span class="line">        <span class="number">56</span>=<span class="number">5</span>*<span class="number">8</span>(<span class="number">1</span>)+<span class="number">6</span>*<span class="number">8</span>(<span class="number">0</span>)=<span class="number">46</span></span><br><span class="line">        <span class="number">1010</span>=<span class="number">1</span>*<span class="number">2</span>(<span class="number">3</span>)+<span class="number">0</span>*<span class="number">2</span>(<span class="number">2</span>)+<span class="number">1</span>*<span class="number">2</span>(<span class="number">1</span>)+<span class="number">0</span>*<span class="number">2</span>(<span class="number">0</span>)=<span class="number">10</span>;</span><br><span class="line">        <span class="number">567</span>=<span class="number">5</span>*<span class="number">10</span>(<span class="number">2</span>)+<span class="number">6</span>*<span class="number">10</span>(<span class="number">1</span>)+<span class="number">7</span>*<span class="number">10</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//16进制</span></span><br><span class="line"></span><br><span class="line">        RGB</span><br><span class="line">        <span class="number">0xFFFFFF</span></span><br><span class="line">        <span class="number">0xFF0000</span></span><br><span class="line">        <span class="number">0x00FF00</span></span><br><span class="line">        <span class="number">0x0000FF</span></span><br><span class="line">        <span class="number">0x000000</span></span><br><span class="line">        <span class="number">0xFFFF00</span> 黄色</span><br><span class="line">        <span class="number">0xFF9900</span> 橙色</span><br><span class="line">        <span class="number">0xFF00FF</span>  紫色</span><br><span class="line">        <span class="number">0x00FFFF</span> 靛色</span><br><span class="line">        <span class="number">0xFFFFFFFF</span></span><br><span class="line">        <span class="number">180</span>*<span class="number">180</span></span><br><span class="line">        <span class="number">64</span> <span class="number">128</span> <span class="number">512</span></span><br><span class="line">        <span class="number">32400</span>*<span class="number">4</span>=<span class="number">129</span>,<span class="number">600</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="string">"abc"</span>&gt;<span class="string">"aad"</span>));</span><br></pre></td></tr></table></figure><h3 id="位运算未详细整理"><a class="markdownIt-Anchor" href="#位运算未详细整理"></a> 位运算（未详细整理）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">console</span>.log(~<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">var</span> str=<span class="string">"abcdef"</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(str.indexOf(<span class="string">"z"</span>));</span><br><span class="line">        <span class="keyword">if</span>(~str.indexOf(<span class="string">"z"</span>))&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"找到了z"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 位与运算  &amp;</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">5</span>&amp;<span class="number">6</span>);</span><br><span class="line">        <span class="number">101</span></span><br><span class="line">        <span class="number">110</span></span><br><span class="line">        <span class="number">100</span>=<span class="number">4</span>;</span><br><span class="line">            <span class="comment">// 1&amp;1=1</span></span><br><span class="line">            <span class="comment">// 1&amp;0=0</span></span><br><span class="line">            <span class="comment">// 0&amp;1=0</span></span><br><span class="line">            <span class="comment">// 0&amp;0=0</span></span><br><span class="line">       <span class="number">10101010</span> </span><br><span class="line">             <span class="number">10</span></span><br><span class="line">       <span class="number">10101000</span></span><br><span class="line">        <span class="comment">// 位或运算  |</span></span><br><span class="line">          </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">7</span>|<span class="number">6</span>);</span><br><span class="line">        <span class="number">111</span></span><br><span class="line">        <span class="number">110</span></span><br><span class="line">        <span class="number">111</span>=<span class="number">7</span></span><br><span class="line">            <span class="comment">// 1|1=1</span></span><br><span class="line">            <span class="comment">// 1|0=1</span></span><br><span class="line">            <span class="comment">// 0|1=1</span></span><br><span class="line">            <span class="comment">// 0|0=0</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">85</span>|<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 位异或运算 ^</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">7</span>^<span class="number">6</span>);</span><br><span class="line">        <span class="number">111</span></span><br><span class="line">        <span class="number">110</span></span><br><span class="line">        <span class="number">001</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 1^1=0</span></span><br><span class="line">        <span class="comment">// 1^0=1</span></span><br><span class="line">        <span class="comment">// 0^1=1</span></span><br><span class="line">        <span class="comment">// 0^0=0</span></span><br><span class="line">        <span class="keyword">var</span> pass=<span class="number">7856</span>;</span><br><span class="line">        <span class="keyword">var</span> key=<span class="number">2534</span>;</span><br><span class="line">        <span class="keyword">var</span> value=pass^key;</span><br><span class="line">        <span class="comment">// console.log(pass^key);</span></span><br><span class="line">        <span class="built_in">console</span>.log(value^key);</span><br><span class="line">        <span class="comment">// &lt;&lt;左移位   &gt;&gt;右移位</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">24</span>&gt;&gt;<span class="number">2</span>);</span><br><span class="line">        <span class="comment">// 11000&gt;&gt;2 ==&gt; 110;</span></span><br><span class="line">        <span class="comment">// 8&lt;&lt;2 100000==&gt;32;</span></span><br><span class="line">        <span class="comment">// 1&lt;&lt;n   求2的多少次幂</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">1</span>&lt;&lt;<span class="number">5</span>);</span><br><span class="line">       <span class="built_in">console</span>.log( (<span class="number">0x0000FF</span>&lt;&lt;<span class="number">16</span>).toString(<span class="number">16</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;算术运算符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#算术运算符&quot;&gt;&lt;/a&gt; 算术运算符&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;字符相加&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="运算符" scheme="https://cooli-willson.github.io/tags/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>1.javascript 基础-数据类型</title>
    <link href="https://cooli-willson.github.io/2020/01/20/1.javascript%20%E5%9F%BA%E7%A1%80-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://cooli-willson.github.io/2020/01/20/1.javascript%20%E5%9F%BA%E7%A1%80-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2020-01-20T13:51:37.020Z</published>
    <updated>2020-01-20T19:08:26.065Z</updated>
    
    <content type="html"><![CDATA[<h3 id="js-文件的引入"><a class="markdownIt-Anchor" href="#js-文件的引入"></a> js 文件的引入</h3><ul><li>引入外部js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"a.js"</span> <span class="keyword">async</span> defer&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script src=<span class="string">"b.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>ES6的模块化导入</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"module"</span>&gt;</span><br><span class="line">        <span class="comment">// ES6的模块化导入</span></span><br><span class="line">        <span class="keyword">import</span> Box <span class="keyword">from</span> <span class="string">"./js/Box.js"</span>;</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>行内js的写法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;button onclick=<span class="string">"alert('aaa')"</span>&gt;按钮&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;a href="javascript:alert('aaa')"&gt;超链接&lt;/</span>a&gt;</span><br><span class="line">&lt;a href=<span class="string">"javascript:void(0)"</span>&gt;超链接&lt;<span class="regexp">/a&gt;</span></span><br></pre></td></tr></table></figure><ul><li>js标签</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       a=<span class="number">10</span>;</span><br><span class="line">   &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">   &lt;script&gt;</span></span><br><span class="line"><span class="regexp">       alert(b);</span></span><br><span class="line"><span class="regexp">   &lt;/</span>script&gt;</span><br><span class="line">   &lt;script&gt;</span><br><span class="line">       b=<span class="number">20</span>;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>js注释</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a=3;//注释单行代码</span></span><br><span class="line">      <span class="comment">/*  a=3;</span></span><br><span class="line"><span class="comment">       b=4; */</span>  <span class="comment">//块状注释</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// 不需要的禁止执行，注释后代码不会被执行，在以后可以复用</span></span><br><span class="line">       <span class="comment">// 介绍说明代码作用</span></span><br></pre></td></tr></table></figure><ul><li>弹出框</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="string">"aaa"</span>);<span class="comment">//弹出框</span></span><br><span class="line">confirm(<span class="string">"你好"</span>);<span class="comment">//点击确定时返回true，否则返回false</span></span><br><span class="line">prompt(<span class="string">"请输入你的年龄"</span>,<span class="string">"18岁"</span>);<span class="comment">//输入弹出框，确定后会返回输入的内容</span></span><br></pre></td></tr></table></figure><ul><li>打印方式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"aaaa"</span>,<span class="string">"bbbb"</span>);<span class="comment">//打印日志</span></span><br><span class="line"><span class="built_in">console</span>.trace(<span class="string">"aaa"</span>);<span class="comment">//用于显示当前执行的代码在堆栈中的调用路径。</span></span><br><span class="line"><span class="built_in">console</span>.dir(<span class="string">"aaa"</span>);<span class="comment">//打印部分标签内容</span></span><br><span class="line"><span class="built_in">console</span>.error(<span class="string">"错误的"</span>);<span class="comment">//打印错误</span></span><br></pre></td></tr></table></figure><h3 id="变量-常量和基本数据类型"><a class="markdownIt-Anchor" href="#变量-常量和基本数据类型"></a> 变量 常量和基本数据类型</h3><p><strong>变量</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">4</span>;</span><br><span class="line">       b=<span class="number">6</span>;</span><br><span class="line">       <span class="comment">// 定义变量</span></span><br><span class="line">       <span class="keyword">var</span> a=<span class="number">4</span>;</span><br><span class="line">       <span class="keyword">var</span> b=<span class="number">5</span>;</span><br><span class="line">       <span class="comment">// 使用；结束一个代码语句，如果使用，表示没有结束该语句</span></span><br><span class="line">       <span class="keyword">var</span> a=<span class="number">4</span>,</span><br><span class="line">           b=<span class="number">5</span>;</span><br><span class="line">       <span class="keyword">var</span> a,b;</span><br><span class="line">       <span class="comment">// 先给a赋值，然后赋值给b</span></span><br><span class="line">       <span class="keyword">var</span> a=b=<span class="number">4</span>;</span><br></pre></td></tr></table></figure><p><strong>变量命名规则</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 变量名称规则</span></span><br><span class="line">        <span class="comment">// 变量要求小写字母开始，每个单词的首字母大写，叫做驼峰式命名</span></span><br><span class="line">        <span class="comment">//    var timeManager</span></span><br><span class="line">        <span class="comment">// 变量不能使用关键词和保留字</span></span><br><span class="line">        <span class="comment">// var for;  var int;</span></span><br><span class="line">        <span class="comment">// 变量尽量不要定义window的属性名，ES5中全局变量都会被设置在window的属性中</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">window</span>.a);</span><br><span class="line">        <span class="built_in">console</span>.log(a+<span class="number">5</span>);</span><br><span class="line">        <span class="built_in">window</span>.status</span><br><span class="line">        <span class="keyword">var</span> status=<span class="number">20</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(status+<span class="number">5</span>);  <span class="comment">//205</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 临时变量或者参数，起名时使用_开始</span></span><br><span class="line">        <span class="keyword">var</span> _time=<span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不能使用中文和拼音字母（我强制大家不能使用）</span></span><br><span class="line">        <span class="keyword">var</span> 姓名=<span class="string">"谢天"</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(姓名);</span><br><span class="line">        <span class="keyword">var</span> xingming=<span class="string">"谢天"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a=<span class="number">3</span>;</span><br><span class="line">        a=<span class="number">10</span>;<span class="comment">//值可以改变，就叫做变量  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  不希望值改变，常量ES6,常量不能修改</span></span><br><span class="line">        <span class="keyword">const</span> EVENT_ID=<span class="string">"eventid"</span>;</span><br><span class="line">        EVENT_ID=<span class="string">"abc"</span>;</span><br><span class="line">        <span class="comment">// 常量定义后的对象不能够被清除</span></span><br><span class="line">        <span class="keyword">const</span> obj=&#123;<span class="attr">a</span>:<span class="number">1</span>,<span class="attr">b</span>:<span class="number">2</span>&#125;;</span><br></pre></td></tr></table></figure><h4 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h4><blockquote><p>字符型，数值型，布尔型，undefined,null,object   ||E6 Symbol<br>五种基础类型，一种复杂类型</p></blockquote><p><strong>字符类型</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字符类型   String</span></span><br><span class="line"><span class="comment">// "" ''    ||ES6    ``</span></span><br><span class="line">        <span class="keyword">var</span> str1 = <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">var</span> str2 = <span class="string">'1'</span>;</span><br><span class="line">        <span class="keyword">var</span> str3 = <span class="string">`1`</span>;</span><br><span class="line">        <span class="keyword">var</span> str4 = <span class="string">"这个'新的'鞋子价格不错"</span>;</span><br><span class="line">        <span class="keyword">var</span> str5 = <span class="string">'&#123;"a":4,"b":"10"&#125;'</span>;</span><br></pre></td></tr></table></figure><p><strong>数值类型</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数值类型  Number</span></span><br><span class="line"> <span class="keyword">var</span> num1 = <span class="number">1</span>;<span class="comment">//正整型</span></span><br><span class="line"><span class="keyword">var</span> num2 = <span class="number">-1</span>;<span class="comment">//负整型</span></span><br><span class="line"><span class="keyword">var</span> num3 = <span class="number">1.3</span>;<span class="comment">//浮点型</span></span><br><span class="line"><span class="keyword">var</span> num4 = <span class="number">056</span>;<span class="comment">//8进制数值,0起头，数值不能大于7</span></span><br><span class="line"><span class="keyword">var</span> num5 = <span class="number">0xFF</span>;<span class="comment">//16进制数值，0x起头，单个数值不能大于F</span></span><br><span class="line"><span class="keyword">var</span> num6 = <span class="number">1.2e+3</span>;<span class="comment">//科学计数法</span></span><br><span class="line"><span class="keyword">var</span> num7 = <span class="number">1.2e-3</span>;<span class="comment">//科学计数法</span></span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure><p><strong>布尔类型</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 布尔类型   Boolean</span></span><br><span class="line">       <span class="keyword">var</span> bool1 = <span class="literal">true</span>;</span><br><span class="line">       <span class="keyword">var</span> bool2 = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p><strong>未定义型</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 未定义型 undefined  值和类型相同</span></span><br><span class="line">        <span class="keyword">var</span> und1;</span><br><span class="line">        <span class="keyword">var</span> und2 = <span class="literal">undefined</span>;</span><br></pre></td></tr></table></figure><p><strong>空值</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 空值   null   null的类型Object型</span></span><br><span class="line">        <span class="keyword">var</span> nu = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(nu,<span class="keyword">typeof</span>(nu));</span><br></pre></td></tr></table></figure><p><strong>对象类型</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">            <span class="comment">// 属性</span></span><br><span class="line">            id: <span class="number">1001</span>,</span><br><span class="line">            name: <span class="string">"电脑桌"</span>,</span><br><span class="line">            price: <span class="string">"700"</span>,</span><br><span class="line">            getSum: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 方法</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure><p><strong>数据类型的存储</strong></p><ul><li>前五种基础类型都存储在栈中，对象存储在堆中<br><strong>对象类型的特性</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">String</span>(obj));<span class="comment">//[object Object] 所有的对象转换为字符串就会变成这样</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(obj));<span class="comment">//将object对象转换为字符串（JSON字符串）</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(<span class="string">'&#123;"a":1&#125;'</span>));<span class="comment">//将JSON字符串转换为对象</span></span><br><span class="line">        <span class="keyword">var</span> obj1=<span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(obj));    </span><br><span class="line">        obj.a=<span class="number">5</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(obj,obj1)</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(obj),<span class="built_in">JSON</span>.stringify(obj1));</span><br><span class="line">        <span class="built_in">console</span>.log(obj1===obj);</span><br><span class="line">            <span class="comment">// 变量名存储的是引用地址</span></span><br><span class="line">            <span class="keyword">var</span> obj2=obj;<span class="comment">//将引用地址赋值给obj2</span></span><br><span class="line">            obj.a=<span class="number">10</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(obj2.a);</span><br><span class="line">            <span class="comment">// 存在栈中，修改的是值</span></span><br><span class="line">            <span class="keyword">var</span> num=<span class="number">3</span>;</span><br><span class="line">            <span class="keyword">var</span> num1=num;</span><br><span class="line">            num=<span class="number">10</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(num1);</span><br><span class="line">            <span class="comment">// 存在堆中，修改引用地址值的内容，地址不会发生改变</span></span><br><span class="line">            <span class="keyword">var</span> obj1=<span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">            <span class="keyword">var</span> obj=&#123;<span class="attr">a</span>:<span class="number">10</span>,<span class="attr">b</span>:&#123;<span class="attr">a</span>:<span class="number">20</span>&#125;&#125;;</span><br><span class="line">            <span class="built_in">console</span>.log(obj);</span><br><span class="line">            obj.a=<span class="number">10</span>;</span><br><span class="line">            <span class="comment">// 内存泄漏  不断的创建新对象，不使用的旧对象不清除</span></span><br><span class="line">            obj=<span class="literal">null</span>;<span class="comment">//当给变量设置为null</span></span><br><span class="line">            <span class="comment">// 垃圾回收机制  gc   当对象的引用地址在栈中没有引用时，内存占比过高时，垃圾回收车会将其清除</span></span><br></pre></td></tr></table></figure><h3 id="数据类型的转换"><a class="markdownIt-Anchor" href="#数据类型的转换"></a> 数据类型的转换</h3><p><strong>任何类型转换为数值型</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NaN 数值型 非数值</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"5"</span>;</span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"5a"</span>;<span class="comment">//字符串中如果有字符存在，转换后就变成NaN</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">""</span>;<span class="comment">//空字符串转换为数值是 0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">true</span>;<span class="comment">//1</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">false</span>;<span class="comment">//0</span></span><br><span class="line"><span class="keyword">var</span> a;<span class="comment">//undefined NaN 非数值</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">null</span>;<span class="comment">//0  null是0</span></span><br><span class="line"><span class="built_in">Number</span>(值);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>(a));</span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"52.1a"</span>;<span class="comment">//使用parseInt转字符串，从第一个数字字符开始到第一个字符类型为止转换为数值</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"a45"</span>;<span class="comment">//使用parseInt转字符串，从第一个数字字符开始到第一个字符类型为止转换为数值</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"4a5"</span>;<span class="comment">//使用parseInt转字符串，从第一个数字字符开始到第一个字符类型为止转换为数值</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"FF"</span>;</span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"101010010101"</span>;</span><br><span class="line">color=<span class="string">"#FF00FF"</span>--&gt;<span class="string">"rgb(255,0,255)"</span>;</span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">true</span>;<span class="comment">//NaN</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">false</span>;<span class="comment">//NaN</span></span><br><span class="line"><span class="keyword">var</span> a;<span class="comment">//NaN</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">null</span>;<span class="comment">//NaN</span></span><br><span class="line"><span class="keyword">var</span> a=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>(a));<span class="comment">//NaN</span></span><br><span class="line"><span class="comment">// parseInt(要转换的内容，该内容是什么进制) 将他转换为10进制数值</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(a,<span class="number">2</span>))<span class="comment">//转换为整型</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(a))<span class="comment">//字符串转换为整型</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseFloat</span>(a))<span class="comment">//字符串转换为浮点型</span></span><br></pre></td></tr></table></figure><p><strong>任何类型转换为字符串</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">1555</span>;</span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">0xFF</span>;</span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">4.1e+2</span>;</span><br><span class="line">        <span class="comment">// 先将所有的数值都转换为10进制在转换为字符串</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">var</span> a=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">var</span> a;<span class="comment">//undefined</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="literal">null</span>;<span class="comment">//null</span></span><br><span class="line">        <span class="keyword">var</span> a=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(a);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">String</span>(a));<span class="comment">//转换为字符串</span></span><br><span class="line">        <span class="comment">// a.toString(按照什么进制转换为字符串);</span></span><br><span class="line">        <span class="built_in">console</span>.log(a.toString(<span class="number">36</span>));<span class="comment">//2-36</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        <span class="built_in">console</span>.log(a.toLocaleString());<span class="comment">//转换为本地字符串</span></span><br><span class="line">        <span class="built_in">console</span>.log(a.toUTCString());<span class="comment">//转换为格林尼治时间字符串</span></span><br><span class="line">        <span class="built_in">console</span>.log(a.toString());</span><br><span class="line">        <span class="comment">// toFixed  toPrecision toExponential  都是针对数值转换</span></span><br><span class="line">        <span class="built_in">console</span>.log(a.toFixed(<span class="number">1</span>));<span class="comment">//保留几位小数,会自动四舍五入</span></span><br><span class="line">        <span class="built_in">console</span>.log(a.toPrecision(<span class="number">2</span>));<span class="comment">//总共保留几位，会自动四舍五入或者科学计数法</span></span><br><span class="line">        <span class="built_in">console</span>.log(a.toExponential(<span class="number">2</span>));<span class="comment">//小数点后保留几位，不会自动四舍五入，一定科学计数法</span></span><br></pre></td></tr></table></figure><p><strong>任何类型转换为布尔值</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="string">""</span>;<span class="comment">//false</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="number">0</span>;<span class="comment">//false</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">undefined</span>;<span class="comment">//false</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">null</span>;<span class="comment">//false</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">NaN</span>;<span class="comment">//false</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">false</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(a));</span><br><span class="line"><span class="comment">// "" 0 undefined null NaN false  转换为布尔值都是false</span></span><br><span class="line"><span class="comment">// 除上述6种以外转换为布尔值都是true</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"0"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(a));</span><br><span class="line"><span class="keyword">var</span> a=<span class="number">3</span>;</span><br><span class="line"><span class="comment">// 强转为对象类型</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>(a));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;js-文件的引入&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#js-文件的引入&quot;&gt;&lt;/a&gt; js 文件的引入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;引入外部js&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="数据类型" scheme="https://cooli-willson.github.io/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>通过数组方法实现的简单功能</title>
    <link href="https://cooli-willson.github.io/2020/01/19/%E9%80%9A%E8%BF%87%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0%E7%9A%84%E7%AE%80%E5%8D%95%E5%8A%9F%E8%83%BD/"/>
    <id>https://cooli-willson.github.io/2020/01/19/%E9%80%9A%E8%BF%87%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0%E7%9A%84%E7%AE%80%E5%8D%95%E5%8A%9F%E8%83%BD/</id>
    <published>2020-01-19T08:04:27.014Z</published>
    <updated>2020-01-25T07:14:08.898Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实现功能"><a class="markdownIt-Anchor" href="#实现功能"></a> 实现功能</h1><h3 id="去重-原生版"><a class="markdownIt-Anchor" href="#去重-原生版"></a> 去重  原生版</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">7</span>];</span><br><span class="line">       <span class="keyword">var</span> arr1=[];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;        <span class="comment">//遍历当前数组的长度</span></span><br><span class="line">           <span class="keyword">var</span> bool=<span class="literal">false</span>;<span class="comment">//flag</span></span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;arr1.length;j++)&#123;   <span class="comment">//循环arr1长度</span></span><br><span class="line">               <span class="keyword">if</span>(arr[i]===arr1[j])&#123; <span class="comment">//当arr的元素全等于arr1</span></span><br><span class="line">                   bool=<span class="literal">true</span>;<span class="comment">//改变flag的布尔值</span></span><br><span class="line">                   <span class="keyword">break</span>;<span class="comment">//跳出循环</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span>(!bool)&#123;</span><br><span class="line">               arr1.push(arr[i]);          <span class="comment">//将arr的元素赋值给arr1</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       arr=arr1.splice(<span class="number">0</span>);</span><br><span class="line">       arr1=<span class="literal">null</span>;</span><br></pre></td></tr></table></figure><h3 id="去重indexof版"><a class="markdownIt-Anchor" href="#去重indexof版"></a> 去重indexOf版</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">7</span>];</span><br><span class="line">    <span class="keyword">var</span> arr1=[];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;        <span class="comment">//循环数组的长度</span></span><br><span class="line">        <span class="keyword">if</span>(arr1.indexOf(arr[i])&lt;<span class="number">0</span>) arr1.push(arr[i]); <span class="comment">//当arr下的每个元素在index属性下返回负一时  将元素储存在arr1中 ？？？</span></span><br><span class="line">    &#125;</span><br><span class="line">    arr=arr1.splice(<span class="number">0</span>);</span><br><span class="line">    arr1=<span class="literal">null</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h3 id="去重delete版"><a class="markdownIt-Anchor" href="#去重delete版"></a> 去重delete版</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">7</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;arr.length;i++)&#123;                    <span class="comment">//循环数组的长度</span></span><br><span class="line">        <span class="keyword">if</span>(arr.indexOf(arr[i],i+<span class="number">1</span>)&gt;<span class="number">-1</span>) <span class="keyword">delete</span> arr[i];  <span class="comment">//要查找的元素下标为i,从i+1开始，当找到相同元素时，将下标为i的元素删除</span></span><br><span class="line">        <span class="keyword">if</span>(arr.lastIndexOf(arr[i],i<span class="number">-1</span>)&gt;<span class="number">-1</span>) <span class="keyword">delete</span> arr[i]; <span class="comment">//倒叙遍历，重复以上操作</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> arr1=[];    <span class="comment">//空数组arr1;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> arr)&#123;     <span class="comment">//循环arr的长度</span></span><br><span class="line">            arr1.push(arr[prop]); <span class="comment">//将arr的元素储存在arr1中</span></span><br><span class="line">        &#125;   </span><br><span class="line">        arr=arr1.splice(<span class="number">0</span>);     <span class="comment">//将arr数组的所有元素传递给arr1</span></span><br><span class="line">        arr1=<span class="literal">null</span>;<span class="comment">//清空数组arr1</span></span><br><span class="line">        <span class="built_in">console</span>.log(arr); <span class="comment">//控制台打印arr</span></span><br></pre></td></tr></table></figure><h3 id="数组的遍历"><a class="markdownIt-Anchor" href="#数组的遍历"></a> 数组的遍历</h3><h4 id="for循环遍历"><a class="markdownIt-Anchor" href="#for循环遍历"></a> for循环遍历</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line">       arr.a=<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;     <span class="comment">//循环数组的长度</span></span><br><span class="line">           <span class="built_in">console</span>.log(i,arr[i]);  <span class="comment">//打印下标 和下标的每个元素</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h4 id="for-in循环遍历"><a class="markdownIt-Anchor" href="#for-in循环遍历"></a> for in循环遍历</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="keyword">in</span> 循环可以把数组的可枚举属性遍历到</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">in</span>不能遍历到数组的空元素</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> arr)&#123;<span class="comment">//prop相当于数组的下标</span></span><br><span class="line">            <span class="built_in">console</span>.log(prop,arr[prop]);   <span class="comment">//打印下标，和下标的每个元素</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="将获取的标签元素转换为数组类型"><a class="markdownIt-Anchor" href="#将获取的标签元素转换为数组类型"></a> 将获取的标签元素转换为数组类型</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ES6</span></span><br><span class="line"><span class="keyword">var</span> list=<span class="built_in">Array</span>.from(inputs);</span><br><span class="line"><span class="built_in">console</span>.log(list);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ES5</span></span><br><span class="line"><span class="keyword">var</span> list=<span class="built_in">Array</span>.prototype.slice.call(inputs);</span><br><span class="line"><span class="keyword">var</span> list=[].slice.call(inputs);</span><br><span class="line"><span class="keyword">var</span> list=<span class="built_in">Array</span>.prototype.concat.apply([],inputs);</span><br><span class="line"><span class="keyword">var</span> list=[].concat.apply([],inputs);</span><br></pre></td></tr></table></figure><h3 id="实现列表的全选功能"><a class="markdownIt-Anchor" href="#实现列表的全选功能"></a> 实现列表的全选功能???</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>全选<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">   &lt;<span class="regexp">/ul&gt; </span></span><br><span class="line"><span class="regexp">   </span></span><br><span class="line"><span class="regexp">   var inputs=document.getElementsByTagName("input");   /</span><span class="regexp">/将获取的input标签的元素储存在inputs中</span></span><br><span class="line"><span class="regexp">   var arr=Array.from(inputs);   /</span><span class="regexp">/将获取的标签元素转换为数组类型</span></span><br><span class="line"><span class="regexp">       for(var i=0;i&lt;arr.length;i++)&#123;    /</span><span class="regexp">/循环数组的长度</span></span><br><span class="line"><span class="regexp">           arr[i].onclick=clickHandler;/</span><span class="regexp">/当点击时调用clickHandler函数</span></span><br><span class="line"><span class="regexp">       &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">       function clickHandler()&#123;</span></span><br><span class="line"><span class="regexp">           var self=this;   /</span><span class="regexp">/将当前元素用self存储</span></span><br><span class="line"><span class="regexp">            if(arr.indexOf(this)===0)&#123;    /</span><span class="regexp">/当前元素为0时</span></span><br><span class="line"><span class="regexp">               arr.forEach(function(item,index)&#123; </span></span><br><span class="line"><span class="regexp">                   if(index===0) return;/</span><span class="regexp">/当前元素下标为0时 返回</span></span><br><span class="line"><span class="regexp">                   /</span><span class="regexp">/ foreach中this被重新指向到window（所有的回调函数）</span></span><br><span class="line"><span class="regexp">                   item.checked=self.checked;/</span><span class="regexp">/将所有元素都天机checked属性</span></span><br><span class="line"><span class="regexp">               &#125;)</span></span><br><span class="line"><span class="regexp">            &#125;else&#123;</span></span><br><span class="line"><span class="regexp">               arr[0].checked=arr.slice(1).every(function(item)&#123; /</span><span class="regexp">/？？？</span></span><br><span class="line"><span class="regexp">                   return item.checked;/</span><span class="regexp">/???</span></span><br><span class="line"><span class="regexp">               &#125;)</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">       &#125;</span></span><br></pre></td></tr></table></figure><h3 id="对表格中的商品通过属性进行筛选"><a class="markdownIt-Anchor" href="#对表格中的商品通过属性进行筛选"></a> 对表格中的商品通过属性进行筛选</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data=[</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1001</span>,<span class="attr">icon</span>:<span class="string">"img/1.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮0"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">10</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1002</span>,<span class="attr">icon</span>:<span class="string">"img/2.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮1"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">20</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1003</span>,<span class="attr">icon</span>:<span class="string">"img/3.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮2"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">30</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1004</span>,<span class="attr">icon</span>:<span class="string">"img/4.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮3"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">40</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1005</span>,<span class="attr">icon</span>:<span class="string">"img/5.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮4"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">50</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1006</span>,<span class="attr">icon</span>:<span class="string">"img/6.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮5"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">60</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1007</span>,<span class="attr">icon</span>:<span class="string">"img/7.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮6"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">70</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1008</span>,<span class="attr">icon</span>:<span class="string">"img/8.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮7"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">80</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1009</span>,<span class="attr">icon</span>:<span class="string">"img/9.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮8"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">90</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1010</span>,<span class="attr">icon</span>:<span class="string">"img/10.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮9"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">100</span>&#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr=data.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item.price&gt;<span class="number">60</span>;   <span class="comment">//返回所有价格&gt;60的元素</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"><span class="keyword">var</span> item=data.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item.id==<span class="number">1006</span>;  <span class="comment">//返回id==1006的元素</span></span><br><span class="line">&#125;)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(item);</span><br></pre></td></tr></table></figure><h3 id="实现购物车功能"><a class="markdownIt-Anchor" href="#实现购物车功能"></a> 实现购物车功能</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data=[</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1001</span>,<span class="attr">icon</span>:<span class="string">"img/1.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮0"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">10</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1002</span>,<span class="attr">icon</span>:<span class="string">"img/2.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮1"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">20</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1003</span>,<span class="attr">icon</span>:<span class="string">"img/3.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮2"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">30</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1004</span>,<span class="attr">icon</span>:<span class="string">"img/4.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮3"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">40</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1005</span>,<span class="attr">icon</span>:<span class="string">"img/5.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮4"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">50</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1006</span>,<span class="attr">icon</span>:<span class="string">"img/6.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮5"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">60</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1007</span>,<span class="attr">icon</span>:<span class="string">"img/7.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮6"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">70</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1008</span>,<span class="attr">icon</span>:<span class="string">"img/8.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮7"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">80</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1009</span>,<span class="attr">icon</span>:<span class="string">"img/9.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮8"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">90</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1010</span>,<span class="attr">icon</span>:<span class="string">"img/10.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮9"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">100</span>&#125;</span><br><span class="line">   ];</span><br><span class="line"></span><br><span class="line">   data.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;               <span class="comment">//遍历整个数组   </span></span><br><span class="line">       item.selected=<span class="built_in">Math</span>.random()&lt;<span class="number">0.5</span>;       <span class="comment">//随机选择被选中的元素</span></span><br><span class="line">       item.num=<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">5</span>+<span class="number">5</span>);  <span class="comment">//给num属性随机赋值</span></span><br><span class="line">       item.total=item.num*item.price;   <span class="comment">//将数量和价格相乘得出的结果付给tatal（总价）</span></span><br><span class="line">   &#125;);</span><br><span class="line">   <span class="keyword">var</span> sum=data.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">value,item</span>)</span>&#123;  <span class="comment">//归并data并且赋值到sum中</span></span><br><span class="line">       <span class="keyword">return</span> item.selected ? value+item.total : value;<span class="comment">//若选中就加到vale中，没有选则不加</span></span><br><span class="line">   &#125;,<span class="number">0</span>);</span><br><span class="line">   <span class="built_in">console</span>.log(sum);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;实现功能&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#实现功能&quot;&gt;&lt;/a&gt; 实现功能&lt;/h1&gt;
&lt;h3 id=&quot;去重-原生版&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#去重-原生版&quot;&gt;&lt;/a&gt; 去重  
      
    
    </summary>
    
    
      <category term="功能" scheme="https://cooli-willson.github.io/categories/%E5%8A%9F%E8%83%BD/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="功能" scheme="https://cooli-willson.github.io/tags/%E5%8A%9F%E8%83%BD/"/>
    
      <category term="数组" scheme="https://cooli-willson.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>数组方法的重构</title>
    <link href="https://cooli-willson.github.io/2020/01/19/%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E7%9A%84%E9%87%8D%E6%9E%84/"/>
    <id>https://cooli-willson.github.io/2020/01/19/%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E7%9A%84%E9%87%8D%E6%9E%84/</id>
    <published>2020-01-19T08:04:24.522Z</published>
    <updated>2020-01-20T17:14:16.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数组方法的重构"><a class="markdownIt-Anchor" href="#数组方法的重构"></a> 数组方法的重构</h1><h2 id="push"><a class="markdownIt-Anchor" href="#push"></a> push</h2><h4 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能：</h4><h4 id="在数组尾部添加一个或者多个新元素并且返回数组的新长度"><a class="markdownIt-Anchor" href="#在数组尾部添加一个或者多个新元素并且返回数组的新长度"></a> *在数组<strong>尾部</strong>添加一个或者<strong>多个</strong>新元素，并且返回<strong>数组的新长度</strong></h4><h4 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.push(<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>);</span><br></pre></td></tr></table></figure><h2 id="push-重构"><a class="markdownIt-Anchor" href="#push-重构"></a> push 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">67</span>,<span class="number">78</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">push</span>(<span class="params">arr</span>)</span>&#123;<span class="comment">//传入参数为数组</span></span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;<span class="built_in">arguments</span>.length;i++)&#123;   <span class="comment">//循环除数组外其他元素的长度   </span></span><br><span class="line">               arr[arr.length]=<span class="built_in">arguments</span>[i];   <span class="comment">//在尾部添加参数通过下标赋值</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> arr.length;      <span class="comment">//返回数组长度</span></span><br><span class="line">       &#125;</span><br><span class="line"><span class="keyword">var</span> i=push(arr,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>); <span class="comment">//调用push方法，参数为数组，5，6，7</span></span><br><span class="line"><span class="built_in">console</span>.log(arr,i); *<span class="regexp">/ /</span><span class="regexp">/数组长度，新数组</span></span><br></pre></td></tr></table></figure><h2 id="pop"><a class="markdownIt-Anchor" href="#pop"></a> pop</h2><h4 id="功能-2"><a class="markdownIt-Anchor" href="#功能-2"></a> 功能：</h4><pre><code> #### *删除数组的**尾部**元素，并且返回这个**被删除的元素**</code></pre><h4 id="使用方法-2"><a class="markdownIt-Anchor" href="#使用方法-2"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var item=arr.pop();</span></span><br><span class="line"><span class="comment">// console.log(item,arr);</span></span><br></pre></td></tr></table></figure><h2 id="pop-重构"><a class="markdownIt-Anchor" href="#pop-重构"></a> pop 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pop</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> item=arr[arr.length<span class="number">-1</span>];   <span class="comment">//用item储存最后一个参数</span></span><br><span class="line">            arr.length--;  <span class="comment">//数组的长度减一</span></span><br><span class="line">            <span class="keyword">return</span> item;  <span class="comment">//返回这个被删除的参数</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">pop(arr);</span><br></pre></td></tr></table></figure><h2 id="unshift"><a class="markdownIt-Anchor" href="#unshift"></a> unshift</h2><h4 id="功能-3"><a class="markdownIt-Anchor" href="#功能-3"></a> 功能：</h4><h4 id="将一个或者多个新元素添加在数组的最前面返回数组的新长度"><a class="markdownIt-Anchor" href="#将一个或者多个新元素添加在数组的最前面返回数组的新长度"></a> *将一个或者多个新元素添加在数组的最前面，返回数组的新长度</h4><h4 id="使用方法-3"><a class="markdownIt-Anchor" href="#使用方法-3"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.unshift(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h2 id="unshift-重构"><a class="markdownIt-Anchor" href="#unshift-重构"></a> unshift 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unshift</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">          <span class="keyword">var</span> len=<span class="built_in">arguments</span>.length<span class="number">-1</span>;              <span class="comment">//len储存除数组以外的其他元素的长度</span></span><br><span class="line">               <span class="keyword">for</span>(<span class="keyword">var</span> i=arr.length<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123; <span class="comment">//循环当前数组的长度</span></span><br><span class="line">                   arr[i+len]=arr[i];    <span class="comment">//将当前数组的元素向后移</span></span><br><span class="line">              &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">1</span>;j&lt;<span class="built_in">arguments</span>.length;j++)&#123; <span class="comment">//循环参数的长度（除arr外）</span></span><br><span class="line">                       arr[j<span class="number">-1</span>]=<span class="built_in">arguments</span>[j]; <span class="comment">//将参数赋值给数组的前面</span></span><br><span class="line">               &#125;</span><br><span class="line">                 <span class="keyword">return</span> arr.length;<span class="comment">//返回数组的新长度</span></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">                unshift(arr,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>);</span><br><span class="line">               <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h2 id="shift"><a class="markdownIt-Anchor" href="#shift"></a> shift</h2><h4 id="功能-4"><a class="markdownIt-Anchor" href="#功能-4"></a> 功能：</h4><pre><code>删除数组的第一个元素，并返回该元素</code></pre><h4 id="使用方法-4"><a class="markdownIt-Anchor" href="#使用方法-4"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.shift();</span><br></pre></td></tr></table></figure><h2 id="shift-重构"><a class="markdownIt-Anchor" href="#shift-重构"></a> shift 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shift</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!(arr <span class="keyword">instanceof</span> <span class="built_in">Array</span>)) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"请确保参数类型为数组"</span>)  <span class="comment">//判断传入参数是否为数组</span></span><br><span class="line">  <span class="keyword">var</span> el;</span><br><span class="line">  <span class="keyword">if</span> (arr.length &gt; <span class="number">0</span>) &#123;<span class="comment">//如果数组有长度</span></span><br><span class="line">    el = arr[<span class="number">0</span>]    <span class="comment">//将第一个元素储存在el中</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;  <span class="comment">//循环数组的长度</span></span><br><span class="line">      arr[i] = arr[i + <span class="number">1</span>]<span class="comment">//将数组的每个元素前移一位</span></span><br><span class="line">    &#125;</span><br><span class="line">    arr.length = arr.length - <span class="number">1</span><span class="comment">//数组的长度减一</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> el</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="concat"><a class="markdownIt-Anchor" href="#concat"></a> concat</h2><h4 id="功能-5"><a class="markdownIt-Anchor" href="#功能-5"></a> 功能：</h4><h4 id="复制复制后给新数组添加新元素多个数组连接形成数组"><a class="markdownIt-Anchor" href="#复制复制后给新数组添加新元素多个数组连接形成数组"></a> *复制，复制后给新数组添加新元素，多个数组连接形成数组</h4><h4 id="使用方法-5"><a class="markdownIt-Anchor" href="#使用方法-5"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">var</span> arr1=arr.concat(<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>);   <span class="comment">//连接形成新数组</span></span><br><span class="line"><span class="keyword">var</span> arr1=arr.concat(); <span class="comment">//复制数组</span></span><br></pre></td></tr></table></figure><h2 id="concat-重构"><a class="markdownIt-Anchor" href="#concat-重构"></a> concat  重构???</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">concat</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> array=[];<span class="comment">//定义一个新数组</span></span><br><span class="line">            <span class="keyword">var</span> index=<span class="number">0</span>;<span class="comment">//下标变量</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++,index++)&#123;  <span class="comment">// 循环数组的长度</span></span><br><span class="line">                array[index]=arr[i]; <span class="comment">//将数组复制arr数组到array数组</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">1</span>;j&lt;<span class="built_in">arguments</span>.length;j++,index++)&#123;   <span class="comment">//遍历参数的长度(除数组外)</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">arguments</span>[j].constructor===<span class="built_in">Array</span>)&#123;   <span class="comment">//当参数为数组时 </span></span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">var</span> k=<span class="number">0</span>;k&lt;<span class="built_in">arguments</span>[j].length;k++,index++)&#123; <span class="comment">//遍历数组的长度  </span></span><br><span class="line">                        array[index]=<span class="built_in">arguments</span>[j][k];   <span class="comment">//将参数为数组的参数赋值给</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    index--;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    array[index]=<span class="built_in">arguments</span>[j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> array;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="join"><a class="markdownIt-Anchor" href="#join"></a> join</h2><h4 id="功能-6"><a class="markdownIt-Anchor" href="#功能-6"></a> 功能：</h4><h4 id="转换为字符串使用参数进行分割"><a class="markdownIt-Anchor" href="#转换为字符串使用参数进行分割"></a> *转换为字符串，使用参数进行分割</h4><h4 id="使用方法-6"><a class="markdownIt-Anchor" href="#使用方法-6"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(arr.join());</span><br><span class="line"> <span class="built_in">console</span>.log(arr.join(<span class="string">"#"</span>));<span class="comment">//1#2#3#4</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.join(<span class="string">""</span>));<span class="comment">//1234</span></span><br></pre></td></tr></table></figure><h2 id="join-重构myself"><a class="markdownIt-Anchor" href="#join-重构myself"></a> join 重构（myself）</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">join</span>(<span class="params">arr,and</span>)</span>&#123;                                 <span class="comment">//参数为数组和连接符</span></span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;arr.length<span class="number">-1</span>;i++)&#123;    <span class="comment">//循环数组长度     </span></span><br><span class="line">               arr[i]+=and;  <span class="comment">//数组加入连接符</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> arr;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">var</span> arr = [<span class="number">3</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line">       join(arr,<span class="string">"|"</span>);</span><br><span class="line">       <span class="built_in">document</span>.write(arr);</span><br></pre></td></tr></table></figure><h2 id="splice"><a class="markdownIt-Anchor" href="#splice"></a> splice</h2><h4 id="功能-7"><a class="markdownIt-Anchor" href="#功能-7"></a> 功能：</h4><h4 id="给数组中添加-删除-替换一个或者多个元素返回被删除元素组成的数组"><a class="markdownIt-Anchor" href="#给数组中添加-删除-替换一个或者多个元素返回被删除元素组成的数组"></a> *给数组中添加、删除、替换一个或者多个元素，返回被删除元素组成的数组</h4><h4 id="使用方法-7"><a class="markdownIt-Anchor" href="#使用方法-7"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// arr.splice(从什么位置开始,删除多少个元素,添加的元素...);</span></span><br><span class="line">       </span><br><span class="line"><span class="comment">// var arr1=arr.splice();//创建一个空数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var arr1=arr.splice(0);//将数组的所有元素传递给新数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 负数指从后向前数</span></span><br><span class="line"><span class="comment">// var arr1=arr.splice(-2);//从数组的倒数第二位开始截取到尾部</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var arr1=arr.splice(2,2);//从第二位开始删除2个元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var arr1=arr.splice(ar2,0,12,14);//插入元素13，14，插入在第二位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var arr1=arr.splice(2,2,12,14);//替换元素，删除两位并且插入12，14</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(arr1,arr);</span></span><br></pre></td></tr></table></figure><h2 id="splice-重构"><a class="markdownIt-Anchor" href="#splice-重构"></a> splice 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">splice</span>(<span class="params">arr,start,count</span>)</span>&#123;   <span class="comment">//第一个参数是数组  第二个参数是开始位置  第三个参数是一共替换几个参数</span></span><br><span class="line">           <span class="keyword">var</span> a=[];                       <span class="comment">//定义一个空数组</span></span><br><span class="line">           start=<span class="built_in">Number</span>(start);            <span class="comment">//将开始参数设为数值型</span></span><br><span class="line">           count=<span class="built_in">Number</span>(count);            <span class="comment">//将count转为数值型</span></span><br><span class="line">           <span class="keyword">if</span>(<span class="built_in">isNaN</span>(start))<span class="keyword">return</span> a;       <span class="comment">//如果start为NaN  返回空数组</span></span><br><span class="line">           <span class="keyword">if</span>(start&lt;<span class="number">0</span>) start+=arr.length;  <span class="comment">//如果start小于0 start等于数组长度  数据从最后一位开始插入</span></span><br><span class="line">           <span class="keyword">if</span>(<span class="built_in">isNaN</span>(count)) count=arr.length-start;    <span class="comment">//？？？</span></span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> i=start,j=<span class="number">0</span>;i&lt;arr.length;i++,j++)&#123; <span class="comment">//遍历从start位置开始长度小于数组的长度</span></span><br><span class="line">               <span class="keyword">if</span>(j&lt;count) a.push(arr[i]); <span class="comment">//当循环次数小于count参数时储存在arr当前下标位置</span></span><br><span class="line">               arr[i]=arr[i+count];        <span class="comment">//arr当前下标的值等于i+count;</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> l=<span class="number">0</span>;l&lt;<span class="built_in">arguments</span>.length<span class="number">-3</span>;l++)&#123;       <span class="comment">//遍历处前三个参数外其他参数的值</span></span><br><span class="line">               <span class="keyword">for</span>(<span class="keyword">var</span> m=arr.length<span class="number">-1</span>;m&gt;=start+l;m--)&#123;  <span class="comment">//???</span></span><br><span class="line">                   arr[m+<span class="number">1</span>]=arr[m];                     <span class="comment">//???</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">3</span>;n&lt;<span class="built_in">arguments</span>.length;n++)&#123;        <span class="comment">//循环参数的长度</span></span><br><span class="line">               arr[start+n<span class="number">-3</span>]=<span class="built_in">arguments</span>[n];            <span class="comment">//设定参数在数组中的下标赋值</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> k=<span class="number">0</span>;k&lt;count;k++)&#123;                   <span class="comment">//替换时减去数组的长度</span></span><br><span class="line">               arr.length--;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> a;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">var</span> arr1=splice(arr,<span class="number">2</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>);</span><br><span class="line">       <span class="built_in">console</span>.log(arr1,arr);</span><br></pre></td></tr></table></figure><h2 id="slice"><a class="markdownIt-Anchor" href="#slice"></a> slice</h2><h4 id="功能-8"><a class="markdownIt-Anchor" href="#功能-8"></a> 功能：</h4><h4 id="截取数组的某一段的值返回一个新数组原数组不改变"><a class="markdownIt-Anchor" href="#截取数组的某一段的值返回一个新数组原数组不改变"></a> *截取数组的某一段的值，返回一个新数组，原数组不改变</h4><h4 id="使用方法-8"><a class="markdownIt-Anchor" href="#使用方法-8"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var arr1=arr.slice();//复制一个新数组</span></span><br><span class="line">        <span class="comment">// var arr1=arr.slice(1);//从第几项复制到尾部</span></span><br><span class="line">        <span class="comment">// var arr1=arr.slice(-2);//从倒数第二位复制到尾部</span></span><br><span class="line">        <span class="comment">// var arr1=arr.slice(2,3);//从第二位复制到第三位之前</span></span><br><span class="line">        <span class="comment">// var arr1=arr.slice(-3,-1);//从倒数第三位复制到倒数第一位之前</span></span><br><span class="line">        <span class="comment">// var arr1=arr.slice(2,-1);//从第二位复制到倒数第一位之前</span></span><br><span class="line">        <span class="comment">// console.log(arr1,arr);</span></span><br></pre></td></tr></table></figure><h2 id="slice-重构"><a class="markdownIt-Anchor" href="#slice-重构"></a> slice 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">slice</span>(<span class="params">arr,start,end</span>)</span>&#123;       <span class="comment">//第一个参数为数组  第二个值为开始截取位置</span></span><br><span class="line">            start=<span class="built_in">Number</span>(start);   <span class="comment">//将参数转为数值型</span></span><br><span class="line">            end=<span class="built_in">Number</span>(end);     <span class="comment">//将参数转为数值型</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isNaN</span>(start)) start=<span class="number">0</span>; <span class="comment">//如果start为NaN  将strat变为0；</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isNaN</span>(end)) end=arr.length; <span class="comment">//如果end为NaN </span></span><br><span class="line">            <span class="keyword">if</span>(start&lt;<span class="number">0</span>) start=start+arr.length;   <span class="comment">//如果参数为0,start为数组的长度</span></span><br><span class="line">            <span class="keyword">if</span>(end&lt;<span class="number">0</span>) end=end+arr.length; <span class="comment">//如果参数为0，end为数组的长度</span></span><br><span class="line">            <span class="keyword">var</span> a=[];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=start,j=<span class="number">0</span>;i&lt;end;i++,j++)&#123;   <span class="comment">//循环开始到结束的下标</span></span><br><span class="line">                a[j]=arr[i];<span class="comment">//将截取的数组赋值给新数组a</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a;<span class="comment">//返回新数组</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> arr1=slice(arr,<span class="number">2</span>,<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(arr1,arr);</span><br></pre></td></tr></table></figure><h2 id="indexof"><a class="markdownIt-Anchor" href="#indexof"></a> indexOf</h2><h4 id="功能-9"><a class="markdownIt-Anchor" href="#功能-9"></a> 功能：</h4><h4 id="查找元素在数组中的下标如果没有查找到返回-1"><a class="markdownIt-Anchor" href="#查找元素在数组中的下标如果没有查找到返回-1"></a> *查找元素在数组中的下标，如果没有查找到返回-1</h4><h4 id="使用方法-9"><a class="markdownIt-Anchor" href="#使用方法-9"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//从前向后查找</span></span><br><span class="line">arr.indexOf(要查找的元素,从第几位开始查找被包含);</span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="number">3</span>,<span class="number">2</span>));</span><br><span class="line">     </span><br><span class="line">     <span class="comment">// 从后向前查找</span></span><br><span class="line">arr.lastIndexOf(要查找的元素,从第几位开始查找被包含);</span><br><span class="line">     </span><br><span class="line"><span class="keyword">var</span> index=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(~(index=arr.indexOf(<span class="number">2</span>,index+<span class="number">1</span>)))&#123;    <span class="comment">//~加一取反  循环条件也是表达式</span></span><br><span class="line">    <span class="built_in">console</span>.log(index)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="indexof重构"><a class="markdownIt-Anchor" href="#indexof重构"></a> indexOf重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreateString</span>(<span class="params">str</span>)</span>&#123; </span><br><span class="line">     <span class="keyword">var</span> obj = &#123;                </span><br><span class="line">         data: str,</span><br><span class="line">         <span class="comment">//indexOf 方法</span></span><br><span class="line">         IndexOf: <span class="function"><span class="keyword">function</span> (<span class="params">chara1</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.data.length; i++) &#123;</span><br><span class="line">                 <span class="keyword">if</span> (str.substr(i, chara1.length) == chara1&#123;                         </span><br><span class="line">              <span class="keyword">break</span>;                      </span><br><span class="line">                 &#125;                    </span><br><span class="line">            &#125;                    </span><br><span class="line"><span class="keyword">return</span> i;                </span><br><span class="line">  &#125;,</span><br><span class="line">          <span class="comment">//lastIndexOf 方法 </span></span><br><span class="line">           LastIndexOf: <span class="function"><span class="keyword">function</span> (<span class="params">chara2</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">this</span>.data.length; i &gt; <span class="number">0</span>; i--) &#123;                </span><br><span class="line">                   <span class="keyword">if</span> (<span class="keyword">this</span>.data.substr(i, chara2.length) == chara2) &#123;                            </span><br><span class="line">              <span class="keyword">break</span>;                        </span><br><span class="line">                   &#125;                    </span><br><span class="line">              &#125;                    </span><br><span class="line">              <span class="keyword">return</span> i;                </span><br><span class="line">           &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delete"><a class="markdownIt-Anchor" href="#delete"></a> delete</h3><h4 id="功能-10"><a class="markdownIt-Anchor" href="#功能-10"></a> 功能：</h4><pre><code>#### *删除数组元素，不会造成数组的自动收缩，紧密，数组的长度不会发生改变</code></pre><h4 id="使用方法-10"><a class="markdownIt-Anchor" href="#使用方法-10"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"><span class="keyword">delete</span> arr[<span class="number">2</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h2 id="foreach循环"><a class="markdownIt-Anchor" href="#foreach循环"></a> forEach循环</h2><h4 id="功能-11"><a class="markdownIt-Anchor" href="#功能-11"></a> 功能：</h4><h4 id="foreach不遍历空元素也不遍历属性foreach是匿名函数无法阻止它在循环中中断循环跳出"><a class="markdownIt-Anchor" href="#foreach不遍历空元素也不遍历属性foreach是匿名函数无法阻止它在循环中中断循环跳出"></a> *forEach不遍历空元素，也不遍历属性，forEach是匿名函数，无法阻止它在循环中中断循环跳出</h4><h4 id="使用方法-11"><a class="markdownIt-Anchor" href="#使用方法-11"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>,,<span class="number">12</span>,<span class="number">14</span>,<span class="number">16</span>,<span class="number">18</span>,<span class="number">20</span>];</span><br><span class="line">      arr.a=<span class="number">10</span>;</span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index,a</span>)</span>&#123;    <span class="comment">//item:当前元素  index:当前元素的下标  当前元素所属的数组对象</span></span><br><span class="line"><span class="built_in">console</span>.log(item,index,a);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="foreach重构"><a class="markdownIt-Anchor" href="#foreach重构"></a> forEach重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach</span>(<span class="params">arr,fn</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;         <span class="comment">//循环数组的长度</span></span><br><span class="line">                <span class="keyword">if</span>(arr[i]===<span class="literal">undefined</span>) <span class="keyword">continue</span>;   <span class="comment">//当前元素为空时，直接执行下一次循环</span></span><br><span class="line">                fn(arr[i],i,arr);    <span class="comment">//fn参数为：当前元素，当前元素下标，当前元素的数组对象</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 桥接模式</span></span><br><span class="line">forEach(arr,<span class="function"><span class="keyword">function</span>(<span class="params">item,index,a</span>)</span>&#123;          <span class="comment">//调用forEach函数</span></span><br><span class="line">            <span class="built_in">console</span>.log(item,index,a);<span class="comment">//打印每个参数值</span></span><br><span class="line">&#125;) *<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h2 id="map"><a class="markdownIt-Anchor" href="#map"></a> map</h2><h4 id="功能-12"><a class="markdownIt-Anchor" href="#功能-12"></a> 功能：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map同样不会遍历空数组，map与forEach不同的是：forEach不能返回任何内容，map会将回到函数中return的结果返回到新数组中</span><br></pre></td></tr></table></figure><h4 id="使用方法-12"><a class="markdownIt-Anchor" href="#使用方法-12"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">item,index,a</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(item,index,a);</span><br><span class="line">            <span class="keyword">return</span> item;</span><br><span class="line"> &#125;);</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><h2 id="重构map"><a class="markdownIt-Anchor" href="#重构map"></a> 重构map</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">map</span>(<span class="params">arr,fn</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a=[];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;<span class="comment">//循环数组的长度</span></span><br><span class="line">                <span class="keyword">if</span>(arr[i]===<span class="literal">undefined</span>) <span class="keyword">continue</span>; <span class="comment">//当前元素为空时直接进行下一次循环</span></span><br><span class="line">                a[i]=fn(arr[i],i,arr);<span class="comment">//将函数fn存放在数组中</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a;   <span class="comment">//返回数组a,元素为每个函数</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> a=map(arr,<span class="function"><span class="keyword">function</span>(<span class="params">item,index,a</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> item;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><h2 id="some"><a class="markdownIt-Anchor" href="#some"></a> some</h2><h4 id="功能-13"><a class="markdownIt-Anchor" href="#功能-13"></a> 功能：</h4><pre><code>遍历数组，查找是否有满足条件（返回的结果如果是true）就直接跳出遍历，返回true</code></pre><h4 id="使用方法-13"><a class="markdownIt-Anchor" href="#使用方法-13"></a> 使用方法:</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line">    <span class="keyword">if</span>(arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;item&gt;<span class="number">3</span>&#125;))&#123;</span><br><span class="line"><span class="comment">//遍历arr,查询元素是否有大于3的，有的话返回true</span></span><br><span class="line">       &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="keyword">var</span> bool=arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">item,index,a</span>)</span>&#123;</span><br><span class="line">           <span class="keyword">return</span> item&gt;<span class="number">4</span>;      <span class="comment">//遍历arr,查询元素是否有大于4的，有的话返回ture</span></span><br><span class="line">       &#125;)</span><br><span class="line">       <span class="built_in">console</span>.log(bool);       <span class="comment">//打印结果为ture</span></span><br></pre></td></tr></table></figure><h2 id="some重构"><a class="markdownIt-Anchor" href="#some重构"></a> some重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">some</span>(<span class="params">arr,fn</span>)</span>&#123;</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;<span class="comment">//循环数组的长度</span></span><br><span class="line">              <span class="keyword">if</span>(arr[i]===<span class="literal">undefined</span>) <span class="keyword">continue</span>;<span class="comment">//如果数组的元素为空，直接执行下一次的循环</span></span><br><span class="line">              <span class="keyword">if</span>(fn(arr[i],i,arr)) <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//如果fn函数的返回值为ture  返回ture</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;  <span class="comment">//当第二个if语句条件不成立时，返回flase</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">var</span> bool=some(arr,<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;   <span class="comment">//执行some函数，返回值储存在bool中  </span></span><br><span class="line">          <span class="keyword">return</span> item&gt;<span class="number">10</span>;  <span class="comment">//判断表达式的值并返回</span></span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="built_in">console</span>.log(bool);</span><br></pre></td></tr></table></figure><h2 id="every"><a class="markdownIt-Anchor" href="#every"></a> every</h2><h4 id="功能-14"><a class="markdownIt-Anchor" href="#功能-14"></a> 功能：</h4><h4 id="判断每一个是否都满足条件如果有一个返回的结果是false直接返回false"><a class="markdownIt-Anchor" href="#判断每一个是否都满足条件如果有一个返回的结果是false直接返回false"></a> *判断每一个是否都满足条件，如果有一个返回的结果是false，直接返回false</h4><h4 id="使用方法-14"><a class="markdownIt-Anchor" href="#使用方法-14"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bool=arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">           <span class="keyword">return</span> item&gt;<span class="number">4</span>;</span><br><span class="line">       &#125;);</span><br><span class="line">       <span class="built_in">console</span>.log(bool);</span><br></pre></td></tr></table></figure><h2 id="every重构"><a class="markdownIt-Anchor" href="#every重构"></a> every重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">every</span>(<span class="params">arr,fn</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!fn(arr[i],i,arr)) <span class="keyword">return</span> <span class="literal">false</span>;       <span class="comment">//当条件不满足时返回false</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">var</span> bool=every(arr,<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> item&gt;<span class="number">4</span>;<span class="comment">//返回boolean值类型</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">console</span>.log(bool);</span><br></pre></td></tr></table></figure><h2 id="fill"><a class="markdownIt-Anchor" href="#fill"></a> fill</h2><h4 id="功能-15"><a class="markdownIt-Anchor" href="#功能-15"></a> 功能：</h4><h4 id="用于将一个固定数值替换数组的元素"><a class="markdownIt-Anchor" href="#用于将一个固定数值替换数组的元素"></a> *用于将一个固定数值替换数组的元素</h4><h4 id="使用方法-15"><a class="markdownIt-Anchor" href="#使用方法-15"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">array.fill(value, start, end)</span><br><span class="line"></span><br><span class="line">参数   描述</span><br><span class="line">value必需。填充的值。</span><br><span class="line">start可选。开始填充位置。</span><br><span class="line">end    可选。停止填充位置 (默认为 array.length)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">填充 <span class="string">"Runoob"</span> 到数组的最后两个元素：</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fruits = [<span class="string">"Banana"</span>, <span class="string">"Orange"</span>, <span class="string">"Apple"</span>, <span class="string">"Mango"</span>];</span><br><span class="line">fruits.fill(<span class="string">"Runoob"</span>, <span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">Banana,Orange,Runoob,Runoob</span><br></pre></td></tr></table></figure><h2 id="fill重构"><a class="markdownIt-Anchor" href="#fill重构"></a> fill重构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="filter"><a class="markdownIt-Anchor" href="#filter"></a> filter</h2><h4 id="功能-16"><a class="markdownIt-Anchor" href="#功能-16"></a> 功能：</h4><h4 id="创建一个新的数组新数组中的元素时通过检查置顶数组中符合条件的所有元素"><a class="markdownIt-Anchor" href="#创建一个新的数组新数组中的元素时通过检查置顶数组中符合条件的所有元素"></a> *创建一个新的数组，新数组中的元素时通过检查置顶数组中符合条件的所有元素</h4><h4 id="注意-filter-不会对空数组进行检测"><a class="markdownIt-Anchor" href="#注意-filter-不会对空数组进行检测"></a> <strong>注意：</strong> filter() 不会对空数组进行检测。</h4><h4 id="注意-filter-不会改变原始数组"><a class="markdownIt-Anchor" href="#注意-filter-不会改变原始数组"></a> <strong>注意：</strong> filter() 不会改变原始数组。</h4><h4 id="使用方法-16"><a class="markdownIt-Anchor" href="#使用方法-16"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1=arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item,index,a</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// console.log(item,index,a);</span></span><br><span class="line">            <span class="keyword">return</span> item&gt;<span class="number">4</span>;<span class="comment">//当条件成立时返回 </span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">console</span>.log(arr1);</span><br><span class="line">        </span><br><span class="line">array.filter(<span class="function"><span class="keyword">function</span>(<span class="params">currentValue,index,arr</span>), <span class="title">thisValue</span>);</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">参数  描述</span></span><br><span class="line"><span class="function"><span class="title">currentValue</span>必须。当前元素的值</span></span><br><span class="line"><span class="function"><span class="title">index</span> 可选。当前元素的索引值</span></span><br><span class="line"><span class="function"><span class="title">arr</span>      可选。当前元素属于的数组对象</span></span><br></pre></td></tr></table></figure><h2 id="filter-重构"><a class="markdownIt-Anchor" href="#filter-重构"></a> filter 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">arr,fn</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a=[];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;<span class="comment">//循环数组的长度</span></span><br><span class="line">                <span class="keyword">if</span>(fn(arr[i],i,arr)) a[a.length]=arr[i]; <span class="comment">//将在arr数组中满足条件的元素储存到a数组中</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">var</span> arr1=filter(arr,<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> item&gt;<span class="number">4</span>  <span class="comment">//符合表达式的进行返回</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">console</span>.log(arr1);</span><br></pre></td></tr></table></figure><h2 id="reduce"><a class="markdownIt-Anchor" href="#reduce"></a> reduce</h2><h4 id="功能-17"><a class="markdownIt-Anchor" href="#功能-17"></a> 功能：</h4><ul><li><p>归并 arr.reduce(function(上次归并值，本次遍历的元素，索引值，数组),初始化值)；</p></li><li><p>如果没有设置初始化值，上次归并值初始值为数组的第0项，本次遍历将从下标1开始</p></li><li><p>如果设置了初始化值，上次归并值初始值就是初始化值，本次遍历将从下标0开始*</p></li></ul><h4 id="使用方法-17"><a class="markdownIt-Anchor" href="#使用方法-17"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//arr.reduce(function(上次归并值，本次遍历的元素，索引值，数组),初始化值)；</span></span><br><span class="line"> <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">       <span class="keyword">var</span> sum= arr.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">value,item,index,a</span>)</span>&#123;  <span class="comment">//上次归并值，本次遍历的元素，下标，数组</span></span><br><span class="line">           <span class="built_in">console</span>.log(value,item);</span><br><span class="line">           <span class="keyword">return</span> value+item;<span class="comment">//返回归并值</span></span><br><span class="line">        &#125;,<span class="number">100</span>);   <span class="comment">//初始化值为100</span></span><br><span class="line">        <span class="built_in">console</span>.log(sum); *<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h2 id="reduce-重构"><a class="markdownIt-Anchor" href="#reduce-重构"></a> reduce 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reduce</span>(<span class="params">arr,fn,initValue</span>)</span>&#123;                   <span class="comment">//参数为 数组  初始化值</span></span><br><span class="line">            <span class="keyword">var</span> start=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(initValue===<span class="literal">undefined</span>)&#123;<span class="comment">//如果初始化值未定义</span></span><br><span class="line">                initValue=arr[<span class="number">0</span>];<span class="comment">//将数组的第一个元素设为初始化值</span></span><br><span class="line">                start++;   </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=start;i&lt;arr.length;i++)&#123;         <span class="comment">//当初始化值为第一个元素时，从第二个开始归并</span></span><br><span class="line">                initValue=fn(initValue,arr[i],i,arr)   <span class="comment">//桥接模式</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> initValue; <span class="comment">//返回初始值也就是归并值</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line">       <span class="keyword">var</span> sum=reduce(arr,<span class="function"><span class="keyword">function</span>(<span class="params">value,item</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> value+item;                      <span class="comment">//返回归并值</span></span><br><span class="line">        &#125;,<span class="number">100</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(sum);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> sum=arr.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">value,item</span>)</span>&#123;       <span class="comment">//调用归并函数</span></span><br><span class="line">            <span class="built_in">console</span>.log(value);</span><br><span class="line">        &#125;,<span class="literal">null</span>)</span><br></pre></td></tr></table></figure><h2 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> reverse</h2><h4 id="功能-18"><a class="markdownIt-Anchor" href="#功能-18"></a> 功能：</h4><h4 id="倒序不排序原数组改变返回原数组"><a class="markdownIt-Anchor" href="#倒序不排序原数组改变返回原数组"></a> * 倒序，不排序，原数组改变，返回原数组</h4><h4 id="使用方法-18"><a class="markdownIt-Anchor" href="#使用方法-18"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">9</span>];</span><br><span class="line">arr.reverse();</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h2 id="reverse-重构"><a class="markdownIt-Anchor" href="#reverse-重构"></a> reverse 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reverse</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> len=<span class="built_in">parseInt</span>(arr.length/<span class="number">2</span>);                 <span class="comment">//长度为数组长度的1/2</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;  <span class="comment">//循环一数组1/2的长度</span></span><br><span class="line">                <span class="comment">// arr[arr.length-1-i]=arr[i];   </span></span><br><span class="line">                <span class="keyword">var</span> temp=arr[arr.length<span class="number">-1</span>-i];   <span class="comment">//将最后一位赋值给临时变量</span></span><br><span class="line">                arr[arr.length<span class="number">-1</span>-i]=arr[i];   <span class="comment">//将第一位赋值给最后一位</span></span><br><span class="line">                arr[i]=temp;  <span class="comment">//将临时变量的值赋给第一位</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> arr; <span class="comment">//返回这个数组</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        reverse(arr);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h2 id="sort"><a class="markdownIt-Anchor" href="#sort"></a> sort</h2><h4 id="功能-19"><a class="markdownIt-Anchor" href="#功能-19"></a> 功能：</h4><h4 id="用于对数组的元素进行排序"><a class="markdownIt-Anchor" href="#用于对数组的元素进行排序"></a> *用于对数组的元素进行排序</h4><h4 id="使用方法-19"><a class="markdownIt-Anchor" href="#使用方法-19"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">arrayObject.sort(sortby);</span><br><span class="line">参数描述</span><br><span class="line">sortby  可选。规定排序顺序。必须是函数。</span><br><span class="line"></span><br><span class="line">arr.sort();   <span class="comment">//按照ASCII码值进行排序</span></span><br><span class="line"> arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a-b;<span class="comment">//从大到小排列</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h2 id="sort重构"><a class="markdownIt-Anchor" href="#sort重构"></a> sort重构</h2><h4 id="冒泡排序"><a class="markdownIt-Anchor" href="#冒泡排序"></a> 冒泡排序：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr=[];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">            arr.push(i);           <span class="comment">//创建一个1-100的数组</span></span><br><span class="line">        &#125;</span><br><span class="line">        arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Math</span>.random()<span class="number">-0.5</span>;  <span class="comment">//将数组的元素设为随机数</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 冒泡排序</span></span><br><span class="line"><span class="comment">// 1、从后向前循环</span></span><br><span class="line"><span class="comment">// 2、内部从前向后循环到外层变量</span></span><br><span class="line"><span class="comment">// 3、判断前值是否大于后值，交换</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">sort1</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> len=arr.length;           <span class="comment">//循环数组的长度</span></span><br><span class="line">            <span class="keyword">while</span>(len&gt;<span class="number">0</span>)&#123;   <span class="comment">//当len小于0时停止循环</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;  <span class="comment">//循环的长度不断减小</span></span><br><span class="line">                    <span class="keyword">if</span>(arr[i]&gt;arr[i+<span class="number">1</span>])&#123;  <span class="comment">//当第一位比第二位大时</span></span><br><span class="line">                        <span class="keyword">var</span> temp=arr[i];  <span class="comment">//当前元素存放到临时变量中</span></span><br><span class="line">                        arr[i]=arr[i+<span class="number">1</span>];  <span class="comment">//将下一位元素赋值给当前元素</span></span><br><span class="line">                        arr[i+<span class="number">1</span>]=temp;  <span class="comment">//将临时变量赋给</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                len--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">           sort1(arr);</span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h4 id="选择排序"><a class="markdownIt-Anchor" href="#选择排序"></a> 选择排序</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">            arr.push(i);           <span class="comment">//创建一个1-100的数组</span></span><br><span class="line">        &#125;</span><br><span class="line">        arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Math</span>.random()<span class="number">-0.5</span>;  <span class="comment">//将数组的元素设为随机数</span></span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 选择排序</span></span><br><span class="line"><span class="comment">// 先找出最小或者最大的索引值，然后用当前的下标的元素与这个最小的元素交换</span></span><br><span class="line"><span class="comment">// 1、遍历数组</span></span><br><span class="line"><span class="comment">// 2、设置最小的索引值为当前的索引值</span></span><br><span class="line"><span class="comment">// 3、从当前的下一项开始遍历到数组的尾部</span></span><br><span class="line"><span class="comment">// 4、判断所有遍历的值中最小的值得索引值</span></span><br><span class="line"> <span class="comment">// 5、交换当前值和最小索引值的元素</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">sort2</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> minIndex;           <span class="comment">//设置一个最小数的变量</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;  <span class="comment">//从第一个数开始循环</span></span><br><span class="line">                minIndex=i;        <span class="comment">//将第一个数预设为最小数</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> j=i+<span class="number">1</span>;j&lt;arr.length;j++)&#123;    <span class="comment">//从第二个数开始循环</span></span><br><span class="line">                    minIndex=arr[minIndex]&lt;arr[j] ? minIndex : j;  <span class="comment">//比较前一位与后一位的值  将小的值存放到minIndex中</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> temp=arr[i];<span class="comment">//将两个值进行交换  将最小的值存放在a[minIndex]中</span></span><br><span class="line">                arr[i]=arr[minIndex];</span><br><span class="line">                arr[minIndex]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort2(arr);</span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h4 id="快速排序"><a class="markdownIt-Anchor" href="#快速排序"></a> 快速排序</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">10</span>];</span><br><span class="line">        arr=sort3(arr);</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sort3</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr.length&lt;=<span class="number">1</span>) <span class="keyword">return</span> arr;</span><br><span class="line">            <span class="keyword">var</span> left=[];</span><br><span class="line">            <span class="keyword">var</span> right=[];</span><br><span class="line">            <span class="keyword">var</span> item=arr.splice(<span class="built_in">parseInt</span>(arr.length/<span class="number">2</span>),<span class="number">1</span>)[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[i]&lt;item) left.push(arr[i]);</span><br><span class="line">                <span class="keyword">else</span> right.push(arr[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> arr1=sort3(left).concat(item,sort3(right));</span><br><span class="line">            <span class="keyword">return</span> arr1;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数组方法的重构&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组方法的重构&quot;&gt;&lt;/a&gt; 数组方法的重构&lt;/h1&gt;
&lt;h2 id=&quot;push&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#push&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="数组" scheme="https://cooli-willson.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="重构" scheme="https://cooli-willson.github.io/tags/%E9%87%8D%E6%9E%84/"/>
    
  </entry>
  
</feed>
