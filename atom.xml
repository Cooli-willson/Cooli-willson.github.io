<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wilson&#39;bolg</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cooli-willson.github.io/"/>
  <updated>2020-01-22T14:34:39.677Z</updated>
  <id>https://cooli-willson.github.io/</id>
  
  <author>
    <name>Wilson</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>4.javascript 基础-函数</title>
    <link href="https://cooli-willson.github.io/2020/01/22/4.js%E5%9F%BA%E7%A1%80-%E5%87%BD%E6%95%B0/"/>
    <id>https://cooli-willson.github.io/2020/01/22/4.js%E5%9F%BA%E7%A1%80-%E5%87%BD%E6%95%B0/</id>
    <published>2020-01-22T14:20:23.154Z</published>
    <updated>2020-01-22T14:34:39.677Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h1><h3 id="函数的创建"><a class="markdownIt-Anchor" href="#函数的创建"></a> 函数的创建</h3><ul><li>命名函数创建</li><li>当前函数最在script标签创建时，优先将该函数储存在堆中，并且函数名储存在栈中</li><li>当前这个代码所在的script标签的上面的script的标签中任意函数和全局变量都是可以被调用的</li><li>但是当前代码所在的script标签下面的script的标签中函数和全局变量是不可以调用的</li><li>函数名：驼峰式命名法，首字母一般都是小写，如果该函数是构造函数，函数名首字母需要大写</li><li>函数后面的（）是执行当前函数需要传入参数内容</li><li>{}里面是函数的语句块，当执行函数时，该语句的内容就会被执行</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a+b);</span><br><span class="line">        &#125;</span><br><span class="line">          fn(<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><p><strong>匿名函数</strong></p><ul><li>代码运行到定义匿名函数后才可以调用该匿名函数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fn=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         &#125;</span><br><span class="line">         (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="comment">// 自执行函数</span></span><br><span class="line">         &#125;)();</span><br></pre></td></tr></table></figure><h3 id="函数的作用域"><a class="markdownIt-Anchor" href="#函数的作用域"></a> 函数的作用域</h3><p><strong>函数内与函数外的变量</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数外的变量，在函数中可以调用到</span></span><br><span class="line">         <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a);</span><br><span class="line">        &#125;</span><br><span class="line">        fn();</span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line">            <span class="comment">// 函数内定义的变量不能被函数外调用</span></span><br><span class="line">             <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">                <span class="comment">//  在函数内使用var定义的变量就是局部变量</span></span><br><span class="line">                <span class="comment">// 在函数外用var定义的变量就是全局变量。</span></span><br><span class="line">                <span class="comment">// 不使用var直接给一个变量赋值就是相当于给window增加一个属性，那么这个属性也是全局变量</span></span><br><span class="line">             &#125;</span><br><span class="line">             fn();</span><br><span class="line">             <span class="built_in">console</span>.log(a);</span><br><span class="line">        <span class="comment">//  var是定义变量，如果在函数中没有用var定义变量，直接使用变量，该变量是全局变量</span></span><br><span class="line">             <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                  a=<span class="number">10</span>;</span><br><span class="line">             &#125;</span><br><span class="line">             fn();</span><br><span class="line">             <span class="built_in">console</span>.log(a);</span><br><span class="line">        <span class="comment">//  this===window</span></span><br><span class="line">        <span class="comment">// var b=10;</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           <span class="comment">//  window被省略了,如果没有使用var定义变量，就意味着直接在window对象下增加这个属性</span></span><br><span class="line">             a=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fn();</span><br><span class="line">        <span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p><strong>局部变量与全局变量</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="keyword">var</span> a=<span class="number">5</span>;</span><br><span class="line">             <span class="built_in">console</span>.log(a);<span class="comment">//5</span></span><br><span class="line">            <span class="comment">//  有局部变量时，先调用局部变量，没有局部变量才带哦用全局变量</span></span><br><span class="line">         &#125;</span><br><span class="line">         fn();</span><br><span class="line">         <span class="built_in">console</span>.log(a);<span class="comment">//10</span></span><br><span class="line">          <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">          <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="comment">// 在函数中任意位置使用var定义的变量，在该函数的任意位置都认为该变量是局部变量</span></span><br><span class="line">             <span class="built_in">console</span>.log(a);<span class="comment">//undefined</span></span><br><span class="line">              <span class="keyword">var</span> a=<span class="number">5</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          fn();</span><br><span class="line">          <span class="built_in">console</span>.log(a);<span class="comment">//10</span></span><br><span class="line">         <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="keyword">var</span> a=<span class="number">20</span>;</span><br><span class="line">            <span class="comment">// console.log(a+window.a);</span></span><br><span class="line">            <span class="built_in">console</span>.log(a+<span class="keyword">this</span>.a);</span><br><span class="line">         &#125;</span><br><span class="line">         fn();</span><br><span class="line">        <span class="comment">// function fn(a)&#123;</span></span><br><span class="line">        <span class="comment">//     // console.log(a);</span></span><br><span class="line">        <span class="comment">//     // 参数就是局部变量</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// fn(5);</span></span><br><span class="line">        </span><br><span class="line">           <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">           <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log(a);<span class="comment">//5</span></span><br><span class="line">               <span class="keyword">var</span> a=<span class="number">20</span>;</span><br><span class="line">            <span class="comment">//    这里相当于重新定义了一个局部变量a</span></span><br><span class="line">           &#125;</span><br><span class="line">           fn(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">5</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">var</span> b=<span class="number">20</span>;</span><br><span class="line">                 <span class="keyword">var</span> a=<span class="number">100</span>;</span><br><span class="line">                 <span class="built_in">console</span>.log(a);</span><br><span class="line">            &#125;</span><br><span class="line">            fn1();</span><br><span class="line">            <span class="built_in">console</span>.log(b);</span><br><span class="line">        &#125;</span><br><span class="line">        fn();</span><br><span class="line">        a(a);<span class="comment">//a都是全局变量，下面a=10还没有运行，所以在这里全局变量就是函数a,我们把函数a当前参数填入</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">10</span>;<span class="comment">//覆盖了函数a，函数a在这里也是全局变量</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a);</span><br><span class="line">            <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// a(a);</span></span><br><span class="line">        </span><br><span class="line">          <span class="keyword">var</span> a;</span><br><span class="line">          a(a);        </span><br><span class="line">          a=<span class="number">5</span>;</span><br><span class="line">          <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">              <span class="built_in">console</span>.log(a);</span><br><span class="line">              <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure><h3 id="函数的参数"><a class="markdownIt-Anchor" href="#函数的参数"></a> 函数的参数</h3><ul><li>参数可以时任意内容，如没有对应填入，该参数就是undefined、</li><li>执行函数时，填入的参数就相当于给参数赋值</li><li>js是一个弱类型语言，因此，参数不能强制约定类型</li><li>ES5中不能和设置参数的默认值</li><li>执行函数时填入值与函数参数顺序时一一对应关系</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">              <span class="comment">// 相当于给obj赋值一个o，obj和o的引用地址相同</span></span><br><span class="line">              <span class="comment">// 当修改obj的属性时，全局的o属性也会被修改</span></span><br><span class="line">              obj.a=<span class="number">10</span>;</span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          <span class="keyword">var</span> o=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">          fn(o);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// 重新设置了obj的新的引用地址</span></span><br><span class="line">            obj=&#123;</span><br><span class="line">                a:<span class="number">3</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> o=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        fn(o);</span><br></pre></td></tr></table></figure><p><strong>回调函数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">            f(a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a+<span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a+<span class="number">100</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn3</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a+<span class="number">1000</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">      </span><br><span class="line">        fn(fn2);</span><br></pre></td></tr></table></figure><p><strong>如果参数的数量不确定，就不设置参数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMaxValue</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              <span class="comment">// console.log(arguments);//ES5以上版本时尽量少用,arguments参数集</span></span><br><span class="line">              <span class="keyword">if</span>(<span class="built_in">arguments</span>.length===<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">              <span class="keyword">var</span> max=<span class="built_in">arguments</span>[<span class="number">0</span>];</span><br><span class="line">              <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;<span class="built_in">arguments</span>.length;i++)&#123;</span><br><span class="line">                  max=max&gt;<span class="built_in">arguments</span>[i] ? max : <span class="built_in">arguments</span>[i];</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="built_in">console</span>.log(max);</span><br><span class="line">          &#125;</span><br><span class="line">          getMaxValue(<span class="number">1</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">10</span>);</span><br><span class="line">           <span class="function"><span class="keyword">function</span> <span class="title">getMaxValue</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">               <span class="comment">// console.log(arguments.callee);//该函数自己</span></span><br><span class="line">               <span class="comment">// console.log(arguments.callee.caller);</span></span><br><span class="line">           &#125;</span><br><span class="line">   </span><br><span class="line">           getMaxValue(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>);</span><br></pre></td></tr></table></figure><p><strong>递归</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span></span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             i++;</span><br><span class="line">             <span class="keyword">if</span>(i&lt;<span class="number">10</span>) fn();</span><br><span class="line">         &#125;</span><br><span class="line">         fn();</span><br><span class="line">         <span class="built_in">console</span>.log(i);</span><br><span class="line">        </span><br><span class="line">                <span class="comment">// 用于匿名函数中调用自身函数</span></span><br><span class="line">                <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">                (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    i++;</span><br><span class="line">                    <span class="keyword">if</span>(i&lt;<span class="number">10</span>) <span class="built_in">arguments</span>.callee();</span><br><span class="line">                &#125;)();</span><br><span class="line">        </span><br><span class="line">                <span class="built_in">console</span>.log(i);</span><br></pre></td></tr></table></figure><p><strong>函数之间的调用</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">                <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"a"</span>);</span><br><span class="line">                    f();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="function"><span class="keyword">function</span> <span class="title">fn3</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"c"</span>);</span><br><span class="line">                    f();</span><br><span class="line">                &#125;</span><br><span class="line">        </span><br><span class="line">                <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="comment">// 调用当前函数的环境函数</span></span><br><span class="line">                    <span class="comment">// console.log(arguments.callee.caller);</span></span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"b"</span>);</span><br><span class="line">                    i++;</span><br><span class="line">                    <span class="keyword">if</span>(i&lt;<span class="number">10</span>) <span class="built_in">arguments</span>.callee.caller(<span class="built_in">arguments</span>.callee);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 耦合</span></span><br><span class="line">        </span><br><span class="line">                fn3(fn2);</span><br></pre></td></tr></table></figure><p><strong>随机生成颜色大小不同的50个方块</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> w, c;</span><br><span class="line">         init();</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">                 w = <span class="built_in">Math</span>.random() * <span class="number">50</span> + <span class="number">50</span>;</span><br><span class="line">                 c = randomColor();</span><br><span class="line">                 createDiv(w, w, c);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">createDiv</span>(<span class="params">_width, _height, _color</span>) </span>&#123;</span><br><span class="line">             <span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line">             str += <span class="string">"&lt;div style='"</span>;</span><br><span class="line">             str += <span class="string">"width:"</span> + _width + <span class="string">"px;"</span>;</span><br><span class="line">             str += <span class="string">"height:"</span> + _height + <span class="string">"px;"</span>;</span><br><span class="line">             str += <span class="string">"background-color:"</span> + _color + <span class="string">";"</span>;</span><br><span class="line">             str += <span class="string">"position:absolute;"</span>;</span><br><span class="line">             str += <span class="string">"left:"</span> + <span class="built_in">Math</span>.random() * <span class="number">1000</span> + <span class="string">"px;"</span>;</span><br><span class="line">             str += <span class="string">"top:"</span> + <span class="built_in">Math</span>.random() * <span class="number">600</span> + <span class="string">"px;"</span>;</span><br><span class="line">             str += <span class="string">"'&gt;&lt;/div&gt;"</span>;</span><br><span class="line">             <span class="built_in">document</span>.write(str);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">randomColor</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">             <span class="keyword">var</span> color = <span class="string">"#"</span>;</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">                 color += <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">16</span>).toString(<span class="number">16</span>);</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">return</span> color;</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><h3 id="return"><a class="markdownIt-Anchor" href="#return"></a> return</h3><p><strong>点击切换div的颜色</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">            <span class="keyword">if</span>(n&lt;<span class="number">5</span>) <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fn(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">// 把id是div0的元素获取成为DOM变量</span></span><br><span class="line">        <span class="keyword">var</span> div=<span class="built_in">document</span>.getElementById(<span class="string">"div0"</span>);</span><br><span class="line">        <span class="comment">// 设置行内样式</span></span><br><span class="line">        div.style.width=<span class="string">"100px"</span>;</span><br><span class="line">        div.style.height=<span class="string">"100px"</span>;</span><br><span class="line">        div.style.backgroundColor=<span class="string">"red"</span>;</span><br><span class="line">        <span class="keyword">var</span> bool=<span class="literal">false</span>;</span><br><span class="line">          div.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              bool=!bool;</span><br><span class="line">              div.style.backgroundColor=bool ? <span class="string">"blue"</span> :<span class="string">"red"</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        div.onclick=clickHandler;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            bool=!bool;</span><br><span class="line">            div.style.backgroundColor=bool ? <span class="string">"blue"</span> :<span class="string">"red"</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="定时器"><a class="markdownIt-Anchor" href="#定时器"></a> <strong>定时器</strong></h4><ul><li>setInterval() ：按照指定的周期（以毫秒计）来调用函数或计算表达式。方法会不停地调用函数，直到 clearInterval() 被调用或窗口被关闭。</li><li>setTimeout() ：在指定的毫秒数后调用函数或计算表达式。</li></ul><h4 id="setinterval"><a class="markdownIt-Anchor" href="#setinterval"></a> setInterval()</h4><p><strong>语法</strong></p><blockquote><p>setInterval(code,millisec)</p></blockquote><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>code</td><td>必须。要调用的函数或要执行的代码串。</td></tr><tr><td>millisec</td><td>必须。周期性执行或调用code之间的时间间隔，以毫秒计</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">// 间隔多长时间执行该函数，时间是毫秒数</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;,<span class="number">1000</span>);</span><br><span class="line">          <span class="keyword">var</span> time=<span class="number">0</span>;</span><br><span class="line">          <span class="comment">// setInterval(执行的函数，间隔的时间);返回一个数值，可以根据这个数值清楚执行函数</span></span><br><span class="line">         <span class="keyword">var</span> ids=setInterval(animation,<span class="number">1000</span>);</span><br><span class="line">          </span><br><span class="line">          <span class="function"><span class="keyword">function</span> <span class="title">animation</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              time++;</span><br><span class="line">              <span class="keyword">if</span>(time&gt;<span class="number">5</span>) clearInterval(ids);<span class="comment">//clearInterval(创建时间间隔id) 清楚时间间隔执行</span></span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure><h4 id="settimeout"><a class="markdownIt-Anchor" href="#settimeout"></a> setTimeout()</h4><p><strong>语法</strong></p><blockquote><p>setTimeout(code,millisec)</p></blockquote><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>code</td><td>必需。要调用的函数后要执行的javascript代码串</td></tr><tr><td>millisec</td><td>在执行代码浅需要等待的毫秒数</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 多少时间后执行该函数</span></span><br><span class="line">        <span class="comment">// setTimeout(执行的函数，间隔的时间);//多长时间后执行</span></span><br><span class="line">         <span class="keyword">var</span> ids=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">              clearTimeout(ids);<span class="comment">//清除时间间隔，每次用完必须清除</span></span><br><span class="line">          &#125;,<span class="number">5000</span>);</span><br><span class="line">        <span class="comment">// setInterval和setTimeout第三个参数都是可以给执行函数传入参数的</span></span><br><span class="line">        <span class="keyword">var</span> ids=setInterval(animation,<span class="number">1000</span>,<span class="number">5</span>);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">animation</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>return 阻断</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> disc=<span class="number">0</span>,bool=<span class="literal">false</span>;</span><br><span class="line">        init();</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">"div0"</span>);</span><br><span class="line">            div.style.width = <span class="string">"50px"</span>;</span><br><span class="line">            div.style.height = <span class="string">"50px"</span>;</span><br><span class="line">            div.style.backgroundColor = <span class="string">"red"</span>;</span><br><span class="line">            div.style.position = <span class="string">"absolute"</span>;</span><br><span class="line">            div.style.left=<span class="string">"0px"</span>;</span><br><span class="line">            div.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                bool=!bool;</span><br><span class="line">            &#125;</span><br><span class="line">            setInterval(anmiation,<span class="number">16</span>,div);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">anmiation</span>(<span class="params">div</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!bool) <span class="keyword">return</span>;</span><br><span class="line">            disc++;</span><br><span class="line">            div.style.left=disc+<span class="string">"px"</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>return break continue的区别</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i===<span class="number">5</span>) <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"a"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        fn();</span><br><span class="line">        <span class="comment">// return 有时候可以替代break</span></span><br><span class="line">        <span class="comment">// return 返回值</span></span><br><span class="line">        <span class="comment">// 可以允许函数返回一个值，仅一个。。</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"a"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 函数在执行时，将会返回一个结果，如果函数中没有return，就会返回undefined</span></span><br><span class="line">        <span class="keyword">var</span> s=fn();</span><br><span class="line">        <span class="built_in">console</span>.log(s);</span><br></pre></td></tr></table></figure><p><strong>随机颜色</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomColor</span>(<span class="params">alpha</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// 如果没有参数，随机</span></span><br><span class="line">            alpha=alpha==<span class="literal">undefined</span> ? <span class="built_in">Math</span>.random().toFixed(<span class="number">2</span>) : alpha;</span><br><span class="line">            <span class="comment">// 传入的参数转换为数值</span></span><br><span class="line">            alpha=<span class="built_in">Number</span>(alpha);</span><br><span class="line">            <span class="comment">// 如果传入的参数是非数值，就让透明度为1</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isNaN</span>(alpha))alpha=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> color=<span class="string">"rgba("</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">                color+=<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">256</span>)+<span class="string">","</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            color+=alpha+<span class="string">")"</span>;</span><br><span class="line">            <span class="keyword">return</span> color;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(randomColor(<span class="literal">true</span>));</span><br></pre></td></tr></table></figure><p><strong>将数字转换为汉字</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getCNNumber</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(n&lt;<span class="number">0</span> || n&gt;<span class="number">1000</span>) <span class="keyword">return</span> <span class="string">"错误的消息"</span>;</span><br><span class="line">            <span class="keyword">if</span>(n&lt;<span class="number">10</span>) <span class="keyword">return</span> arr[n];</span><br><span class="line">            <span class="keyword">if</span>(n===<span class="number">10</span>) <span class="keyword">return</span> <span class="string">"十"</span>;</span><br><span class="line">            <span class="keyword">if</span>(n&lt;<span class="number">20</span>) <span class="keyword">return</span> <span class="string">"十"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">1</span>]];</span><br><span class="line">            <span class="keyword">if</span>(n&gt;=<span class="number">100</span> &amp;&amp; n%<span class="number">100</span>===<span class="number">0</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"百"</span>;</span><br><span class="line">            <span class="keyword">if</span>(n&gt;<span class="number">100</span> &amp;&amp; n%<span class="number">10</span>===<span class="number">0</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"百"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">1</span>]]+<span class="string">"十"</span>;</span><br><span class="line">            <span class="keyword">if</span>(n%<span class="number">10</span>===<span class="number">0</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"十"</span>;</span><br><span class="line">            <span class="keyword">if</span>(n&lt;<span class="number">100</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"十"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">1</span>]];</span><br><span class="line">            <span class="keyword">if</span>(n%<span class="number">100</span>&lt;<span class="number">10</span>) <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"百零"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">2</span>]];</span><br><span class="line">            <span class="keyword">return</span> arr[<span class="built_in">String</span>(n)[<span class="number">0</span>]]+<span class="string">"百"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">1</span>]]+<span class="string">"十"</span>+arr[<span class="built_in">String</span>(n)[<span class="number">2</span>]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(getCNNumber(<span class="number">345</span>));</span><br></pre></td></tr></table></figure><p><strong>返回对象可以返回多个值</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">w,h</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// var perimeter=(w+h)*2;</span></span><br><span class="line">            <span class="comment">// var area=w*h;</span></span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                perimeter:(w+h)*<span class="number">2</span>,</span><br><span class="line">                area:w*h</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="回调函数"><a class="markdownIt-Anchor" href="#回调函数"></a> 回调函数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">callBack</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        setInterval(callBack,<span class="number">1000</span>);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">            f();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"aaa"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        fn1(fn2);</span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"a"</span>);</span><br><span class="line">            f(fn1);</span><br><span class="line">            <span class="built_in">console</span>.log(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"b"</span>);</span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">6000</span>) f(fn2);</span><br><span class="line">        &#125;</span><br><span class="line">        fn1(fn2);</span><br><span class="line">        <span class="comment">// 堆栈溢出 递归或者回调的次数过多，没有阻止递归或者回调的条件</span></span><br></pre></td></tr></table></figure><p><strong>通过回调函数实现红绿灯功能</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getLight</span>(<span class="params">first,second,third</span>)</span>&#123;</span><br><span class="line">            first(second,third);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getRedLight</span>(<span class="params">fn,fn1</span>)</span>&#123;</span><br><span class="line">           <span class="keyword">var</span> f=<span class="built_in">arguments</span>.callee;</span><br><span class="line">            <span class="keyword">var</span> ids=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"红灯"</span>);</span><br><span class="line">                clearTimeout(ids);</span><br><span class="line">                fn(fn1,f);</span><br><span class="line">            &#125;,<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getYellowLight</span>(<span class="params">fn,fn1</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> f=<span class="built_in">arguments</span>.callee;</span><br><span class="line">            <span class="keyword">var</span> ids=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"黄灯"</span>);</span><br><span class="line">                clearTimeout(ids);</span><br><span class="line">                fn(fn1,f);</span><br><span class="line">            &#125;,<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getGreenLight</span>(<span class="params">fn,fn1</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> f=<span class="built_in">arguments</span>.callee;</span><br><span class="line">            <span class="keyword">var</span> ids=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"绿灯"</span>);</span><br><span class="line">                clearTimeout(ids);</span><br><span class="line">                fn(fn1,f);</span><br><span class="line">            &#125;,<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// getRedLight(getYellowLight,getGreenLight);</span></span><br><span class="line">        getLight(getGreenLight,getYellowLight,getRedLight)\</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;函数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#函数&quot;&gt;&lt;/a&gt; 函数&lt;/h1&gt;
&lt;h3 id=&quot;函数的创建&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#函数的创建&quot;&gt;&lt;/a&gt; 函数的创建&lt;/h3&gt;
&lt;
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="函数" scheme="https://cooli-willson.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>3.js基础-循环和对象</title>
    <link href="https://cooli-willson.github.io/2020/01/22/3.js%E5%9F%BA%E7%A1%80-%E5%BE%AA%E7%8E%AF%E5%92%8C%E5%AF%B9%E8%B1%A1/"/>
    <id>https://cooli-willson.github.io/2020/01/22/3.js%E5%9F%BA%E7%A1%80-%E5%BE%AA%E7%8E%AF%E5%92%8C%E5%AF%B9%E8%B1%A1/</id>
    <published>2020-01-22T07:51:40.150Z</published>
    <updated>2020-01-22T14:23:07.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="js基础-循环和对象"><a class="markdownIt-Anchor" href="#js基础-循环和对象"></a> js基础-循环和对象</h1><h3 id="三目运算符"><a class="markdownIt-Anchor" href="#三目运算符"></a> 三目运算符</h3><p><strong>条件 ？ 条件是true返回的结果  ：  条件是false时返回的结果</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> max=<span class="number">3</span>&gt;<span class="number">4</span> ? <span class="number">3</span> : <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> s=--i ? i++ : ++i;</span><br><span class="line">        <span class="built_in">console</span>.log(s);</span><br><span class="line">        <span class="keyword">var</span>  a=<span class="number">6</span>,</span><br><span class="line">            b=<span class="number">5</span>,</span><br><span class="line">            c=<span class="number">5</span>;</span><br><span class="line">        <span class="keyword">var</span> max=a&gt;b ? (a&gt;c ? a : (c&gt;b ? c : b)) : b&gt;c ? b : (c&gt;a ? c : a);</span><br><span class="line">        <span class="built_in">console</span>.log(max);</span><br><span class="line">        <span class="keyword">var</span> s=<span class="number">3</span>&gt;<span class="number">5</span> ? <span class="literal">false</span> : <span class="literal">true</span>;<span class="comment">//返回布尔值的三元运算时，不用些三元方式</span></span><br><span class="line">        <span class="keyword">var</span> s=<span class="number">3</span>&gt;<span class="number">5</span>;</span><br><span class="line">        <span class="keyword">var</span> obj= s ? s : <span class="number">5</span>;<span class="comment">//判断一个值是否存在，如果不存在重新赋值，或</span></span><br><span class="line">        <span class="keyword">var</span> obj=s || <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">var</span> s= s===<span class="number">0</span> ? <span class="number">0</span> : <span class="number">5</span>;<span class="comment">//判断是否是0 如果不是0，就返回另一个值，</span></span><br><span class="line">        <span class="keyword">var</span> s= s &amp;&amp; <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="条件语句"><a class="markdownIt-Anchor" href="#条件语句"></a> 条件语句</h3><p><strong>if语句</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="keyword">var</span> s=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">if</span>(s&gt;<span class="number">5</span>)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s&lt;<span class="number">10</span>)&#123;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s===<span class="number">0</span>)&#123;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// if(隐式转换为布尔值)&#123;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// 条件中的结果不是 "",false,0,NaN,undefined,null就可以进入条件</span></span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> s = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(++i)&#123;</span><br><span class="line">            s=i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i+<span class="number">1</span>!==<span class="number">0</span>)&#123;</span><br><span class="line">            s=i+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s=++i);</span><br><span class="line">        <span class="built_in">console</span>.log(s,i);</span><br><span class="line">        <span class="keyword">if</span>(i+<span class="number">1</span>!==<span class="number">0</span>) s=i+<span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 如果条件语句块只有一句话的时候，可以省略｛｝</span></span><br><span class="line">        <span class="keyword">if</span>(i===<span class="number">0</span>) i=i+<span class="number">2</span>;</span><br><span class="line">        i=i+<span class="number">3</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">0</span>) i=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i===<span class="number">0</span>) i=<span class="number">5</span>;</span><br><span class="line">        <span class="keyword">else</span> i=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>()&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 不管是否满足上面的条件，都需要判断下面的这个条件</span></span><br><span class="line">        <span class="keyword">if</span>()&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>()&#123;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>()&#123;</span><br><span class="line">        <span class="comment">// 如果上面的条件满足，就不会判断下面这个条件</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 配合函数中的return将会很少使用到if else if</span></span><br></pre></td></tr></table></figure><p><strong>switch case 语句</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断switch中表达式是否（绝对===）等于case中的值</span></span><br><span class="line">           <span class="keyword">var</span> s=<span class="number">10</span>;</span><br><span class="line">           <span class="keyword">switch</span>(s%<span class="number">10</span>)&#123;</span><br><span class="line">               <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">               <span class="comment">// 语句1</span></span><br><span class="line">               <span class="keyword">break</span>;<span class="comment">//break作用是跳出switch语句块，从break后面的语句块将不再执行</span></span><br><span class="line">                   <span class="comment">// 但是如果没有break,仍然在不判断结果的情况下执行一个case的语句块，这叫穿越</span></span><br><span class="line">               <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                 <span class="comment">// 语句2</span></span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">               <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                 <span class="comment">// 语句3</span></span><br><span class="line">               <span class="keyword">break</span>; </span><br><span class="line">               <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                 <span class="comment">// 语句4</span></span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">        <span class="comment">// switch 或者穿越</span></span><br><span class="line">         <span class="keyword">var</span> s=<span class="number">10</span>;</span><br><span class="line">         <span class="keyword">switch</span>(s%<span class="number">10</span>)&#123;</span><br><span class="line">             <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">             <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">             <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">             <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">             <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">             s++;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line">          <span class="keyword">var</span> s=<span class="number">10</span>;<span class="comment">//累积穿越</span></span><br><span class="line">          <span class="keyword">switch</span>(s%<span class="number">10</span>)&#123;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">              s=<span class="number">100</span>;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">              <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">              <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">              <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">              s--;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">         <span class="keyword">var</span> s=<span class="number">95</span>;</span><br><span class="line">         <span class="keyword">switch</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">             <span class="keyword">case</span> s&gt;<span class="number">90</span>:</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">             <span class="keyword">case</span> s&gt;<span class="number">80</span>:</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">             <span class="keyword">case</span> s&gt;<span class="number">70</span>:</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><p><strong>状态机</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">          <span class="keyword">var</span> value=prompt(<span class="string">"请输入你的成绩"</span>);</span><br><span class="line">        <span class="comment">//   console.log(value);</span></span><br><span class="line">        <span class="comment">//   document.write('你好');</span></span><br><span class="line">        <span class="keyword">var</span> value=<span class="built_in">parseInt</span>(prompt(<span class="string">"请输入你的成绩"</span>));</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">isNaN</span>(value))&#123;</span><br><span class="line">            <span class="keyword">if</span>(value&gt;<span class="number">100</span>) <span class="built_in">document</span>.write(<span class="string">"输入错误"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(value&gt;=<span class="number">90</span>) <span class="built_in">document</span>.write(<span class="string">"A"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(value&gt;=<span class="number">80</span>) <span class="built_in">document</span>.write(<span class="string">"B"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(value&gt;=<span class="number">70</span>) <span class="built_in">document</span>.write(<span class="string">"C"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(value&gt;=<span class="number">60</span>) <span class="built_in">document</span>.write(<span class="string">"D"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(value&gt;=<span class="number">0</span>) <span class="built_in">document</span>.write(<span class="string">"E"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">document</span>.write(<span class="string">"输入错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> value = <span class="built_in">parseInt</span>(prompt(<span class="string">"请输入你的成绩"</span>));</span><br><span class="line">        <span class="keyword">if</span> (value === <span class="number">100</span>) <span class="built_in">document</span>.write(<span class="string">"A"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (value &gt;= <span class="number">0</span> &amp;&amp; value &lt; <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (<span class="built_in">parseInt</span>(value / <span class="number">10</span>)) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                    <span class="built_in">document</span>.write(<span class="string">"A"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                    <span class="built_in">document</span>.write(<span class="string">"B"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                    <span class="built_in">document</span>.write(<span class="string">"C"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    <span class="built_in">document</span>.write(<span class="string">"D"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="built_in">document</span>.write(<span class="string">"E"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"输出错误"</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="循环语句"><a class="markdownIt-Anchor" href="#循环语句"></a> 循环语句</h3><p><strong>for 循环</strong></p><blockquote><p>循环的目的是为了重复执行｛｝内的语句</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"a"</span>);</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>循环的必须条件</p></blockquote><ul><li>必须由起始值。</li><li>必须有一个循环条件</li><li>须有一个不断向条件外处理的语句</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> str=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        str+=<span class="string">"&lt;ul&gt;"</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            str+=<span class="string">"&lt;li&gt;项目"</span>+i+<span class="string">"&lt;/li&gt;"</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        str+=<span class="string">"&lt;/ul&gt;"</span>;</span><br><span class="line">        <span class="built_in">document</span>.write(str);</span><br></pre></td></tr></table></figure><blockquote><p>循环是同步的，如果循环较长就会卡顿</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">console</span>.log(<span class="string">"a"</span>);</span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> s=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">100000000000</span>)&#123;</span><br><span class="line">            s+=i;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"b"</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(s);</span><br></pre></td></tr></table></figure><blockquote><p>深度循环</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">             value:<span class="number">1</span>,<span class="attr">next</span>:&#123;</span><br><span class="line">                 value:<span class="number">2</span>,<span class="attr">next</span>:&#123;</span><br><span class="line">                     value:<span class="number">3</span>,<span class="attr">next</span>:&#123;</span><br><span class="line">                         value:<span class="number">4</span>,<span class="attr">next</span>:&#123;</span><br><span class="line">                             value:<span class="number">5</span>,<span class="attr">next</span>:&#123;</span><br><span class="line">                                 value:<span class="number">6</span>,<span class="attr">next</span>:&#123;</span><br><span class="line">                                     value:<span class="number">7</span></span><br><span class="line">                                 &#125;</span><br><span class="line">                             &#125;</span><br><span class="line">                         &#125;</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="built_in">console</span>.log(obj.value);</span><br><span class="line">         <span class="keyword">while</span>(obj=obj.next)&#123;</span><br><span class="line">             <span class="built_in">console</span>.log(obj.value);</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><blockquote><p>轮盘赌算法(循环中的break)</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> num=<span class="number">0</span>;</span><br><span class="line">          <span class="comment">// 跳出，在循环中如果需要跳出循环（不再继续循环了） break</span></span><br><span class="line">          <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">              num++;</span><br><span class="line">              <span class="keyword">if</span>(<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">10</span>)===<span class="number">5</span>) <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="built_in">console</span>.log(num);</span><br></pre></td></tr></table></figure><blockquote><p>循环中的continue</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span>  str=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> num=<span class="number">47</span>;</span><br><span class="line">        <span class="keyword">while</span>(num&lt;<span class="number">122</span>)&#123;</span><br><span class="line">            num++;</span><br><span class="line">            <span class="keyword">if</span>(num&gt;<span class="number">57</span> &amp;&amp; num&lt;<span class="number">65</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(num&gt;<span class="number">90</span> &amp;&amp; num&lt;<span class="number">97</span>) <span class="keyword">continue</span>;</span><br><span class="line">            str+=<span class="built_in">String</span>.fromCharCode(num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.write(str);</span><br></pre></td></tr></table></figure><blockquote><p>双重循环语句</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 设置锚点位置</span></span><br><span class="line">       AB: <span class="keyword">while</span> (j &lt; <span class="number">10</span>) &#123;</span><br><span class="line">            str += <span class="string">"&lt;ul&gt;"</span>;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (i &lt; <span class="number">10</span>) &#123;</span><br><span class="line">                str += <span class="string">"&lt;li&gt;项目"</span> + i + <span class="string">"&lt;/li&gt;"</span>;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="comment">// 跳出到锚点位置</span></span><br><span class="line">                <span class="keyword">if</span>(i===<span class="number">4</span> &amp;&amp; j===<span class="number">4</span>) <span class="keyword">break</span> AB;</span><br><span class="line">            &#125;</span><br><span class="line">            str += <span class="string">"&lt;/ul&gt;"</span>;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.write(str);</span><br><span class="line">        </span><br><span class="line"> <span class="keyword">var</span> table=<span class="string">"&lt;table&gt;"</span>;</span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">1</span>,j=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            table+=<span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line">                j=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>(j&lt;<span class="number">10</span>)&#123;</span><br><span class="line">                    table+=<span class="string">"&lt;td&gt;"</span>+i+<span class="string">"*"</span>+j+<span class="string">"="</span>+i*j+<span class="string">"&lt;/td&gt;"</span>;</span><br><span class="line">                    <span class="keyword">if</span>(j&gt;=i) <span class="keyword">break</span>;<span class="comment">//跳出</span></span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">            table+=<span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        table+=<span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line">        <span class="built_in">document</span>.write(table);</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">var</span> y=<span class="number">2</span>,w=<span class="number">0</span>,bool;</span><br><span class="line">        <span class="keyword">while</span>(y&lt;<span class="number">100</span>)&#123;</span><br><span class="line">            <span class="comment">// 用i除以1-自身之间的数值，如果没有余数，就不是素数（质数）</span></span><br><span class="line">            bool=<span class="literal">false</span>;</span><br><span class="line">            w=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span>(w&lt;y)&#123;</span><br><span class="line">                <span class="keyword">if</span>(y%w===<span class="number">0</span>)&#123;</span><br><span class="line">                    bool=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                w++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!bool)&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(y);</span><br><span class="line">            &#125;</span><br><span class="line">            y++;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="循环的应用"><a class="markdownIt-Anchor" href="#循环的应用"></a> 循环的应用</h3><p><strong>打印等腰三角形</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>,j=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            k=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(k&lt;<span class="number">10</span>-i)&#123;</span><br><span class="line">                <span class="built_in">document</span>.write(<span class="string">"&amp;ensp;"</span>);</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">            j=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(j&lt;(i+<span class="number">1</span>)*<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">document</span>.write(<span class="string">"*"</span>);</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>do while 循环</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;<span class="keyword">while</span>(i&lt;<span class="number">10</span>);</span><br><span class="line">        <span class="comment">// do while 是先执行语句块，再判断是否继续循环</span></span><br><span class="line">        <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"a"</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;<span class="keyword">while</span>(i&gt;<span class="number">0</span> &amp;&amp; i&lt;<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">while</span>(i&gt;<span class="number">0</span> &amp;&amp; i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> n;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            n=<span class="built_in">Math</span>.random();</span><br><span class="line">            <span class="built_in">console</span>.log(n);</span><br><span class="line">        &#125;<span class="keyword">while</span>(n&lt;<span class="number">0.5</span>);</span><br></pre></td></tr></table></figure><p><strong>for 循环</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for(初始变量;循环条件;向条件外变化的表达式)&#123;</span></span><br><span class="line"><span class="comment">// 循环</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>while循环 do whie循环 for循环的区别</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sum=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;=<span class="number">100</span>;i++) sum+=i;</span><br><span class="line">       <span class="built_in">console</span>.log(sum);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 每次开始循环时，sum都会重置为0</span></span><br><span class="line">       <span class="comment">// 定义变量，每次循环的开始先执行,执行一次</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>,sum=<span class="number">0</span>,s=++i;i&lt;=<span class="number">100</span>;i++) sum+=i;</span><br><span class="line">       <span class="built_in">console</span>.log(sum,s);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="comment">// 条件语句，计算完成后必须转换为布尔值，是true才进入语句块</span></span><br><span class="line">       <span class="comment">// 条件语句先判断，条件语句每次都会执行判断</span></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>,sum=<span class="number">0</span>;i++<span class="xml"><span class="tag">&lt;<span class="name">100;)</span> <span class="attr">sum</span>+=<span class="string">i;</span></span></span></span><br><span class="line"><span class="xml">       console.log(sum);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">       // 变化是所有语句块运行完成后执行</span></span><br><span class="line"><span class="xml">       // 如果使用while或者do while中continue，i++就需要写在continue的上面</span></span><br><span class="line">       for(var i=0,sum=0;i&lt;100;i++)&#123;</span><br><span class="line">           sum+=i;</span><br><span class="line">           if(i===20) continue;</span><br><span class="line">           console.log("aa");</span><br><span class="line">       &#125;</span><br><span class="line">       console.log(sum);</span><br><span class="line">       for(var i=0,sum=0;i&lt;=100;sum+=i++);</span><br><span class="line">       console.log(sum);</span><br></pre></td></tr></table></figure><h3 id="对象的遍历"><a class="markdownIt-Anchor" href="#对象的遍历"></a> 对象的遍历</h3><p><strong>浅复制</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//对象的属性</span></span><br><span class="line">    <span class="keyword">var</span> a=<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">var</span> obj=&#123;</span><br><span class="line">        <span class="comment">// 创建对象时，如果key是一个变量，就需要写在[]</span></span><br><span class="line">        [a]:<span class="number">10</span>,</span><br><span class="line">        <span class="comment">// 这个a是一个字符Key</span></span><br><span class="line">        a:<span class="number">20</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 直接描述对象下有一个a的属性，值是1</span></span><br><span class="line">    obj.a=<span class="number">1</span>;</span><br><span class="line">    obj[<span class="string">"a"</span>]=<span class="number">1</span>;<span class="comment">//对象[字符key]=value;</span></span><br><span class="line">    <span class="comment">// key就是属性名称，必须是字符串（ES5）</span></span><br><span class="line">    <span class="keyword">var</span> a=<span class="string">"a"</span>;</span><br><span class="line">    obj[a]=<span class="number">1</span>;<span class="comment">//中括号的方式是可以带入变量作为key的，点方法是不能使用变量</span></span><br><span class="line">    <span class="keyword">var</span> s=<span class="number">4</span>;</span><br><span class="line">    obj[s]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> b=<span class="literal">true</span>;</span><br><span class="line">    obj[b]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> o=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">    obj[o]=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">var</span> o1=&#123;<span class="attr">a</span>:<span class="number">2</span>&#125;;</span><br><span class="line">    <span class="built_in">console</span>.log(obj[<span class="string">"3"</span>]);</span><br><span class="line">        </span><br><span class="line">    <span class="built_in">console</span>.log(obj.a);</span><br><span class="line">    <span class="built_in">console</span>.log(obj[<span class="string">"a"</span>]);</span><br><span class="line">    <span class="built_in">console</span>.log(obj[<span class="string">"a"</span>][<span class="string">"b"</span>]);</span><br><span class="line">    <span class="keyword">var</span> obj=&#123;</span><br><span class="line">        a:<span class="number">1</span>,</span><br><span class="line">        b:<span class="number">2</span>,</span><br><span class="line">        c:<span class="number">3</span>,</span><br><span class="line">        d:&#123;</span><br><span class="line">            a:<span class="number">1</span>,<span class="attr">b</span>:<span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        <span class="comment">// prop 就是obj下的所有属性名 key</span></span><br><span class="line">        <span class="comment">// 每循环一次就将属性名付给prop变量</span></span><br><span class="line">        <span class="built_in">console</span>.log(prop,obj[prop]);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">// 浅复制</span></span><br><span class="line">    <span class="keyword">var</span> obj1=&#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        obj1[prop]=obj[prop];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 复制后切段引用关系，所以源对象属性值改变，新对象不变</span></span><br><span class="line">    obj.d.a=<span class="number">10</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(obj1);</span><br><span class="line">        <span class="comment">// 删除某个属性</span></span><br><span class="line">    <span class="keyword">delete</span> obj.d;</span><br><span class="line">    <span class="built_in">console</span>.log(obj);</span><br></pre></td></tr></table></figure><h3 id="作业"><a class="markdownIt-Anchor" href="#作业"></a> 作业</h3><p><strong>表格的创建</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> table=<span class="string">"&lt;table&gt;"</span>;        <span class="comment">//table</span></span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>,</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; <span class="number">10</span>) &#123;                     </span><br><span class="line">            table += <span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &lt; <span class="number">10</span>) &#123;</span><br><span class="line">                table += <span class="string">"&lt;td&gt;"</span> + <span class="string">"&lt;/td&gt;"</span>;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            table += <span class="string">"&lt;/tr&gt;"</span></span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        table+= <span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line">        <span class="built_in">document</span>.write(table);</span><br></pre></td></tr></table></figure><p><strong>垃圾的三角形</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">var</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">           <span class="keyword">while</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">               i++;</span><br><span class="line">               </span><br><span class="line">               <span class="keyword">var</span> k=<span class="number">0</span>;</span><br><span class="line">               <span class="keyword">while</span>(k&lt;(<span class="number">10</span>-i))&#123;</span><br><span class="line">                   k++;</span><br><span class="line">                   <span class="built_in">document</span>.write(<span class="string">"&amp;nbsp;"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">               j=<span class="number">1</span>;</span><br><span class="line">               <span class="keyword">while</span>(j&lt;=i)&#123;</span><br><span class="line">                   j++;</span><br><span class="line">                   <span class="built_in">document</span>.write(<span class="string">"*"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="built_in">document</span>.write(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p><strong>垃圾的菱形</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//正三角</span></span><br><span class="line">         <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">         j = <span class="number">0</span>;</span><br><span class="line">         <span class="keyword">while</span> (i &lt; <span class="number">6</span>) &#123;</span><br><span class="line">             i++;</span><br><span class="line">             k = i;</span><br><span class="line">             <span class="keyword">while</span> (k &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">                 <span class="built_in">document</span>.write(<span class="string">"&amp;nbsp;"</span>);</span><br><span class="line">                 k++;</span><br><span class="line">             &#125;</span><br><span class="line">             j = <span class="number">1</span>;</span><br><span class="line">             <span class="keyword">while</span> (j &lt;= i) &#123;</span><br><span class="line">                 <span class="built_in">document</span>.write(<span class="string">"*"</span>);</span><br><span class="line">                 j++;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="built_in">document</span>.write(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//倒三角</span></span><br><span class="line">         <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">         j = <span class="number">0</span>;</span><br><span class="line">         <span class="keyword">while</span> (i &lt; <span class="number">6</span>) &#123;</span><br><span class="line">             i++;</span><br><span class="line">             <span class="keyword">var</span> k = <span class="number">0</span>;</span><br><span class="line">             <span class="keyword">while</span> (k &lt; i) &#123;</span><br><span class="line">                 <span class="built_in">document</span>.write(<span class="string">"&amp;nbsp;"</span>);</span><br><span class="line">                 k++</span><br><span class="line">             &#125;</span><br><span class="line">             j = i;</span><br><span class="line">             <span class="keyword">while</span> (j &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">                 <span class="built_in">document</span>.write(<span class="string">"*"</span>);</span><br><span class="line">                 j++;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="built_in">document</span>.write(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><p><strong>水仙花数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> hundred,</span><br><span class="line">             ten,</span><br><span class="line">             unit,</span><br><span class="line">             n;</span><br><span class="line">         <span class="keyword">for</span> (n = <span class="number">100</span>; n &lt; <span class="number">1000</span>; n++) &#123;</span><br><span class="line">             hundred = <span class="built_in">parseInt</span>(n / <span class="number">100</span>);</span><br><span class="line">             ten = <span class="built_in">parseInt</span>((n - (hundred * <span class="number">100</span>)) / <span class="number">10</span>);</span><br><span class="line">             unit = <span class="built_in">parseInt</span>(n % <span class="number">10</span>);</span><br><span class="line">             <span class="keyword">if</span> (n == ((hundred * hundred * hundred) + (ten * ten * ten) + (unit * unit * unit))) &#123;</span><br><span class="line">                 <span class="built_in">document</span>.write(<span class="string">"100-1000以内的水仙花数为"</span> + n + <span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><p><strong>弹窗计算机器</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">         <span class="keyword">var</span> num1,operator,num2,result;</span><br><span class="line">             num1=<span class="built_in">parseInt</span>(prompt(<span class="string">"第1个数"</span>));</span><br><span class="line">             num2=<span class="built_in">parseInt</span>(prompt(<span class="string">"第2个数"</span>));</span><br><span class="line">             operator=prompt(<span class="string">"运算符"</span>);</span><br><span class="line">             <span class="keyword">if</span>(!<span class="built_in">isNaN</span>(num1)&amp;&amp;!<span class="built_in">isNaN</span>(num2))&#123;</span><br><span class="line">                 <span class="keyword">switch</span>(operator)&#123;</span><br><span class="line">                     <span class="keyword">case</span> <span class="string">"+"</span>:</span><br><span class="line">                         result=num1+num2;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                     <span class="keyword">case</span> <span class="string">"-"</span>:</span><br><span class="line">                         result=num1-num2;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                     <span class="keyword">case</span> <span class="string">"*"</span>:</span><br><span class="line">                         result=num1*num2;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                     <span class="keyword">case</span> <span class="string">"/"</span>:</span><br><span class="line">                         result=num1/num2;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">                 alert(result);</span><br><span class="line">             &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 alert(<span class="string">"请输入正确数值"</span>);</span><br><span class="line">             &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>阶乘</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="built_in">parseInt</span>(prompt(<span class="string">"请输入一个数值"</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=num<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">            num*=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.write(num); </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> result = num;</span><br><span class="line">        <span class="keyword">while</span> (num &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            num--;</span><br><span class="line">            result *= num;</span><br><span class="line">        &#125; </span><br><span class="line">        </span><br><span class="line">        <span class="built_in">document</span>.write(result);</span><br></pre></td></tr></table></figure><p><strong>判断质数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i, j;</span><br><span class="line">         <span class="keyword">for</span> (i = <span class="number">100</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">             <span class="keyword">var</span> flag = <span class="number">0</span>;</span><br><span class="line">             <span class="keyword">for</span> (j =<span class="number">2</span>; j &lt; i; j++) &#123;</span><br><span class="line">                 <span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">                     flag++;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">if</span> (flag==<span class="number">0</span>) &#123;</span><br><span class="line">                 <span class="built_in">document</span>.write(i + <span class="string">"&lt;br&gt;"</span>)</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         </span><br><span class="line">         </span><br><span class="line"><span class="keyword">var</span> i = <span class="number">100</span>,</span><br><span class="line">            j;</span><br><span class="line">        <span class="keyword">var</span> count;</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= <span class="number">1000</span>) &#123;</span><br><span class="line">            count = <span class="number">0</span>;</span><br><span class="line">            i++;</span><br><span class="line">            j = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &lt; i) &#123;</span><br><span class="line">                j++;</span><br><span class="line">                <span class="keyword">if</span> (i % j == <span class="number">0</span>) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (count &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="built_in">document</span>.write(i + <span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>百钱买白鸡</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> x = <span class="number">1</span>; x &lt; <span class="number">100</span>; x++) &#123;</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">let</span> y = <span class="number">1</span>; y &lt; <span class="number">100</span>; y++) &#123;</span><br><span class="line">                 <span class="keyword">for</span> (<span class="keyword">let</span> z = <span class="number">1</span>; z &lt; <span class="number">100</span>; z++) &#123;</span><br><span class="line">                     <span class="keyword">if</span> ((x + y + z === <span class="number">100</span>) &amp;&amp; (<span class="number">5</span> * x + <span class="number">3</span> * y + z / <span class="number">3</span> === <span class="number">100</span>)) &#123;</span><br><span class="line">                         <span class="built_in">document</span>.write(<span class="string">'当前 公鸡'</span>+x+<span class="string">'只, 母鸡'</span>+y+<span class="string">'只, 小鸡 '</span>+z+<span class="string">'只'</span>+<span class="string">'&lt;br&gt;'</span>);</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;js基础-循环和对象&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#js基础-循环和对象&quot;&gt;&lt;/a&gt; js基础-循环和对象&lt;/h1&gt;
&lt;h3 id=&quot;三目运算符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="循环" scheme="https://cooli-willson.github.io/tags/%E5%BE%AA%E7%8E%AF/"/>
    
      <category term="对象" scheme="https://cooli-willson.github.io/tags/%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>2.javascript 运算符</title>
    <link href="https://cooli-willson.github.io/2020/01/20/2.js%E5%9F%BA%E7%A1%80-%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>https://cooli-willson.github.io/2020/01/20/2.js%E5%9F%BA%E7%A1%80-%E8%BF%90%E7%AE%97%E7%AC%A6/</id>
    <published>2020-01-20T14:42:27.505Z</published>
    <updated>2020-01-20T17:14:12.032Z</updated>
    
    <content type="html"><![CDATA[<h3 id="算术运算符"><a class="markdownIt-Anchor" href="#算术运算符"></a> 算术运算符</h3><p><strong>字符相加</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 隐式转换 多种数据类型不同时，进行运算需要将这些数据转换为相同类型才能运算，这个过程就是隐式转换</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="string">"a"</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="string">"b"</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">var</span> b;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">var</span> b=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="comment">// 遇到字符串相加时，另一种数据隐式转换为字符型.String()</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">// 遇到字符串相加时，另一种数据隐式转换为字符型.String()</span></span><br><span class="line">        <span class="built_in">console</span>.log(a+b);<span class="comment">//字符相加时，首尾相连</span></span><br><span class="line">        <span class="keyword">var</span> age=<span class="number">30</span>;</span><br><span class="line">        <span class="keyword">var</span> s=<span class="string">"今年我"</span>+age+<span class="string">"岁了"</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(s);</span><br><span class="line">        <span class="keyword">var</span> s=<span class="number">10</span>;</span><br><span class="line">        s=s+<span class="string">""</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(s);</span><br><span class="line">        <span class="comment">// 等号是赋值，因此先运算等号右边的结果，然后赋值给等号左边</span></span><br></pre></td></tr></table></figure><p><strong>布尔值相加</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 布尔值相加，不包含加字符</span></span><br><span class="line">        <span class="comment">// 布尔值转换为数值，除字符外所有内容都是隐式转换为数值运算 Number()</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">var</span> b;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">null</span>;</span><br><span class="line">        <span class="comment">// 任何数值加NaN都为NaN</span></span><br></pre></td></tr></table></figure><p><strong>对象相加</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// Object 对象相加时都会转换为字符串相加</span></span><br><span class="line">           <span class="keyword">var</span> a=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">var</span> b=&#123;<span class="attr">b</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(a+b);</span><br><span class="line">        <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];<span class="comment">//数组转换为字符串时是将数组的元素转换为字符串相连</span></span><br><span class="line">        <span class="keyword">var</span> a=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(arr+a);</span><br><span class="line">        <span class="built_in">console</span>.log([]+[]);</span><br></pre></td></tr></table></figure><p><strong>数值运算</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 减法 乘法 除法 取模都遵循转换为数值运算</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="string">"5"</span>;</span><br><span class="line">        <span class="keyword">var</span> b;</span><br><span class="line">        <span class="keyword">var</span> b=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">var</span> b=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(a*b);</span><br></pre></td></tr></table></figure><h3 id="赋值运算符和一元运算符"><a class="markdownIt-Anchor" href="#赋值运算符和一元运算符"></a> 赋值运算符和一元运算符</h3><p><strong>赋值运算符</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 赋值运算符</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">3</span>;</span><br><span class="line">        a+=<span class="number">5</span>;<span class="comment">//a=a+5;</span></span><br><span class="line">        a+=<span class="string">""</span>;<span class="comment">//快速转换字符串</span></span><br><span class="line">        a*=<span class="number">3</span>;</span><br><span class="line">        a/=<span class="number">3</span>;</span><br><span class="line">        a%=<span class="number">2</span>;</span><br><span class="line">        a-=<span class="number">2</span>;</span><br><span class="line">        <span class="comment">// 赋值运算符也是有结果的</span></span><br><span class="line">        <span class="keyword">var</span> s=a+=<span class="number">2</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(s,a);</span><br><span class="line">        <span class="keyword">if</span>(a-=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"a"</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>一元运算符</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"3"</span>;</span><br><span class="line">a++;<span class="comment">//a=a+1 </span></span><br><span class="line">a+=<span class="number">1</span>;<span class="comment">//31</span></span><br><span class="line">a++;<span class="comment">//一元运算符强制将值转换为数值+1</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="number">3</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a+=<span class="number">1</span>);<span class="comment">// a=a+1   a-&gt;返回结果</span></span><br><span class="line"><span class="built_in">console</span>.log(a++);<span class="comment">// a-&gt;返回出来  a=a+1;</span></span><br><span class="line"><span class="built_in">console</span>.log(++a);<span class="comment">//a=a+1  a-&gt;返回结果</span></span><br><span class="line"><span class="comment">// a++和++a a的结果相同 返回结果不同</span></span><br><span class="line"><span class="keyword">var</span> y=a++;</span><br><span class="line"><span class="keyword">var</span> y=++a;</span><br><span class="line"><span class="keyword">var</span> x=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(--x)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> x=<span class="number">1</span>;</span><br><span class="line">    x=<span class="number">2</span><span class="number">-3</span><span class="number">-4</span><span class="number">-5</span></span><br><span class="line">      <span class="number">1</span>+<span class="number">2</span>+<span class="number">2</span>+<span class="number">3</span>+<span class="number">4</span></span><br><span class="line"><span class="keyword">var</span> y=x++ + x + x++ + x++ + x++;</span><br><span class="line"><span class="keyword">var</span> y=x + ++x + x++ +x++ + x++;</span><br><span class="line"><span class="built_in">console</span>.log(y,x);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"2"</span>&gt;<span class="string">"10"</span>);            <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span>==<span class="literal">null</span>); </span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span>&gt;<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><pre><code>### 关系运算符**关系运算符**&gt; 大小比较<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  &gt; &lt; &gt;= &lt;= == === != !==</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"aa"</span>;</span><br><span class="line"><span class="keyword">var</span> b=<span class="string">"ab"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(b&gt;a);<span class="comment">//判断字符串大小时先判断字符串首字符的ascii 或者 Unicode码值,如果相同判断后面字符的比较结果</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span>&gt;<span class="literal">false</span>);<span class="comment">//隐式转换为数值</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span>&gt;<span class="string">""</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"a"</span>&gt;<span class="number">1</span>);<span class="comment">//字符串与数值比较时，字符串转换为数值再比较</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span>&gt;<span class="literal">null</span>);</span><br></pre></td></tr></table></figure></code></pre><p><strong>辅助运算符和相等关系运算符</strong></p><blockquote><p>= 赋值<br>== 比较<br>=== 精确比较   比较值和类型</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"1"</span>==<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">""</span>==<span class="number">0</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0</span>==<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">""</span>==<span class="literal">false</span>);</span><br><span class="line"><span class="number">0</span>==<span class="string">""</span>== <span class="literal">false</span></span><br><span class="line"><span class="literal">undefined</span>==<span class="literal">null</span> </span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span>==<span class="literal">null</span>);<span class="comment">//判读空的结果是否相同</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span>==<span class="string">""</span>);<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span>==<span class="number">0</span>);<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span>==<span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line"><span class="comment">// NaN永远不和任何内容相等，包括NaN</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"a"</span>;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="literal">NaN</span>)&#123;</span><br><span class="line">    <span class="comment">// 判断a是否是NaN</span></span><br><span class="line">    <span class="comment">// isNaN()里面的内容会自动隐式转换为数值</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isNaN</span>(a))&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"非数值"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="comment">// undefined null</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"aa"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="comment">// a是0 false ""</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">var</span> obj=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">var</span> obj1=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="built_in">console</span>.log(obj==obj1);</span><br><span class="line">    <span class="comment">// 引用地址不同</span></span><br><span class="line">    <span class="built_in">console</span>.log([]==[]);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"1"</span>==<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"1"</span>===<span class="number">1</span>);<span class="comment">//比较值和类型</span></span><br><span class="line">    <span class="comment">// != 不相等</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">0</span>!=<span class="literal">null</span>);</span><br><span class="line">    <span class="built_in">console</span>.log([]!=[]);</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a class="markdownIt-Anchor" href="#逻辑运算符"></a> 逻辑运算符</h3><blockquote><p><strong>逻辑与</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span> &amp;&amp; <span class="literal">true</span> =<span class="literal">true</span>;</span><br><span class="line"><span class="literal">true</span> &amp;&amp; <span class="literal">false</span> =<span class="literal">false</span>;</span><br><span class="line"><span class="literal">false</span> &amp;&amp; <span class="literal">true</span> =<span class="literal">false</span>;</span><br><span class="line"><span class="literal">false</span> &amp;&amp; <span class="literal">false</span> =<span class="literal">false</span>;</span><br></pre></td></tr></table></figure><blockquote><p><strong>逻辑或</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span> || <span class="literal">true</span> =<span class="literal">true</span>;</span><br><span class="line"><span class="literal">true</span> || <span class="literal">false</span> =<span class="literal">true</span>;</span><br><span class="line"><span class="literal">false</span> || <span class="literal">true</span> =<span class="literal">true</span>;</span><br><span class="line"><span class="literal">false</span> || <span class="literal">false</span> =<span class="literal">false</span>;</span><br></pre></td></tr></table></figure><blockquote><p><strong>逻辑运算符与一元运算符的应用</strong></p></blockquote><ul><li>&amp;&amp; 运算的两端，如果有一端转换为布尔值是false，就把这个值返回出去（值是什么就返回什么，不是返回false）</li><li>如果两端转换为布尔值都是true，就返回&amp;&amp;运算符右侧的值，先运行左侧再运行右侧</li><li>如果左侧运算的结果是false，直接返回左侧值，不运算右侧<br>+ 如果||的左侧的结果是ture，就直接返回左侧，不运算右侧，熔断</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> a=<span class="number">1</span>;</span><br><span class="line">a=a-- &amp;&amp; ++a;</span><br><span class="line">s=--a &amp;&amp; ++a;</span><br><span class="line">a=a++ &amp;&amp; --a;</span><br><span class="line"><span class="built_in">console</span>.log(s,a);</span><br><span class="line"><span class="comment">// &amp;&amp; 运算的两端，如果有一端转换为布尔值是false，就把这个值返回出去（值是什么就返回什么，不是返回false）</span></span><br><span class="line"><span class="comment">// 如果两端转换为布尔值都是true，就返回&amp;&amp;运算符右侧的值，先运行左侧再运行右侧</span></span><br><span class="line"><span class="comment">// 如果左侧运算的结果是false，直接返回左侧值，不运算右侧</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="number">1</span>;</span><br><span class="line">a=--a || a++;</span><br><span class="line">a=a-- || a++;</span><br><span class="line"><span class="comment">// 如果||的左侧的结果是ture，就直接返回左侧，不运算右侧，熔断</span></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><pre><code>&gt; 逻辑非+ !取反值，先将内容转换为布尔值，然后去反值+所有！运算符得到的结果都是布尔值<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// !取反值，先将内容转换为布尔值，然后去反值</span></span><br><span class="line"><span class="built_in">console</span>.log(!<span class="number">10</span>);<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(!<span class="string">""</span>);<span class="comment">//true</span></span><br><span class="line"><span class="comment">// 所有！运算符得到的结果都是布尔值</span></span><br><span class="line"><span class="built_in">console</span>.log(!obj1);</span><br><span class="line"><span class="built_in">console</span>.log(obj==!obj1);</span><br><span class="line"><span class="built_in">console</span>.log(![]==[]);<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log([]==[]);<span class="comment">//false</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="二进制和十六进制未详细整理"><a class="markdownIt-Anchor" href="#二进制和十六进制未详细整理"></a> 二进制和十六进制（未详细整理）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 数值转换二进制</span></span><br><span class="line">          <span class="number">0</span>,<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">10</span>,  <span class="number">11</span>,  <span class="number">12</span>,  <span class="number">13</span>,  <span class="number">14</span>,  <span class="number">15</span>,  <span class="number">16</span>,  <span class="number">17</span>,   <span class="number">20</span></span><br><span class="line">        <span class="number">0</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">100</span>,<span class="number">101</span>,<span class="number">110</span>,<span class="number">111</span>,<span class="number">1000</span>,<span class="number">1001</span>,<span class="number">1010</span>,<span class="number">1011</span>,<span class="number">1100</span>,<span class="number">1101</span>,<span class="number">1110</span>,<span class="number">1111</span>,<span class="number">10000</span></span><br><span class="line">        <span class="number">0</span>,<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,   <span class="number">8</span>,   <span class="number">9</span>,  <span class="number">10</span>,  <span class="number">11</span>,  <span class="number">12</span>,  <span class="number">13</span>,  <span class="number">14</span>,  <span class="number">15</span>,   <span class="number">16</span></span><br><span class="line">        <span class="number">0</span>,<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,   <span class="number">8</span>,   <span class="number">9</span>,   A,   B,   C,   D,   E,   F,   <span class="number">10</span></span><br><span class="line">        </span><br><span class="line">        <span class="number">56</span>=<span class="number">5</span>*<span class="number">8</span>(<span class="number">1</span>)+<span class="number">6</span>*<span class="number">8</span>(<span class="number">0</span>)=<span class="number">46</span></span><br><span class="line">        <span class="number">1010</span>=<span class="number">1</span>*<span class="number">2</span>(<span class="number">3</span>)+<span class="number">0</span>*<span class="number">2</span>(<span class="number">2</span>)+<span class="number">1</span>*<span class="number">2</span>(<span class="number">1</span>)+<span class="number">0</span>*<span class="number">2</span>(<span class="number">0</span>)=<span class="number">10</span>;</span><br><span class="line">        <span class="number">567</span>=<span class="number">5</span>*<span class="number">10</span>(<span class="number">2</span>)+<span class="number">6</span>*<span class="number">10</span>(<span class="number">1</span>)+<span class="number">7</span>*<span class="number">10</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//16进制</span></span><br><span class="line"></span><br><span class="line">        RGB</span><br><span class="line">        <span class="number">0xFFFFFF</span></span><br><span class="line">        <span class="number">0xFF0000</span></span><br><span class="line">        <span class="number">0x00FF00</span></span><br><span class="line">        <span class="number">0x0000FF</span></span><br><span class="line">        <span class="number">0x000000</span></span><br><span class="line">        <span class="number">0xFFFF00</span> 黄色</span><br><span class="line">        <span class="number">0xFF9900</span> 橙色</span><br><span class="line">        <span class="number">0xFF00FF</span>  紫色</span><br><span class="line">        <span class="number">0x00FFFF</span> 靛色</span><br><span class="line">        <span class="number">0xFFFFFFFF</span></span><br><span class="line">        <span class="number">180</span>*<span class="number">180</span></span><br><span class="line">        <span class="number">64</span> <span class="number">128</span> <span class="number">512</span></span><br><span class="line">        <span class="number">32400</span>*<span class="number">4</span>=<span class="number">129</span>,<span class="number">600</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="string">"abc"</span>&gt;<span class="string">"aad"</span>));</span><br></pre></td></tr></table></figure><h3 id="位运算未详细整理"><a class="markdownIt-Anchor" href="#位运算未详细整理"></a> 位运算（未详细整理）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">console</span>.log(~<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">var</span> str=<span class="string">"abcdef"</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(str.indexOf(<span class="string">"z"</span>));</span><br><span class="line">        <span class="keyword">if</span>(~str.indexOf(<span class="string">"z"</span>))&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"找到了z"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 位与运算  &amp;</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">5</span>&amp;<span class="number">6</span>);</span><br><span class="line">        <span class="number">101</span></span><br><span class="line">        <span class="number">110</span></span><br><span class="line">        <span class="number">100</span>=<span class="number">4</span>;</span><br><span class="line">            <span class="comment">// 1&amp;1=1</span></span><br><span class="line">            <span class="comment">// 1&amp;0=0</span></span><br><span class="line">            <span class="comment">// 0&amp;1=0</span></span><br><span class="line">            <span class="comment">// 0&amp;0=0</span></span><br><span class="line">       <span class="number">10101010</span> </span><br><span class="line">             <span class="number">10</span></span><br><span class="line">       <span class="number">10101000</span></span><br><span class="line">        <span class="comment">// 位或运算  |</span></span><br><span class="line">          </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">7</span>|<span class="number">6</span>);</span><br><span class="line">        <span class="number">111</span></span><br><span class="line">        <span class="number">110</span></span><br><span class="line">        <span class="number">111</span>=<span class="number">7</span></span><br><span class="line">            <span class="comment">// 1|1=1</span></span><br><span class="line">            <span class="comment">// 1|0=1</span></span><br><span class="line">            <span class="comment">// 0|1=1</span></span><br><span class="line">            <span class="comment">// 0|0=0</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">85</span>|<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 位异或运算 ^</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">7</span>^<span class="number">6</span>);</span><br><span class="line">        <span class="number">111</span></span><br><span class="line">        <span class="number">110</span></span><br><span class="line">        <span class="number">001</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 1^1=0</span></span><br><span class="line">        <span class="comment">// 1^0=1</span></span><br><span class="line">        <span class="comment">// 0^1=1</span></span><br><span class="line">        <span class="comment">// 0^0=0</span></span><br><span class="line">        <span class="keyword">var</span> pass=<span class="number">7856</span>;</span><br><span class="line">        <span class="keyword">var</span> key=<span class="number">2534</span>;</span><br><span class="line">        <span class="keyword">var</span> value=pass^key;</span><br><span class="line">        <span class="comment">// console.log(pass^key);</span></span><br><span class="line">        <span class="built_in">console</span>.log(value^key);</span><br><span class="line">        <span class="comment">// &lt;&lt;左移位   &gt;&gt;右移位</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">24</span>&gt;&gt;<span class="number">2</span>);</span><br><span class="line">        <span class="comment">// 11000&gt;&gt;2 ==&gt; 110;</span></span><br><span class="line">        <span class="comment">// 8&lt;&lt;2 100000==&gt;32;</span></span><br><span class="line">        <span class="comment">// 1&lt;&lt;n   求2的多少次幂</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">1</span>&lt;&lt;<span class="number">5</span>);</span><br><span class="line">       <span class="built_in">console</span>.log( (<span class="number">0x0000FF</span>&lt;&lt;<span class="number">16</span>).toString(<span class="number">16</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;算术运算符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#算术运算符&quot;&gt;&lt;/a&gt; 算术运算符&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;字符相加&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="运算符" scheme="https://cooli-willson.github.io/tags/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>1.javascript 基础-数据类型</title>
    <link href="https://cooli-willson.github.io/2020/01/20/1.javascript%20%E5%9F%BA%E7%A1%80-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://cooli-willson.github.io/2020/01/20/1.javascript%20%E5%9F%BA%E7%A1%80-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2020-01-20T13:51:37.020Z</published>
    <updated>2020-01-20T19:08:26.065Z</updated>
    
    <content type="html"><![CDATA[<h3 id="js-文件的引入"><a class="markdownIt-Anchor" href="#js-文件的引入"></a> js 文件的引入</h3><ul><li>引入外部js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"a.js"</span> <span class="keyword">async</span> defer&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script src=<span class="string">"b.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>ES6的模块化导入</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"module"</span>&gt;</span><br><span class="line">        <span class="comment">// ES6的模块化导入</span></span><br><span class="line">        <span class="keyword">import</span> Box <span class="keyword">from</span> <span class="string">"./js/Box.js"</span>;</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>行内js的写法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;button onclick=<span class="string">"alert('aaa')"</span>&gt;按钮&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;a href="javascript:alert('aaa')"&gt;超链接&lt;/</span>a&gt;</span><br><span class="line">&lt;a href=<span class="string">"javascript:void(0)"</span>&gt;超链接&lt;<span class="regexp">/a&gt;</span></span><br></pre></td></tr></table></figure><ul><li>js标签</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       a=<span class="number">10</span>;</span><br><span class="line">   &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">   &lt;script&gt;</span></span><br><span class="line"><span class="regexp">       alert(b);</span></span><br><span class="line"><span class="regexp">   &lt;/</span>script&gt;</span><br><span class="line">   &lt;script&gt;</span><br><span class="line">       b=<span class="number">20</span>;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>js注释</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a=3;//注释单行代码</span></span><br><span class="line">      <span class="comment">/*  a=3;</span></span><br><span class="line"><span class="comment">       b=4; */</span>  <span class="comment">//块状注释</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// 不需要的禁止执行，注释后代码不会被执行，在以后可以复用</span></span><br><span class="line">       <span class="comment">// 介绍说明代码作用</span></span><br></pre></td></tr></table></figure><ul><li>弹出框</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="string">"aaa"</span>);<span class="comment">//弹出框</span></span><br><span class="line">confirm(<span class="string">"你好"</span>);<span class="comment">//点击确定时返回true，否则返回false</span></span><br><span class="line">prompt(<span class="string">"请输入你的年龄"</span>,<span class="string">"18岁"</span>);<span class="comment">//输入弹出框，确定后会返回输入的内容</span></span><br></pre></td></tr></table></figure><ul><li>打印方式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"aaaa"</span>,<span class="string">"bbbb"</span>);<span class="comment">//打印日志</span></span><br><span class="line"><span class="built_in">console</span>.trace(<span class="string">"aaa"</span>);<span class="comment">//用于显示当前执行的代码在堆栈中的调用路径。</span></span><br><span class="line"><span class="built_in">console</span>.dir(<span class="string">"aaa"</span>);<span class="comment">//打印部分标签内容</span></span><br><span class="line"><span class="built_in">console</span>.error(<span class="string">"错误的"</span>);<span class="comment">//打印错误</span></span><br></pre></td></tr></table></figure><h3 id="变量-常量和基本数据类型"><a class="markdownIt-Anchor" href="#变量-常量和基本数据类型"></a> 变量 常量和基本数据类型</h3><p><strong>变量</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">4</span>;</span><br><span class="line">       b=<span class="number">6</span>;</span><br><span class="line">       <span class="comment">// 定义变量</span></span><br><span class="line">       <span class="keyword">var</span> a=<span class="number">4</span>;</span><br><span class="line">       <span class="keyword">var</span> b=<span class="number">5</span>;</span><br><span class="line">       <span class="comment">// 使用；结束一个代码语句，如果使用，表示没有结束该语句</span></span><br><span class="line">       <span class="keyword">var</span> a=<span class="number">4</span>,</span><br><span class="line">           b=<span class="number">5</span>;</span><br><span class="line">       <span class="keyword">var</span> a,b;</span><br><span class="line">       <span class="comment">// 先给a赋值，然后赋值给b</span></span><br><span class="line">       <span class="keyword">var</span> a=b=<span class="number">4</span>;</span><br></pre></td></tr></table></figure><p><strong>变量命名规则</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 变量名称规则</span></span><br><span class="line">        <span class="comment">// 变量要求小写字母开始，每个单词的首字母大写，叫做驼峰式命名</span></span><br><span class="line">        <span class="comment">//    var timeManager</span></span><br><span class="line">        <span class="comment">// 变量不能使用关键词和保留字</span></span><br><span class="line">        <span class="comment">// var for;  var int;</span></span><br><span class="line">        <span class="comment">// 变量尽量不要定义window的属性名，ES5中全局变量都会被设置在window的属性中</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">window</span>.a);</span><br><span class="line">        <span class="built_in">console</span>.log(a+<span class="number">5</span>);</span><br><span class="line">        <span class="built_in">window</span>.status</span><br><span class="line">        <span class="keyword">var</span> status=<span class="number">20</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(status+<span class="number">5</span>);  <span class="comment">//205</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 临时变量或者参数，起名时使用_开始</span></span><br><span class="line">        <span class="keyword">var</span> _time=<span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不能使用中文和拼音字母（我强制大家不能使用）</span></span><br><span class="line">        <span class="keyword">var</span> 姓名=<span class="string">"谢天"</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(姓名);</span><br><span class="line">        <span class="keyword">var</span> xingming=<span class="string">"谢天"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a=<span class="number">3</span>;</span><br><span class="line">        a=<span class="number">10</span>;<span class="comment">//值可以改变，就叫做变量  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  不希望值改变，常量ES6,常量不能修改</span></span><br><span class="line">        <span class="keyword">const</span> EVENT_ID=<span class="string">"eventid"</span>;</span><br><span class="line">        EVENT_ID=<span class="string">"abc"</span>;</span><br><span class="line">        <span class="comment">// 常量定义后的对象不能够被清除</span></span><br><span class="line">        <span class="keyword">const</span> obj=&#123;<span class="attr">a</span>:<span class="number">1</span>,<span class="attr">b</span>:<span class="number">2</span>&#125;;</span><br></pre></td></tr></table></figure><h4 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h4><blockquote><p>字符型，数值型，布尔型，undefined,null,object   ||E6 Symbol<br>五种基础类型，一种复杂类型</p></blockquote><p><strong>字符类型</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字符类型   String</span></span><br><span class="line"><span class="comment">// "" ''    ||ES6    ``</span></span><br><span class="line">        <span class="keyword">var</span> str1 = <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">var</span> str2 = <span class="string">'1'</span>;</span><br><span class="line">        <span class="keyword">var</span> str3 = <span class="string">`1`</span>;</span><br><span class="line">        <span class="keyword">var</span> str4 = <span class="string">"这个'新的'鞋子价格不错"</span>;</span><br><span class="line">        <span class="keyword">var</span> str5 = <span class="string">'&#123;"a":4,"b":"10"&#125;'</span>;</span><br></pre></td></tr></table></figure><p><strong>数值类型</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数值类型  Number</span></span><br><span class="line"> <span class="keyword">var</span> num1 = <span class="number">1</span>;<span class="comment">//正整型</span></span><br><span class="line"><span class="keyword">var</span> num2 = <span class="number">-1</span>;<span class="comment">//负整型</span></span><br><span class="line"><span class="keyword">var</span> num3 = <span class="number">1.3</span>;<span class="comment">//浮点型</span></span><br><span class="line"><span class="keyword">var</span> num4 = <span class="number">056</span>;<span class="comment">//8进制数值,0起头，数值不能大于7</span></span><br><span class="line"><span class="keyword">var</span> num5 = <span class="number">0xFF</span>;<span class="comment">//16进制数值，0x起头，单个数值不能大于F</span></span><br><span class="line"><span class="keyword">var</span> num6 = <span class="number">1.2e+3</span>;<span class="comment">//科学计数法</span></span><br><span class="line"><span class="keyword">var</span> num7 = <span class="number">1.2e-3</span>;<span class="comment">//科学计数法</span></span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure><p><strong>布尔类型</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 布尔类型   Boolean</span></span><br><span class="line">       <span class="keyword">var</span> bool1 = <span class="literal">true</span>;</span><br><span class="line">       <span class="keyword">var</span> bool2 = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p><strong>未定义型</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 未定义型 undefined  值和类型相同</span></span><br><span class="line">        <span class="keyword">var</span> und1;</span><br><span class="line">        <span class="keyword">var</span> und2 = <span class="literal">undefined</span>;</span><br></pre></td></tr></table></figure><p><strong>空值</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 空值   null   null的类型Object型</span></span><br><span class="line">        <span class="keyword">var</span> nu = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(nu,<span class="keyword">typeof</span>(nu));</span><br></pre></td></tr></table></figure><p><strong>对象类型</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">            <span class="comment">// 属性</span></span><br><span class="line">            id: <span class="number">1001</span>,</span><br><span class="line">            name: <span class="string">"电脑桌"</span>,</span><br><span class="line">            price: <span class="string">"700"</span>,</span><br><span class="line">            getSum: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 方法</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure><p><strong>数据类型的存储</strong></p><ul><li>前五种基础类型都存储在栈中，对象存储在堆中<br><strong>对象类型的特性</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">String</span>(obj));<span class="comment">//[object Object] 所有的对象转换为字符串就会变成这样</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(obj));<span class="comment">//将object对象转换为字符串（JSON字符串）</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(<span class="string">'&#123;"a":1&#125;'</span>));<span class="comment">//将JSON字符串转换为对象</span></span><br><span class="line">        <span class="keyword">var</span> obj1=<span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(obj));    </span><br><span class="line">        obj.a=<span class="number">5</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(obj,obj1)</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(obj),<span class="built_in">JSON</span>.stringify(obj1));</span><br><span class="line">        <span class="built_in">console</span>.log(obj1===obj);</span><br><span class="line">            <span class="comment">// 变量名存储的是引用地址</span></span><br><span class="line">            <span class="keyword">var</span> obj2=obj;<span class="comment">//将引用地址赋值给obj2</span></span><br><span class="line">            obj.a=<span class="number">10</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(obj2.a);</span><br><span class="line">            <span class="comment">// 存在栈中，修改的是值</span></span><br><span class="line">            <span class="keyword">var</span> num=<span class="number">3</span>;</span><br><span class="line">            <span class="keyword">var</span> num1=num;</span><br><span class="line">            num=<span class="number">10</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(num1);</span><br><span class="line">            <span class="comment">// 存在堆中，修改引用地址值的内容，地址不会发生改变</span></span><br><span class="line">            <span class="keyword">var</span> obj1=<span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">            <span class="keyword">var</span> obj=&#123;<span class="attr">a</span>:<span class="number">10</span>,<span class="attr">b</span>:&#123;<span class="attr">a</span>:<span class="number">20</span>&#125;&#125;;</span><br><span class="line">            <span class="built_in">console</span>.log(obj);</span><br><span class="line">            obj.a=<span class="number">10</span>;</span><br><span class="line">            <span class="comment">// 内存泄漏  不断的创建新对象，不使用的旧对象不清除</span></span><br><span class="line">            obj=<span class="literal">null</span>;<span class="comment">//当给变量设置为null</span></span><br><span class="line">            <span class="comment">// 垃圾回收机制  gc   当对象的引用地址在栈中没有引用时，内存占比过高时，垃圾回收车会将其清除</span></span><br></pre></td></tr></table></figure><h3 id="数据类型的转换"><a class="markdownIt-Anchor" href="#数据类型的转换"></a> 数据类型的转换</h3><p><strong>任何类型转换为数值型</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NaN 数值型 非数值</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"5"</span>;</span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"5a"</span>;<span class="comment">//字符串中如果有字符存在，转换后就变成NaN</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">""</span>;<span class="comment">//空字符串转换为数值是 0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">true</span>;<span class="comment">//1</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">false</span>;<span class="comment">//0</span></span><br><span class="line"><span class="keyword">var</span> a;<span class="comment">//undefined NaN 非数值</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">null</span>;<span class="comment">//0  null是0</span></span><br><span class="line"><span class="built_in">Number</span>(值);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>(a));</span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"52.1a"</span>;<span class="comment">//使用parseInt转字符串，从第一个数字字符开始到第一个字符类型为止转换为数值</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"a45"</span>;<span class="comment">//使用parseInt转字符串，从第一个数字字符开始到第一个字符类型为止转换为数值</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"4a5"</span>;<span class="comment">//使用parseInt转字符串，从第一个数字字符开始到第一个字符类型为止转换为数值</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"FF"</span>;</span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"101010010101"</span>;</span><br><span class="line">color=<span class="string">"#FF00FF"</span>--&gt;<span class="string">"rgb(255,0,255)"</span>;</span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">true</span>;<span class="comment">//NaN</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">false</span>;<span class="comment">//NaN</span></span><br><span class="line"><span class="keyword">var</span> a;<span class="comment">//NaN</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">null</span>;<span class="comment">//NaN</span></span><br><span class="line"><span class="keyword">var</span> a=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>(a));<span class="comment">//NaN</span></span><br><span class="line"><span class="comment">// parseInt(要转换的内容，该内容是什么进制) 将他转换为10进制数值</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(a,<span class="number">2</span>))<span class="comment">//转换为整型</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(a))<span class="comment">//字符串转换为整型</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseFloat</span>(a))<span class="comment">//字符串转换为浮点型</span></span><br></pre></td></tr></table></figure><p><strong>任何类型转换为字符串</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">1555</span>;</span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">0xFF</span>;</span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">4.1e+2</span>;</span><br><span class="line">        <span class="comment">// 先将所有的数值都转换为10进制在转换为字符串</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">var</span> a=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">var</span> a;<span class="comment">//undefined</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="literal">null</span>;<span class="comment">//null</span></span><br><span class="line">        <span class="keyword">var</span> a=&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(a);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">String</span>(a));<span class="comment">//转换为字符串</span></span><br><span class="line">        <span class="comment">// a.toString(按照什么进制转换为字符串);</span></span><br><span class="line">        <span class="built_in">console</span>.log(a.toString(<span class="number">36</span>));<span class="comment">//2-36</span></span><br><span class="line">        <span class="keyword">var</span> a=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        <span class="built_in">console</span>.log(a.toLocaleString());<span class="comment">//转换为本地字符串</span></span><br><span class="line">        <span class="built_in">console</span>.log(a.toUTCString());<span class="comment">//转换为格林尼治时间字符串</span></span><br><span class="line">        <span class="built_in">console</span>.log(a.toString());</span><br><span class="line">        <span class="comment">// toFixed  toPrecision toExponential  都是针对数值转换</span></span><br><span class="line">        <span class="built_in">console</span>.log(a.toFixed(<span class="number">1</span>));<span class="comment">//保留几位小数,会自动四舍五入</span></span><br><span class="line">        <span class="built_in">console</span>.log(a.toPrecision(<span class="number">2</span>));<span class="comment">//总共保留几位，会自动四舍五入或者科学计数法</span></span><br><span class="line">        <span class="built_in">console</span>.log(a.toExponential(<span class="number">2</span>));<span class="comment">//小数点后保留几位，不会自动四舍五入，一定科学计数法</span></span><br></pre></td></tr></table></figure><p><strong>任何类型转换为布尔值</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="string">""</span>;<span class="comment">//false</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="number">0</span>;<span class="comment">//false</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">undefined</span>;<span class="comment">//false</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">null</span>;<span class="comment">//false</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">NaN</span>;<span class="comment">//false</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="literal">false</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(a));</span><br><span class="line"><span class="comment">// "" 0 undefined null NaN false  转换为布尔值都是false</span></span><br><span class="line"><span class="comment">// 除上述6种以外转换为布尔值都是true</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="string">"0"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(a));</span><br><span class="line"><span class="keyword">var</span> a=<span class="number">3</span>;</span><br><span class="line"><span class="comment">// 强转为对象类型</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>(a));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;js-文件的引入&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#js-文件的引入&quot;&gt;&lt;/a&gt; js 文件的引入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;引入外部js&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="数据类型" scheme="https://cooli-willson.github.io/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>通过数组方法实现的简单功能</title>
    <link href="https://cooli-willson.github.io/2020/01/19/%E9%80%9A%E8%BF%87%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0%E7%9A%84%E7%AE%80%E5%8D%95%E5%8A%9F%E8%83%BD/"/>
    <id>https://cooli-willson.github.io/2020/01/19/%E9%80%9A%E8%BF%87%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0%E7%9A%84%E7%AE%80%E5%8D%95%E5%8A%9F%E8%83%BD/</id>
    <published>2020-01-19T08:04:27.014Z</published>
    <updated>2020-01-20T17:14:20.222Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实现功能"><a class="markdownIt-Anchor" href="#实现功能"></a> 实现功能</h1><h3 id="去重-原生版"><a class="markdownIt-Anchor" href="#去重-原生版"></a> 去重  原生版</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">7</span>];</span><br><span class="line">       <span class="keyword">var</span> arr1=[];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;        <span class="comment">//遍历当前数组的长度</span></span><br><span class="line">           <span class="keyword">var</span> bool=<span class="literal">false</span>;<span class="comment">//flag</span></span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;arr1.length;j++)&#123;   <span class="comment">//循环arr1长度</span></span><br><span class="line">               <span class="keyword">if</span>(arr[i]===arr1[j])&#123; <span class="comment">//当arr的元素全等于arr1</span></span><br><span class="line">                   bool=<span class="literal">true</span>;<span class="comment">//改变flag的布尔值</span></span><br><span class="line">                   <span class="keyword">break</span>;<span class="comment">//跳出循环</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span>(!bool)&#123;</span><br><span class="line">               arr1.push(arr[i]);          <span class="comment">//将arr的元素赋值给arr1</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       arr=arr1.splice(<span class="number">0</span>);</span><br><span class="line">       arr1=<span class="literal">null</span>;</span><br></pre></td></tr></table></figure><h3 id="去重indexof版"><a class="markdownIt-Anchor" href="#去重indexof版"></a> 去重indexOf版</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">7</span>];</span><br><span class="line">    <span class="keyword">var</span> arr1=[];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;        <span class="comment">//循环数组的长度</span></span><br><span class="line">        <span class="keyword">if</span>(arr1.indexOf(arr[i])&lt;<span class="number">0</span>) arr1.push(arr[i]); <span class="comment">//当arr下的每个元素在index属性下返回负一时  将元素储存在arr1中 ？？？</span></span><br><span class="line">    &#125;</span><br><span class="line">    arr=arr1.splice(<span class="number">0</span>);</span><br><span class="line">    arr1=<span class="literal">null</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h3 id="去重delete版"><a class="markdownIt-Anchor" href="#去重delete版"></a> 去重delete版</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">7</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;arr.length;i++)&#123;                    <span class="comment">//循环数组的长度</span></span><br><span class="line">        <span class="keyword">if</span>(arr.indexOf(arr[i],i+<span class="number">1</span>)&gt;<span class="number">-1</span>) <span class="keyword">delete</span> arr[i];  <span class="comment">//要查找的元素下标为i,从i+1开始，当找到相同元素时，将下标为i的元素删除</span></span><br><span class="line">        <span class="keyword">if</span>(arr.lastIndexOf(arr[i],i<span class="number">-1</span>)&gt;<span class="number">-1</span>) <span class="keyword">delete</span> arr[i]; <span class="comment">//倒叙遍历，重复以上操作</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> arr1=[];    <span class="comment">//空数组arr1;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> arr)&#123;     <span class="comment">//循环arr的长度</span></span><br><span class="line">            arr1.push(arr[prop]); <span class="comment">//将arr的元素储存在arr1中</span></span><br><span class="line">        &#125;   </span><br><span class="line">        arr=arr1.splice(<span class="number">0</span>);     <span class="comment">//将arr数组的所有元素传递给arr1</span></span><br><span class="line">        arr1=<span class="literal">null</span>;<span class="comment">//清空数组arr1</span></span><br><span class="line">        <span class="built_in">console</span>.log(arr); <span class="comment">//控制台打印arr</span></span><br></pre></td></tr></table></figure><h3 id="数组的遍历"><a class="markdownIt-Anchor" href="#数组的遍历"></a> 数组的遍历</h3><h4 id="for循环遍历"><a class="markdownIt-Anchor" href="#for循环遍历"></a> for循环遍历</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line">       arr.a=<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;     <span class="comment">//循环数组的长度</span></span><br><span class="line">           <span class="built_in">console</span>.log(i,arr[i]);  <span class="comment">//打印下标 和下标的每个元素</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h4 id="for-in循环遍历"><a class="markdownIt-Anchor" href="#for-in循环遍历"></a> for in循环遍历</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="keyword">in</span> 循环可以把数组的可枚举属性遍历到</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">in</span>不能遍历到数组的空元素</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> arr)&#123;<span class="comment">//prop相当于数组的下标</span></span><br><span class="line">            <span class="built_in">console</span>.log(prop,arr[prop]);   <span class="comment">//打印下标，和下标的每个元素</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="将获取的标签元素转换为数组类型"><a class="markdownIt-Anchor" href="#将获取的标签元素转换为数组类型"></a> 将获取的标签元素转换为数组类型</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ES6</span></span><br><span class="line"><span class="keyword">var</span> list=<span class="built_in">Array</span>.from(inputs);</span><br><span class="line"><span class="built_in">console</span>.log(list);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ES5</span></span><br><span class="line"><span class="keyword">var</span> list=<span class="built_in">Array</span>.prototype.slice.call(inputs);</span><br><span class="line"><span class="keyword">var</span> list=[].slice.call(inputs);</span><br><span class="line"><span class="keyword">var</span> list=<span class="built_in">Array</span>.prototype.concat.apply([],inputs);</span><br><span class="line"><span class="keyword">var</span> list=[].concat.apply([],inputs);</span><br></pre></td></tr></table></figure><h3 id="实现列表的全选功能"><a class="markdownIt-Anchor" href="#实现列表的全选功能"></a> 实现列表的全选功能???</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>全选<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">       &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">   &lt;<span class="regexp">/ul&gt; </span></span><br><span class="line"><span class="regexp">   </span></span><br><span class="line"><span class="regexp">   var inputs=document.getElementsByTagName("input");   /</span><span class="regexp">/将获取的input标签的元素储存在inputs中</span></span><br><span class="line"><span class="regexp">   var arr=Array.from(inputs);   /</span><span class="regexp">/将获取的标签元素转换为数组类型</span></span><br><span class="line"><span class="regexp">       for(var i=0;i&lt;arr.length;i++)&#123;    /</span><span class="regexp">/循环数组的长度</span></span><br><span class="line"><span class="regexp">           arr[i].onclick=clickHandler;/</span><span class="regexp">/当点击时调用clickHandler函数</span></span><br><span class="line"><span class="regexp">       &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">       function clickHandler()&#123;</span></span><br><span class="line"><span class="regexp">           var self=this;   /</span><span class="regexp">/将当前元素用self存储</span></span><br><span class="line"><span class="regexp">            if(arr.indexOf(this)===0)&#123;    /</span><span class="regexp">/当前元素为0时</span></span><br><span class="line"><span class="regexp">               arr.forEach(function(item,index)&#123; </span></span><br><span class="line"><span class="regexp">                   if(index===0) return;/</span><span class="regexp">/当前元素下标为0时 返回</span></span><br><span class="line"><span class="regexp">                   /</span><span class="regexp">/ foreach中this被重新指向到window（所有的回调函数）</span></span><br><span class="line"><span class="regexp">                   item.checked=self.checked;/</span><span class="regexp">/将所有元素都天机checked属性</span></span><br><span class="line"><span class="regexp">               &#125;)</span></span><br><span class="line"><span class="regexp">            &#125;else&#123;</span></span><br><span class="line"><span class="regexp">               arr[0].checked=arr.slice(1).every(function(item)&#123; /</span><span class="regexp">/？？？</span></span><br><span class="line"><span class="regexp">                   return item.checked;/</span><span class="regexp">/???</span></span><br><span class="line"><span class="regexp">               &#125;)</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">       &#125;</span></span><br></pre></td></tr></table></figure><h3 id="对表格中的商品通过属性进行筛选"><a class="markdownIt-Anchor" href="#对表格中的商品通过属性进行筛选"></a> 对表格中的商品通过属性进行筛选</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data=[</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1001</span>,<span class="attr">icon</span>:<span class="string">"img/1.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮0"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">10</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1002</span>,<span class="attr">icon</span>:<span class="string">"img/2.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮1"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">20</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1003</span>,<span class="attr">icon</span>:<span class="string">"img/3.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮2"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">30</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1004</span>,<span class="attr">icon</span>:<span class="string">"img/4.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮3"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">40</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1005</span>,<span class="attr">icon</span>:<span class="string">"img/5.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮4"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">50</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1006</span>,<span class="attr">icon</span>:<span class="string">"img/6.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮5"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">60</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1007</span>,<span class="attr">icon</span>:<span class="string">"img/7.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮6"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">70</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1008</span>,<span class="attr">icon</span>:<span class="string">"img/8.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮7"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">80</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1009</span>,<span class="attr">icon</span>:<span class="string">"img/9.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮8"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">90</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1010</span>,<span class="attr">icon</span>:<span class="string">"img/10.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮9"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">100</span>&#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr=data.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item.price&gt;<span class="number">60</span>;   <span class="comment">//返回所有价格&gt;60的元素</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"><span class="keyword">var</span> item=data.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item.id==<span class="number">1006</span>;  <span class="comment">//返回id==1006的元素</span></span><br><span class="line">&#125;)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(item);</span><br></pre></td></tr></table></figure><h3 id="实现购物车功能"><a class="markdownIt-Anchor" href="#实现购物车功能"></a> 实现购物车功能</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data=[</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1001</span>,<span class="attr">icon</span>:<span class="string">"img/1.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮0"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">10</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1002</span>,<span class="attr">icon</span>:<span class="string">"img/2.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮1"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">20</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1003</span>,<span class="attr">icon</span>:<span class="string">"img/3.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮2"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">30</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1004</span>,<span class="attr">icon</span>:<span class="string">"img/4.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮3"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">40</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1005</span>,<span class="attr">icon</span>:<span class="string">"img/5.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮4"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">50</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1006</span>,<span class="attr">icon</span>:<span class="string">"img/6.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮5"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">60</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1007</span>,<span class="attr">icon</span>:<span class="string">"img/7.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮6"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">70</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1008</span>,<span class="attr">icon</span>:<span class="string">"img/8.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮7"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">80</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1009</span>,<span class="attr">icon</span>:<span class="string">"img/9.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮8"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">90</span>&#125;,</span><br><span class="line">       &#123;<span class="attr">id</span>:<span class="number">1010</span>,<span class="attr">icon</span>:<span class="string">"img/10.png"</span>,<span class="attr">name</span>:<span class="string">"餐饮9"</span>,<span class="attr">num</span>:<span class="number">1</span>,<span class="attr">price</span>:<span class="number">100</span>&#125;</span><br><span class="line">   ];</span><br><span class="line"></span><br><span class="line">   data.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;               <span class="comment">//遍历整个数组   </span></span><br><span class="line">       item.selected=<span class="built_in">Math</span>.random()&lt;<span class="number">0.5</span>;       <span class="comment">//随机选择被选中的元素</span></span><br><span class="line">       item.num=<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">5</span>+<span class="number">5</span>);  <span class="comment">//给num属性随机赋值</span></span><br><span class="line">       item.total=item.num*item.price;   <span class="comment">//将数量和价格相乘得出的结果付给tatal（总价）</span></span><br><span class="line">   &#125;);</span><br><span class="line">   <span class="keyword">var</span> sum=data.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">value,item</span>)</span>&#123;  <span class="comment">//归并data并且赋值到sum中</span></span><br><span class="line">       <span class="keyword">return</span> item.selected ? value+item.total : value;<span class="comment">//若选中就加到vale中，没有选则不加</span></span><br><span class="line">   &#125;,<span class="number">0</span>);</span><br><span class="line">   <span class="built_in">console</span>.log(sum);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;实现功能&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#实现功能&quot;&gt;&lt;/a&gt; 实现功能&lt;/h1&gt;
&lt;h3 id=&quot;去重-原生版&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#去重-原生版&quot;&gt;&lt;/a&gt; 去重  
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="数组" scheme="https://cooli-willson.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="功能" scheme="https://cooli-willson.github.io/tags/%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>数组方法的重构</title>
    <link href="https://cooli-willson.github.io/2020/01/19/%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E7%9A%84%E9%87%8D%E6%9E%84/"/>
    <id>https://cooli-willson.github.io/2020/01/19/%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E7%9A%84%E9%87%8D%E6%9E%84/</id>
    <published>2020-01-19T08:04:24.522Z</published>
    <updated>2020-01-20T17:14:16.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数组方法的重构"><a class="markdownIt-Anchor" href="#数组方法的重构"></a> 数组方法的重构</h1><h2 id="push"><a class="markdownIt-Anchor" href="#push"></a> push</h2><h4 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能：</h4><h4 id="在数组尾部添加一个或者多个新元素并且返回数组的新长度"><a class="markdownIt-Anchor" href="#在数组尾部添加一个或者多个新元素并且返回数组的新长度"></a> *在数组<strong>尾部</strong>添加一个或者<strong>多个</strong>新元素，并且返回<strong>数组的新长度</strong></h4><h4 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.push(<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>);</span><br></pre></td></tr></table></figure><h2 id="push-重构"><a class="markdownIt-Anchor" href="#push-重构"></a> push 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">67</span>,<span class="number">78</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">push</span>(<span class="params">arr</span>)</span>&#123;<span class="comment">//传入参数为数组</span></span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;<span class="built_in">arguments</span>.length;i++)&#123;   <span class="comment">//循环除数组外其他元素的长度   </span></span><br><span class="line">               arr[arr.length]=<span class="built_in">arguments</span>[i];   <span class="comment">//在尾部添加参数通过下标赋值</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> arr.length;      <span class="comment">//返回数组长度</span></span><br><span class="line">       &#125;</span><br><span class="line"><span class="keyword">var</span> i=push(arr,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>); <span class="comment">//调用push方法，参数为数组，5，6，7</span></span><br><span class="line"><span class="built_in">console</span>.log(arr,i); *<span class="regexp">/ /</span><span class="regexp">/数组长度，新数组</span></span><br></pre></td></tr></table></figure><h2 id="pop"><a class="markdownIt-Anchor" href="#pop"></a> pop</h2><h4 id="功能-2"><a class="markdownIt-Anchor" href="#功能-2"></a> 功能：</h4><pre><code> #### *删除数组的**尾部**元素，并且返回这个**被删除的元素**</code></pre><h4 id="使用方法-2"><a class="markdownIt-Anchor" href="#使用方法-2"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var item=arr.pop();</span></span><br><span class="line"><span class="comment">// console.log(item,arr);</span></span><br></pre></td></tr></table></figure><h2 id="pop-重构"><a class="markdownIt-Anchor" href="#pop-重构"></a> pop 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pop</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> item=arr[arr.length<span class="number">-1</span>];   <span class="comment">//用item储存最后一个参数</span></span><br><span class="line">            arr.length--;  <span class="comment">//数组的长度减一</span></span><br><span class="line">            <span class="keyword">return</span> item;  <span class="comment">//返回这个被删除的参数</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">pop(arr);</span><br></pre></td></tr></table></figure><h2 id="unshift"><a class="markdownIt-Anchor" href="#unshift"></a> unshift</h2><h4 id="功能-3"><a class="markdownIt-Anchor" href="#功能-3"></a> 功能：</h4><h4 id="将一个或者多个新元素添加在数组的最前面返回数组的新长度"><a class="markdownIt-Anchor" href="#将一个或者多个新元素添加在数组的最前面返回数组的新长度"></a> *将一个或者多个新元素添加在数组的最前面，返回数组的新长度</h4><h4 id="使用方法-3"><a class="markdownIt-Anchor" href="#使用方法-3"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.unshift(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h2 id="unshift-重构"><a class="markdownIt-Anchor" href="#unshift-重构"></a> unshift 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unshift</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">          <span class="keyword">var</span> len=<span class="built_in">arguments</span>.length<span class="number">-1</span>;              <span class="comment">//len储存除数组以外的其他元素的长度</span></span><br><span class="line">               <span class="keyword">for</span>(<span class="keyword">var</span> i=arr.length<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123; <span class="comment">//循环当前数组的长度</span></span><br><span class="line">                   arr[i+len]=arr[i];    <span class="comment">//将当前数组的元素向后移</span></span><br><span class="line">              &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">1</span>;j&lt;<span class="built_in">arguments</span>.length;j++)&#123; <span class="comment">//循环参数的长度（除arr外）</span></span><br><span class="line">                       arr[j<span class="number">-1</span>]=<span class="built_in">arguments</span>[j]; <span class="comment">//将参数赋值给数组的前面</span></span><br><span class="line">               &#125;</span><br><span class="line">                 <span class="keyword">return</span> arr.length;<span class="comment">//返回数组的新长度</span></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">                unshift(arr,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>);</span><br><span class="line">               <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h2 id="shift"><a class="markdownIt-Anchor" href="#shift"></a> shift</h2><h4 id="功能-4"><a class="markdownIt-Anchor" href="#功能-4"></a> 功能：</h4><pre><code>删除数组的第一个元素，并返回该元素</code></pre><h4 id="使用方法-4"><a class="markdownIt-Anchor" href="#使用方法-4"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.shift();</span><br></pre></td></tr></table></figure><h2 id="shift-重构"><a class="markdownIt-Anchor" href="#shift-重构"></a> shift 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shift</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!(arr <span class="keyword">instanceof</span> <span class="built_in">Array</span>)) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"请确保参数类型为数组"</span>)  <span class="comment">//判断传入参数是否为数组</span></span><br><span class="line">  <span class="keyword">var</span> el;</span><br><span class="line">  <span class="keyword">if</span> (arr.length &gt; <span class="number">0</span>) &#123;<span class="comment">//如果数组有长度</span></span><br><span class="line">    el = arr[<span class="number">0</span>]    <span class="comment">//将第一个元素储存在el中</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;  <span class="comment">//循环数组的长度</span></span><br><span class="line">      arr[i] = arr[i + <span class="number">1</span>]<span class="comment">//将数组的每个元素前移一位</span></span><br><span class="line">    &#125;</span><br><span class="line">    arr.length = arr.length - <span class="number">1</span><span class="comment">//数组的长度减一</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> el</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="concat"><a class="markdownIt-Anchor" href="#concat"></a> concat</h2><h4 id="功能-5"><a class="markdownIt-Anchor" href="#功能-5"></a> 功能：</h4><h4 id="复制复制后给新数组添加新元素多个数组连接形成数组"><a class="markdownIt-Anchor" href="#复制复制后给新数组添加新元素多个数组连接形成数组"></a> *复制，复制后给新数组添加新元素，多个数组连接形成数组</h4><h4 id="使用方法-5"><a class="markdownIt-Anchor" href="#使用方法-5"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">var</span> arr1=arr.concat(<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>);   <span class="comment">//连接形成新数组</span></span><br><span class="line"><span class="keyword">var</span> arr1=arr.concat(); <span class="comment">//复制数组</span></span><br></pre></td></tr></table></figure><h2 id="concat-重构"><a class="markdownIt-Anchor" href="#concat-重构"></a> concat  重构???</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">concat</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> array=[];<span class="comment">//定义一个新数组</span></span><br><span class="line">            <span class="keyword">var</span> index=<span class="number">0</span>;<span class="comment">//下标变量</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++,index++)&#123;  <span class="comment">// 循环数组的长度</span></span><br><span class="line">                array[index]=arr[i]; <span class="comment">//将数组复制arr数组到array数组</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">1</span>;j&lt;<span class="built_in">arguments</span>.length;j++,index++)&#123;   <span class="comment">//遍历参数的长度(除数组外)</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">arguments</span>[j].constructor===<span class="built_in">Array</span>)&#123;   <span class="comment">//当参数为数组时 </span></span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">var</span> k=<span class="number">0</span>;k&lt;<span class="built_in">arguments</span>[j].length;k++,index++)&#123; <span class="comment">//遍历数组的长度  </span></span><br><span class="line">                        array[index]=<span class="built_in">arguments</span>[j][k];   <span class="comment">//将参数为数组的参数赋值给</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    index--;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    array[index]=<span class="built_in">arguments</span>[j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> array;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="join"><a class="markdownIt-Anchor" href="#join"></a> join</h2><h4 id="功能-6"><a class="markdownIt-Anchor" href="#功能-6"></a> 功能：</h4><h4 id="转换为字符串使用参数进行分割"><a class="markdownIt-Anchor" href="#转换为字符串使用参数进行分割"></a> *转换为字符串，使用参数进行分割</h4><h4 id="使用方法-6"><a class="markdownIt-Anchor" href="#使用方法-6"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(arr.join());</span><br><span class="line"> <span class="built_in">console</span>.log(arr.join(<span class="string">"#"</span>));<span class="comment">//1#2#3#4</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.join(<span class="string">""</span>));<span class="comment">//1234</span></span><br></pre></td></tr></table></figure><h2 id="join-重构myself"><a class="markdownIt-Anchor" href="#join-重构myself"></a> join 重构（myself）</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">join</span>(<span class="params">arr,and</span>)</span>&#123;                                 <span class="comment">//参数为数组和连接符</span></span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;arr.length<span class="number">-1</span>;i++)&#123;    <span class="comment">//循环数组长度     </span></span><br><span class="line">               arr[i]+=and;  <span class="comment">//数组加入连接符</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> arr;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">var</span> arr = [<span class="number">3</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line">       join(arr,<span class="string">"|"</span>);</span><br><span class="line">       <span class="built_in">document</span>.write(arr);</span><br></pre></td></tr></table></figure><h2 id="splice"><a class="markdownIt-Anchor" href="#splice"></a> splice</h2><h4 id="功能-7"><a class="markdownIt-Anchor" href="#功能-7"></a> 功能：</h4><h4 id="给数组中添加-删除-替换一个或者多个元素返回被删除元素组成的数组"><a class="markdownIt-Anchor" href="#给数组中添加-删除-替换一个或者多个元素返回被删除元素组成的数组"></a> *给数组中添加、删除、替换一个或者多个元素，返回被删除元素组成的数组</h4><h4 id="使用方法-7"><a class="markdownIt-Anchor" href="#使用方法-7"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// arr.splice(从什么位置开始,删除多少个元素,添加的元素...);</span></span><br><span class="line">       </span><br><span class="line"><span class="comment">// var arr1=arr.splice();//创建一个空数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var arr1=arr.splice(0);//将数组的所有元素传递给新数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 负数指从后向前数</span></span><br><span class="line"><span class="comment">// var arr1=arr.splice(-2);//从数组的倒数第二位开始截取到尾部</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var arr1=arr.splice(2,2);//从第二位开始删除2个元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var arr1=arr.splice(ar2,0,12,14);//插入元素13，14，插入在第二位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var arr1=arr.splice(2,2,12,14);//替换元素，删除两位并且插入12，14</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(arr1,arr);</span></span><br></pre></td></tr></table></figure><h2 id="splice-重构"><a class="markdownIt-Anchor" href="#splice-重构"></a> splice 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">splice</span>(<span class="params">arr,start,count</span>)</span>&#123;   <span class="comment">//第一个参数是数组  第二个参数是开始位置  第三个参数是一共替换几个参数</span></span><br><span class="line">           <span class="keyword">var</span> a=[];                       <span class="comment">//定义一个空数组</span></span><br><span class="line">           start=<span class="built_in">Number</span>(start);            <span class="comment">//将开始参数设为数值型</span></span><br><span class="line">           count=<span class="built_in">Number</span>(count);            <span class="comment">//将count转为数值型</span></span><br><span class="line">           <span class="keyword">if</span>(<span class="built_in">isNaN</span>(start))<span class="keyword">return</span> a;       <span class="comment">//如果start为NaN  返回空数组</span></span><br><span class="line">           <span class="keyword">if</span>(start&lt;<span class="number">0</span>) start+=arr.length;  <span class="comment">//如果start小于0 start等于数组长度  数据从最后一位开始插入</span></span><br><span class="line">           <span class="keyword">if</span>(<span class="built_in">isNaN</span>(count)) count=arr.length-start;    <span class="comment">//？？？</span></span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> i=start,j=<span class="number">0</span>;i&lt;arr.length;i++,j++)&#123; <span class="comment">//遍历从start位置开始长度小于数组的长度</span></span><br><span class="line">               <span class="keyword">if</span>(j&lt;count) a.push(arr[i]); <span class="comment">//当循环次数小于count参数时储存在arr当前下标位置</span></span><br><span class="line">               arr[i]=arr[i+count];        <span class="comment">//arr当前下标的值等于i+count;</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> l=<span class="number">0</span>;l&lt;<span class="built_in">arguments</span>.length<span class="number">-3</span>;l++)&#123;       <span class="comment">//遍历处前三个参数外其他参数的值</span></span><br><span class="line">               <span class="keyword">for</span>(<span class="keyword">var</span> m=arr.length<span class="number">-1</span>;m&gt;=start+l;m--)&#123;  <span class="comment">//???</span></span><br><span class="line">                   arr[m+<span class="number">1</span>]=arr[m];                     <span class="comment">//???</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">3</span>;n&lt;<span class="built_in">arguments</span>.length;n++)&#123;        <span class="comment">//循环参数的长度</span></span><br><span class="line">               arr[start+n<span class="number">-3</span>]=<span class="built_in">arguments</span>[n];            <span class="comment">//设定参数在数组中的下标赋值</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> k=<span class="number">0</span>;k&lt;count;k++)&#123;                   <span class="comment">//替换时减去数组的长度</span></span><br><span class="line">               arr.length--;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> a;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">var</span> arr1=splice(arr,<span class="number">2</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>);</span><br><span class="line">       <span class="built_in">console</span>.log(arr1,arr);</span><br></pre></td></tr></table></figure><h2 id="slice"><a class="markdownIt-Anchor" href="#slice"></a> slice</h2><h4 id="功能-8"><a class="markdownIt-Anchor" href="#功能-8"></a> 功能：</h4><h4 id="截取数组的某一段的值返回一个新数组原数组不改变"><a class="markdownIt-Anchor" href="#截取数组的某一段的值返回一个新数组原数组不改变"></a> *截取数组的某一段的值，返回一个新数组，原数组不改变</h4><h4 id="使用方法-8"><a class="markdownIt-Anchor" href="#使用方法-8"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var arr1=arr.slice();//复制一个新数组</span></span><br><span class="line">        <span class="comment">// var arr1=arr.slice(1);//从第几项复制到尾部</span></span><br><span class="line">        <span class="comment">// var arr1=arr.slice(-2);//从倒数第二位复制到尾部</span></span><br><span class="line">        <span class="comment">// var arr1=arr.slice(2,3);//从第二位复制到第三位之前</span></span><br><span class="line">        <span class="comment">// var arr1=arr.slice(-3,-1);//从倒数第三位复制到倒数第一位之前</span></span><br><span class="line">        <span class="comment">// var arr1=arr.slice(2,-1);//从第二位复制到倒数第一位之前</span></span><br><span class="line">        <span class="comment">// console.log(arr1,arr);</span></span><br></pre></td></tr></table></figure><h2 id="slice-重构"><a class="markdownIt-Anchor" href="#slice-重构"></a> slice 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">slice</span>(<span class="params">arr,start,end</span>)</span>&#123;       <span class="comment">//第一个参数为数组  第二个值为开始截取位置</span></span><br><span class="line">            start=<span class="built_in">Number</span>(start);   <span class="comment">//将参数转为数值型</span></span><br><span class="line">            end=<span class="built_in">Number</span>(end);     <span class="comment">//将参数转为数值型</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isNaN</span>(start)) start=<span class="number">0</span>; <span class="comment">//如果start为NaN  将strat变为0；</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isNaN</span>(end)) end=arr.length; <span class="comment">//如果end为NaN </span></span><br><span class="line">            <span class="keyword">if</span>(start&lt;<span class="number">0</span>) start=start+arr.length;   <span class="comment">//如果参数为0,start为数组的长度</span></span><br><span class="line">            <span class="keyword">if</span>(end&lt;<span class="number">0</span>) end=end+arr.length; <span class="comment">//如果参数为0，end为数组的长度</span></span><br><span class="line">            <span class="keyword">var</span> a=[];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=start,j=<span class="number">0</span>;i&lt;end;i++,j++)&#123;   <span class="comment">//循环开始到结束的下标</span></span><br><span class="line">                a[j]=arr[i];<span class="comment">//将截取的数组赋值给新数组a</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a;<span class="comment">//返回新数组</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> arr1=slice(arr,<span class="number">2</span>,<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(arr1,arr);</span><br></pre></td></tr></table></figure><h2 id="indexof"><a class="markdownIt-Anchor" href="#indexof"></a> indexOf</h2><h4 id="功能-9"><a class="markdownIt-Anchor" href="#功能-9"></a> 功能：</h4><h4 id="查找元素在数组中的下标如果没有查找到返回-1"><a class="markdownIt-Anchor" href="#查找元素在数组中的下标如果没有查找到返回-1"></a> *查找元素在数组中的下标，如果没有查找到返回-1</h4><h4 id="使用方法-9"><a class="markdownIt-Anchor" href="#使用方法-9"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//从前向后查找</span></span><br><span class="line">arr.indexOf(要查找的元素,从第几位开始查找被包含);</span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="number">3</span>,<span class="number">2</span>));</span><br><span class="line">     </span><br><span class="line">     <span class="comment">// 从后向前查找</span></span><br><span class="line">arr.lastIndexOf(要查找的元素,从第几位开始查找被包含);</span><br><span class="line">     </span><br><span class="line"><span class="keyword">var</span> index=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(~(index=arr.indexOf(<span class="number">2</span>,index+<span class="number">1</span>)))&#123;    <span class="comment">//~加一取反  循环条件也是表达式</span></span><br><span class="line">    <span class="built_in">console</span>.log(index)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="indexof重构"><a class="markdownIt-Anchor" href="#indexof重构"></a> indexOf重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreateString</span>(<span class="params">str</span>)</span>&#123; </span><br><span class="line">     <span class="keyword">var</span> obj = &#123;                </span><br><span class="line">         data: str,</span><br><span class="line">         <span class="comment">//indexOf 方法</span></span><br><span class="line">         IndexOf: <span class="function"><span class="keyword">function</span> (<span class="params">chara1</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.data.length; i++) &#123;</span><br><span class="line">                 <span class="keyword">if</span> (str.substr(i, chara1.length) == chara1&#123;                         </span><br><span class="line">              <span class="keyword">break</span>;                      </span><br><span class="line">                 &#125;                    </span><br><span class="line">            &#125;                    </span><br><span class="line"><span class="keyword">return</span> i;                </span><br><span class="line">  &#125;,</span><br><span class="line">          <span class="comment">//lastIndexOf 方法 </span></span><br><span class="line">           LastIndexOf: <span class="function"><span class="keyword">function</span> (<span class="params">chara2</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">this</span>.data.length; i &gt; <span class="number">0</span>; i--) &#123;                </span><br><span class="line">                   <span class="keyword">if</span> (<span class="keyword">this</span>.data.substr(i, chara2.length) == chara2) &#123;                            </span><br><span class="line">              <span class="keyword">break</span>;                        </span><br><span class="line">                   &#125;                    </span><br><span class="line">              &#125;                    </span><br><span class="line">              <span class="keyword">return</span> i;                </span><br><span class="line">           &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="delete"><a class="markdownIt-Anchor" href="#delete"></a> delete</h3><h4 id="功能-10"><a class="markdownIt-Anchor" href="#功能-10"></a> 功能：</h4><pre><code>#### *删除数组元素，不会造成数组的自动收缩，紧密，数组的长度不会发生改变</code></pre><h4 id="使用方法-10"><a class="markdownIt-Anchor" href="#使用方法-10"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"><span class="keyword">delete</span> arr[<span class="number">2</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h2 id="foreach循环"><a class="markdownIt-Anchor" href="#foreach循环"></a> forEach循环</h2><h4 id="功能-11"><a class="markdownIt-Anchor" href="#功能-11"></a> 功能：</h4><h4 id="foreach不遍历空元素也不遍历属性foreach是匿名函数无法阻止它在循环中中断循环跳出"><a class="markdownIt-Anchor" href="#foreach不遍历空元素也不遍历属性foreach是匿名函数无法阻止它在循环中中断循环跳出"></a> *forEach不遍历空元素，也不遍历属性，forEach是匿名函数，无法阻止它在循环中中断循环跳出</h4><h4 id="使用方法-11"><a class="markdownIt-Anchor" href="#使用方法-11"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>,,<span class="number">12</span>,<span class="number">14</span>,<span class="number">16</span>,<span class="number">18</span>,<span class="number">20</span>];</span><br><span class="line">      arr.a=<span class="number">10</span>;</span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index,a</span>)</span>&#123;    <span class="comment">//item:当前元素  index:当前元素的下标  当前元素所属的数组对象</span></span><br><span class="line"><span class="built_in">console</span>.log(item,index,a);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="foreach重构"><a class="markdownIt-Anchor" href="#foreach重构"></a> forEach重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach</span>(<span class="params">arr,fn</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;         <span class="comment">//循环数组的长度</span></span><br><span class="line">                <span class="keyword">if</span>(arr[i]===<span class="literal">undefined</span>) <span class="keyword">continue</span>;   <span class="comment">//当前元素为空时，直接执行下一次循环</span></span><br><span class="line">                fn(arr[i],i,arr);    <span class="comment">//fn参数为：当前元素，当前元素下标，当前元素的数组对象</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 桥接模式</span></span><br><span class="line">forEach(arr,<span class="function"><span class="keyword">function</span>(<span class="params">item,index,a</span>)</span>&#123;          <span class="comment">//调用forEach函数</span></span><br><span class="line">            <span class="built_in">console</span>.log(item,index,a);<span class="comment">//打印每个参数值</span></span><br><span class="line">&#125;) *<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h2 id="map"><a class="markdownIt-Anchor" href="#map"></a> map</h2><h4 id="功能-12"><a class="markdownIt-Anchor" href="#功能-12"></a> 功能：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map同样不会遍历空数组，map与forEach不同的是：forEach不能返回任何内容，map会将回到函数中return的结果返回到新数组中</span><br></pre></td></tr></table></figure><h4 id="使用方法-12"><a class="markdownIt-Anchor" href="#使用方法-12"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">item,index,a</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(item,index,a);</span><br><span class="line">            <span class="keyword">return</span> item;</span><br><span class="line"> &#125;);</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><h2 id="重构map"><a class="markdownIt-Anchor" href="#重构map"></a> 重构map</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">map</span>(<span class="params">arr,fn</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a=[];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;<span class="comment">//循环数组的长度</span></span><br><span class="line">                <span class="keyword">if</span>(arr[i]===<span class="literal">undefined</span>) <span class="keyword">continue</span>; <span class="comment">//当前元素为空时直接进行下一次循环</span></span><br><span class="line">                a[i]=fn(arr[i],i,arr);<span class="comment">//将函数fn存放在数组中</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a;   <span class="comment">//返回数组a,元素为每个函数</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> a=map(arr,<span class="function"><span class="keyword">function</span>(<span class="params">item,index,a</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> item;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><h2 id="some"><a class="markdownIt-Anchor" href="#some"></a> some</h2><h4 id="功能-13"><a class="markdownIt-Anchor" href="#功能-13"></a> 功能：</h4><pre><code>遍历数组，查找是否有满足条件（返回的结果如果是true）就直接跳出遍历，返回true</code></pre><h4 id="使用方法-13"><a class="markdownIt-Anchor" href="#使用方法-13"></a> 使用方法:</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line">    <span class="keyword">if</span>(arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;item&gt;<span class="number">3</span>&#125;))&#123;</span><br><span class="line"><span class="comment">//遍历arr,查询元素是否有大于3的，有的话返回true</span></span><br><span class="line">       &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="keyword">var</span> bool=arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">item,index,a</span>)</span>&#123;</span><br><span class="line">           <span class="keyword">return</span> item&gt;<span class="number">4</span>;      <span class="comment">//遍历arr,查询元素是否有大于4的，有的话返回ture</span></span><br><span class="line">       &#125;)</span><br><span class="line">       <span class="built_in">console</span>.log(bool);       <span class="comment">//打印结果为ture</span></span><br></pre></td></tr></table></figure><h2 id="some重构"><a class="markdownIt-Anchor" href="#some重构"></a> some重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">some</span>(<span class="params">arr,fn</span>)</span>&#123;</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;<span class="comment">//循环数组的长度</span></span><br><span class="line">              <span class="keyword">if</span>(arr[i]===<span class="literal">undefined</span>) <span class="keyword">continue</span>;<span class="comment">//如果数组的元素为空，直接执行下一次的循环</span></span><br><span class="line">              <span class="keyword">if</span>(fn(arr[i],i,arr)) <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//如果fn函数的返回值为ture  返回ture</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;  <span class="comment">//当第二个if语句条件不成立时，返回flase</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">var</span> bool=some(arr,<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;   <span class="comment">//执行some函数，返回值储存在bool中  </span></span><br><span class="line">          <span class="keyword">return</span> item&gt;<span class="number">10</span>;  <span class="comment">//判断表达式的值并返回</span></span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="built_in">console</span>.log(bool);</span><br></pre></td></tr></table></figure><h2 id="every"><a class="markdownIt-Anchor" href="#every"></a> every</h2><h4 id="功能-14"><a class="markdownIt-Anchor" href="#功能-14"></a> 功能：</h4><h4 id="判断每一个是否都满足条件如果有一个返回的结果是false直接返回false"><a class="markdownIt-Anchor" href="#判断每一个是否都满足条件如果有一个返回的结果是false直接返回false"></a> *判断每一个是否都满足条件，如果有一个返回的结果是false，直接返回false</h4><h4 id="使用方法-14"><a class="markdownIt-Anchor" href="#使用方法-14"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bool=arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">           <span class="keyword">return</span> item&gt;<span class="number">4</span>;</span><br><span class="line">       &#125;);</span><br><span class="line">       <span class="built_in">console</span>.log(bool);</span><br></pre></td></tr></table></figure><h2 id="every重构"><a class="markdownIt-Anchor" href="#every重构"></a> every重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">every</span>(<span class="params">arr,fn</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!fn(arr[i],i,arr)) <span class="keyword">return</span> <span class="literal">false</span>;       <span class="comment">//当条件不满足时返回false</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">var</span> bool=every(arr,<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> item&gt;<span class="number">4</span>;<span class="comment">//返回boolean值类型</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">console</span>.log(bool);</span><br></pre></td></tr></table></figure><h2 id="fill"><a class="markdownIt-Anchor" href="#fill"></a> fill</h2><h4 id="功能-15"><a class="markdownIt-Anchor" href="#功能-15"></a> 功能：</h4><h4 id="用于将一个固定数值替换数组的元素"><a class="markdownIt-Anchor" href="#用于将一个固定数值替换数组的元素"></a> *用于将一个固定数值替换数组的元素</h4><h4 id="使用方法-15"><a class="markdownIt-Anchor" href="#使用方法-15"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">array.fill(value, start, end)</span><br><span class="line"></span><br><span class="line">参数   描述</span><br><span class="line">value必需。填充的值。</span><br><span class="line">start可选。开始填充位置。</span><br><span class="line">end    可选。停止填充位置 (默认为 array.length)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">填充 <span class="string">"Runoob"</span> 到数组的最后两个元素：</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fruits = [<span class="string">"Banana"</span>, <span class="string">"Orange"</span>, <span class="string">"Apple"</span>, <span class="string">"Mango"</span>];</span><br><span class="line">fruits.fill(<span class="string">"Runoob"</span>, <span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">Banana,Orange,Runoob,Runoob</span><br></pre></td></tr></table></figure><h2 id="fill重构"><a class="markdownIt-Anchor" href="#fill重构"></a> fill重构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="filter"><a class="markdownIt-Anchor" href="#filter"></a> filter</h2><h4 id="功能-16"><a class="markdownIt-Anchor" href="#功能-16"></a> 功能：</h4><h4 id="创建一个新的数组新数组中的元素时通过检查置顶数组中符合条件的所有元素"><a class="markdownIt-Anchor" href="#创建一个新的数组新数组中的元素时通过检查置顶数组中符合条件的所有元素"></a> *创建一个新的数组，新数组中的元素时通过检查置顶数组中符合条件的所有元素</h4><h4 id="注意-filter-不会对空数组进行检测"><a class="markdownIt-Anchor" href="#注意-filter-不会对空数组进行检测"></a> <strong>注意：</strong> filter() 不会对空数组进行检测。</h4><h4 id="注意-filter-不会改变原始数组"><a class="markdownIt-Anchor" href="#注意-filter-不会改变原始数组"></a> <strong>注意：</strong> filter() 不会改变原始数组。</h4><h4 id="使用方法-16"><a class="markdownIt-Anchor" href="#使用方法-16"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1=arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item,index,a</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// console.log(item,index,a);</span></span><br><span class="line">            <span class="keyword">return</span> item&gt;<span class="number">4</span>;<span class="comment">//当条件成立时返回 </span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">console</span>.log(arr1);</span><br><span class="line">        </span><br><span class="line">array.filter(<span class="function"><span class="keyword">function</span>(<span class="params">currentValue,index,arr</span>), <span class="title">thisValue</span>);</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">参数  描述</span></span><br><span class="line"><span class="function"><span class="title">currentValue</span>必须。当前元素的值</span></span><br><span class="line"><span class="function"><span class="title">index</span> 可选。当前元素的索引值</span></span><br><span class="line"><span class="function"><span class="title">arr</span>      可选。当前元素属于的数组对象</span></span><br></pre></td></tr></table></figure><h2 id="filter-重构"><a class="markdownIt-Anchor" href="#filter-重构"></a> filter 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">arr,fn</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a=[];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;<span class="comment">//循环数组的长度</span></span><br><span class="line">                <span class="keyword">if</span>(fn(arr[i],i,arr)) a[a.length]=arr[i]; <span class="comment">//将在arr数组中满足条件的元素储存到a数组中</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">var</span> arr1=filter(arr,<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> item&gt;<span class="number">4</span>  <span class="comment">//符合表达式的进行返回</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">console</span>.log(arr1);</span><br></pre></td></tr></table></figure><h2 id="reduce"><a class="markdownIt-Anchor" href="#reduce"></a> reduce</h2><h4 id="功能-17"><a class="markdownIt-Anchor" href="#功能-17"></a> 功能：</h4><ul><li><p>归并 arr.reduce(function(上次归并值，本次遍历的元素，索引值，数组),初始化值)；</p></li><li><p>如果没有设置初始化值，上次归并值初始值为数组的第0项，本次遍历将从下标1开始</p></li><li><p>如果设置了初始化值，上次归并值初始值就是初始化值，本次遍历将从下标0开始*</p></li></ul><h4 id="使用方法-17"><a class="markdownIt-Anchor" href="#使用方法-17"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//arr.reduce(function(上次归并值，本次遍历的元素，索引值，数组),初始化值)；</span></span><br><span class="line"> <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">       <span class="keyword">var</span> sum= arr.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">value,item,index,a</span>)</span>&#123;  <span class="comment">//上次归并值，本次遍历的元素，下标，数组</span></span><br><span class="line">           <span class="built_in">console</span>.log(value,item);</span><br><span class="line">           <span class="keyword">return</span> value+item;<span class="comment">//返回归并值</span></span><br><span class="line">        &#125;,<span class="number">100</span>);   <span class="comment">//初始化值为100</span></span><br><span class="line">        <span class="built_in">console</span>.log(sum); *<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h2 id="reduce-重构"><a class="markdownIt-Anchor" href="#reduce-重构"></a> reduce 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reduce</span>(<span class="params">arr,fn,initValue</span>)</span>&#123;                   <span class="comment">//参数为 数组  初始化值</span></span><br><span class="line">            <span class="keyword">var</span> start=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(initValue===<span class="literal">undefined</span>)&#123;<span class="comment">//如果初始化值未定义</span></span><br><span class="line">                initValue=arr[<span class="number">0</span>];<span class="comment">//将数组的第一个元素设为初始化值</span></span><br><span class="line">                start++;   </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=start;i&lt;arr.length;i++)&#123;         <span class="comment">//当初始化值为第一个元素时，从第二个开始归并</span></span><br><span class="line">                initValue=fn(initValue,arr[i],i,arr)   <span class="comment">//桥接模式</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> initValue; <span class="comment">//返回初始值也就是归并值</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line">       <span class="keyword">var</span> sum=reduce(arr,<span class="function"><span class="keyword">function</span>(<span class="params">value,item</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> value+item;                      <span class="comment">//返回归并值</span></span><br><span class="line">        &#125;,<span class="number">100</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(sum);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> sum=arr.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">value,item</span>)</span>&#123;       <span class="comment">//调用归并函数</span></span><br><span class="line">            <span class="built_in">console</span>.log(value);</span><br><span class="line">        &#125;,<span class="literal">null</span>)</span><br></pre></td></tr></table></figure><h2 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> reverse</h2><h4 id="功能-18"><a class="markdownIt-Anchor" href="#功能-18"></a> 功能：</h4><h4 id="倒序不排序原数组改变返回原数组"><a class="markdownIt-Anchor" href="#倒序不排序原数组改变返回原数组"></a> * 倒序，不排序，原数组改变，返回原数组</h4><h4 id="使用方法-18"><a class="markdownIt-Anchor" href="#使用方法-18"></a> 使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">9</span>];</span><br><span class="line">arr.reverse();</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h2 id="reverse-重构"><a class="markdownIt-Anchor" href="#reverse-重构"></a> reverse 重构</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reverse</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> len=<span class="built_in">parseInt</span>(arr.length/<span class="number">2</span>);                 <span class="comment">//长度为数组长度的1/2</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;  <span class="comment">//循环一数组1/2的长度</span></span><br><span class="line">                <span class="comment">// arr[arr.length-1-i]=arr[i];   </span></span><br><span class="line">                <span class="keyword">var</span> temp=arr[arr.length<span class="number">-1</span>-i];   <span class="comment">//将最后一位赋值给临时变量</span></span><br><span class="line">                arr[arr.length<span class="number">-1</span>-i]=arr[i];   <span class="comment">//将第一位赋值给最后一位</span></span><br><span class="line">                arr[i]=temp;  <span class="comment">//将临时变量的值赋给第一位</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> arr; <span class="comment">//返回这个数组</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        reverse(arr);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h2 id="sort"><a class="markdownIt-Anchor" href="#sort"></a> sort</h2><h4 id="功能-19"><a class="markdownIt-Anchor" href="#功能-19"></a> 功能：</h4><h4 id="用于对数组的元素进行排序"><a class="markdownIt-Anchor" href="#用于对数组的元素进行排序"></a> *用于对数组的元素进行排序</h4><h4 id="使用方法-19"><a class="markdownIt-Anchor" href="#使用方法-19"></a> 使用方法：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">arrayObject.sort(sortby);</span><br><span class="line">参数描述</span><br><span class="line">sortby  可选。规定排序顺序。必须是函数。</span><br><span class="line"></span><br><span class="line">arr.sort();   <span class="comment">//按照ASCII码值进行排序</span></span><br><span class="line"> arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a-b;<span class="comment">//从大到小排列</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h2 id="sort重构"><a class="markdownIt-Anchor" href="#sort重构"></a> sort重构</h2><h4 id="冒泡排序"><a class="markdownIt-Anchor" href="#冒泡排序"></a> 冒泡排序：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr=[];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">            arr.push(i);           <span class="comment">//创建一个1-100的数组</span></span><br><span class="line">        &#125;</span><br><span class="line">        arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Math</span>.random()<span class="number">-0.5</span>;  <span class="comment">//将数组的元素设为随机数</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 冒泡排序</span></span><br><span class="line"><span class="comment">// 1、从后向前循环</span></span><br><span class="line"><span class="comment">// 2、内部从前向后循环到外层变量</span></span><br><span class="line"><span class="comment">// 3、判断前值是否大于后值，交换</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">sort1</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> len=arr.length;           <span class="comment">//循环数组的长度</span></span><br><span class="line">            <span class="keyword">while</span>(len&gt;<span class="number">0</span>)&#123;   <span class="comment">//当len小于0时停止循环</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;  <span class="comment">//循环的长度不断减小</span></span><br><span class="line">                    <span class="keyword">if</span>(arr[i]&gt;arr[i+<span class="number">1</span>])&#123;  <span class="comment">//当第一位比第二位大时</span></span><br><span class="line">                        <span class="keyword">var</span> temp=arr[i];  <span class="comment">//当前元素存放到临时变量中</span></span><br><span class="line">                        arr[i]=arr[i+<span class="number">1</span>];  <span class="comment">//将下一位元素赋值给当前元素</span></span><br><span class="line">                        arr[i+<span class="number">1</span>]=temp;  <span class="comment">//将临时变量赋给</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                len--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">           sort1(arr);</span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h4 id="选择排序"><a class="markdownIt-Anchor" href="#选择排序"></a> 选择排序</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">            arr.push(i);           <span class="comment">//创建一个1-100的数组</span></span><br><span class="line">        &#125;</span><br><span class="line">        arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Math</span>.random()<span class="number">-0.5</span>;  <span class="comment">//将数组的元素设为随机数</span></span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 选择排序</span></span><br><span class="line"><span class="comment">// 先找出最小或者最大的索引值，然后用当前的下标的元素与这个最小的元素交换</span></span><br><span class="line"><span class="comment">// 1、遍历数组</span></span><br><span class="line"><span class="comment">// 2、设置最小的索引值为当前的索引值</span></span><br><span class="line"><span class="comment">// 3、从当前的下一项开始遍历到数组的尾部</span></span><br><span class="line"><span class="comment">// 4、判断所有遍历的值中最小的值得索引值</span></span><br><span class="line"> <span class="comment">// 5、交换当前值和最小索引值的元素</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">sort2</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> minIndex;           <span class="comment">//设置一个最小数的变量</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;  <span class="comment">//从第一个数开始循环</span></span><br><span class="line">                minIndex=i;        <span class="comment">//将第一个数预设为最小数</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> j=i+<span class="number">1</span>;j&lt;arr.length;j++)&#123;    <span class="comment">//从第二个数开始循环</span></span><br><span class="line">                    minIndex=arr[minIndex]&lt;arr[j] ? minIndex : j;  <span class="comment">//比较前一位与后一位的值  将小的值存放到minIndex中</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> temp=arr[i];<span class="comment">//将两个值进行交换  将最小的值存放在a[minIndex]中</span></span><br><span class="line">                arr[i]=arr[minIndex];</span><br><span class="line">                arr[minIndex]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort2(arr);</span><br><span class="line">        <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h4 id="快速排序"><a class="markdownIt-Anchor" href="#快速排序"></a> 快速排序</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">10</span>];</span><br><span class="line">        arr=sort3(arr);</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sort3</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr.length&lt;=<span class="number">1</span>) <span class="keyword">return</span> arr;</span><br><span class="line">            <span class="keyword">var</span> left=[];</span><br><span class="line">            <span class="keyword">var</span> right=[];</span><br><span class="line">            <span class="keyword">var</span> item=arr.splice(<span class="built_in">parseInt</span>(arr.length/<span class="number">2</span>),<span class="number">1</span>)[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[i]&lt;item) left.push(arr[i]);</span><br><span class="line">                <span class="keyword">else</span> right.push(arr[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> arr1=sort3(left).concat(item,sort3(right));</span><br><span class="line">            <span class="keyword">return</span> arr1;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数组方法的重构&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组方法的重构&quot;&gt;&lt;/a&gt; 数组方法的重构&lt;/h1&gt;
&lt;h2 id=&quot;push&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#push&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js基础" scheme="https://cooli-willson.github.io/tags/js%E5%9F%BA%E7%A1%80/"/>
    
      <category term="数组" scheme="https://cooli-willson.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="重构" scheme="https://cooli-willson.github.io/tags/%E9%87%8D%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>pure主题使用方法</title>
    <link href="https://cooli-willson.github.io/2020/01/19/pure%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>https://cooli-willson.github.io/2020/01/19/pure%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2020-01-19T07:07:33.135Z</published>
    <updated>2020-01-20T17:14:37.980Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="pure主题" scheme="https://cooli-willson.github.io/categories/pure%E4%B8%BB%E9%A2%98/"/>
    
    
      <category term="hello world" scheme="https://cooli-willson.github.io/tags/hello-world/"/>
    
      <category term="pure" scheme="https://cooli-willson.github.io/tags/pure/"/>
    
  </entry>
  
</feed>
